-- ##BC平台的MYSQL建表脚本##

-- 测试用的表
CREATE TABLE BC_EXAMPLE (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    CODE VARCHAR(255),
    PRIMARY KEY (ID)
) COMMENT='测试用的表';

-- 系统标识相关模块
-- 系统资源
CREATE TABLE BC_IDENTITY_RESOURCE (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) COMMENT '全局标识',
    TYPE_ INT(1) NOT NULL COMMENT '类型：1-文件夹,2-内部链接,3-外部链接,4-HTML',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    INNER_ INT(1) NOT NULL COMMENT '是否为内置对象:0-否,1-是',
    BELONG BIGINT COMMENT '所隶属的资源',
    ORDER_ VARCHAR(100) COMMENT '排序号',
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    URL VARCHAR(255) COMMENT '地址',
    ICONCLASS VARCHAR(255) COMMENT '图标样式',
    OPTION_ TEXT COMMENT '扩展参数',
    PNAME TEXT COMMENT '所隶属模块的全名:如系统维护/组织架构/单位配置',
    PRIMARY KEY (ID)
) COMMENT='系统资源';
ALTER TABLE BC_IDENTITY_RESOURCE ADD INDEX BCIDX_RESOURCE_BELONG (BELONG);

-- 角色
CREATE TABLE BC_IDENTITY_ROLE (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    CODE VARCHAR(100) NOT NULL COMMENT '编码',
    ORDER_ VARCHAR(100) COMMENT '排序号',
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    
    UID_ VARCHAR(36) COMMENT '全局标识',
   	TYPE_ INT(1) NOT NULL COMMENT '类型',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    INNER_ INT(1) NOT NULL COMMENT '是否为内置对象:0-否,1-是',
    PRIMARY KEY (ID)
) COMMENT='角色';

-- 角色与资源的关联
CREATE TABLE BC_IDENTITY_ROLE_RESOURCE (
    RID BIGINT NOT NULL COMMENT '角色ID',
    SID BIGINT NOT NULL COMMENT '资源ID',
    PRIMARY KEY (RID,SID)
) COMMENT='角色与资源的关联：角色可以访问哪些资源';
ALTER TABLE BC_IDENTITY_ROLE_RESOURCE ADD CONSTRAINT BCFK_RS_ROLE FOREIGN KEY (RID) 
	REFERENCES BC_IDENTITY_ROLE (ID);
ALTER TABLE BC_IDENTITY_ROLE_RESOURCE ADD CONSTRAINT BCFK_RS_RESOURCE FOREIGN KEY (SID) 
	REFERENCES BC_IDENTITY_RESOURCE (ID);

-- 职务
CREATE TABLE BC_IDENTITY_DUTY (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    CODE VARCHAR(100) NOT NULL COMMENT '编码',
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    PRIMARY KEY (ID)
) COMMENT='职务';

-- 参与者的扩展属性
CREATE TABLE BC_IDENTITY_ACTOR_DETAIL (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    CREATE_DATE DATETIME COMMENT '创建时间',
    WORK_DATE DATE COMMENT 'USER-入职时间',
    SEX INT(1) DEFAULT 0 COMMENT 'USER-性别：0-未设置,1-男,2-女',
    ISO INT(1) DEFAULT 0 COMMENT 'USER-iso',
   	CARD VARCHAR(20) COMMENT 'USER-身份证',
    DUTY_ID BIGINT COMMENT 'USER-职务ID',
   	COMMENT_ VARCHAR(1000) COMMENT '备注',
    PRIMARY KEY (ID)
) COMMENT='参与者的扩展属性';
ALTER TABLE BC_IDENTITY_ACTOR_DETAIL ADD CONSTRAINT BCFK_ACTORDETAIL_DUTY FOREIGN KEY (DUTY_ID) 
	REFERENCES BC_IDENTITY_DUTY (ID);

-- 参与者
CREATE TABLE BC_IDENTITY_ACTOR (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) NOT NULL COMMENT '全局标识',
    TYPE_ INT(1) NOT NULL COMMENT '类型：1-用户,2-单位,3-部门,4-岗位',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    CODE VARCHAR(100) NOT NULL COMMENT '编码',
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    PY VARCHAR(255) COMMENT '名称的拼音',
    ORDER_ VARCHAR(100) COMMENT '同类参与者之间的排序号',
    EMAIL VARCHAR(255) COMMENT '邮箱',
    PHONE VARCHAR(255) COMMENT '联系电话',
    DETAIL_ID BIGINT COMMENT '扩展表的ID',
    INNER_ INT(1) NOT NULL COMMENT '是否为内置对象:0-否,1-是',
    PCODE VARCHAR(4000) COMMENT '隶属机构的全编码',
    PNAME VARCHAR(4000) COMMENT '隶属机构的全名',
    PRIMARY KEY (ID)
) COMMENT='参与者(代表一个人或组织，组织也可以是单位、部门、岗位、团队等)';
ALTER TABLE BC_IDENTITY_ACTOR ADD CONSTRAINT BCFK_ACTOR_ACTORDETAIL FOREIGN KEY (DETAIL_ID) 
	REFERENCES BC_IDENTITY_ACTOR_DETAIL (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BC_IDENTITY_ACTOR ADD INDEX BCIDX_ACTOR_TYPE (TYPE_);
ALTER TABLE BC_IDENTITY_ACTOR ADD INDEX BCIDX_ACTOR_CODE (CODE);
ALTER TABLE BC_IDENTITY_ACTOR ADD INDEX BCIDX_ACTOR_DETAIL (DETAIL_ID);
ALTER TABLE BC_IDENTITY_ACTOR ADD INDEX BCIDX_ACTOR_STATUSTYPE (STATUS_,TYPE_);

-- 参与者之间的关联关系
CREATE TABLE BC_IDENTITY_ACTOR_RELATION (
    TYPE_ INT(2) NOT NULL COMMENT '关联类型',
    MASTER_ID BIGINT NOT NULL COMMENT '主控方ID',
   	FOLLOWER_ID BIGINT NOT NULL COMMENT '从属方ID',
    ORDER_ VARCHAR(100) COMMENT '从属方之间的排序号',
    PRIMARY KEY (MASTER_ID,FOLLOWER_ID,TYPE_)
) COMMENT='参与者之间的关联关系';
ALTER TABLE BC_IDENTITY_ACTOR_RELATION ADD CONSTRAINT BCFK_AR_MASTER FOREIGN KEY (MASTER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ACTOR_RELATION ADD CONSTRAINT BCFK_AR_FOLLOWER FOREIGN KEY (FOLLOWER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ACTOR_RELATION ADD INDEX BCIDX_AR_TM (TYPE_, MASTER_ID),ADD INDEX BCIDX_AR_TF (TYPE_, FOLLOWER_ID);

-- ACTOR隶属信息的变动历史
CREATE TABLE BC_IDENTITY_ACTOR_HISTORY(
   ID                   BIGINT NOT NULL AUTO_INCREMENT,
   CREATE_DATE          DATETIME NOT NULL COMMENT '创建时间',
   START_DATE           DATETIME COMMENT '起始时段',
   END_DATE             DATETIME COMMENT '结束时段',
   ACTOR_TYPE           INT(1) NOT NULL COMMENT 'ACTOR类型',
   ACTOR_ID             BIGINT NOT NULL COMMENT 'ACTORID',
   ACTOR_NAME           VARCHAR(100) NOT NULL COMMENT 'ACTOR名称',
   UPPER_ID             BIGINT COMMENT '所属上级ID',
   UPPER_NAME           VARCHAR(255) COMMENT '所属上级名称',
   UNIT_ID              BIGINT COMMENT '所在单位ID',
   UNIT_NAME            VARCHAR(255) COMMENT '所在单位名称',
   PCODE VARCHAR(4000) COMMENT '隶属机构的全编码',
   PNAME VARCHAR(4000) COMMENT '隶属机构的全名',
   PRIMARY KEY (ID)
) COMMENT 'ACTOR隶属信息的变动历史';
ALTER TABLE BC_IDENTITY_ACTOR_HISTORY ADD CONSTRAINT BCFK_ACTORHISTORY_ACTOR FOREIGN KEY (ACTOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ACTOR_HISTORY ADD INDEX BCIDX_ACTORHISTORY_UPPER (UPPER_ID)
    ,ADD INDEX BCIDX_ACTORHISTORY_UNIT (UNIT_ID)
    ,ADD INDEX BCIDX_ACTORHISTORY_ACTOR (ACTOR_ID);

-- 认证信息
CREATE TABLE BC_IDENTITY_AUTH (
    ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '与ACTOR表的ID对应',
    PASSWORD VARCHAR(32) NOT NULL COMMENT '密码',
    PRIMARY KEY (ID)
) COMMENT='认证信息';
ALTER TABLE BC_IDENTITY_AUTH ADD CONSTRAINT BCFK_AUTH_ACTOR FOREIGN KEY (ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);

-- 标识生成器
CREATE TABLE BC_IDENTITY_IDGENERATOR (
  TYPE_ VARCHAR(45) NOT NULL COMMENT '分类',
  VALUE_ BIGINT NOT NULL COMMENT '当前值',
  FORMAT VARCHAR(45) COMMENT '格式模板,如“CASE-${V}”、“${T}-${V}”,V代表VALUE的值，T代表TYPE_的值' ,
  PRIMARY KEY (TYPE_)
) COMMENT = '标识生成器,用于生成主键或唯一编码用';

-- 参与者与角色的关联
CREATE TABLE BC_IDENTITY_ROLE_ACTOR (
    AID BIGINT NOT NULL COMMENT '参与者ID',
    RID BIGINT NOT NULL COMMENT '角色ID',
    PRIMARY KEY (AID,RID)
) COMMENT='参与者与角色的关联：参与者拥有哪些角色';
ALTER TABLE BC_IDENTITY_ROLE_ACTOR ADD CONSTRAINT BCFK_RA_ACTOR FOREIGN KEY (AID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ROLE_ACTOR ADD CONSTRAINT BCFK_RA_ROLE FOREIGN KEY (RID) 
	REFERENCES BC_IDENTITY_ROLE (ID);
	
-- ##系统桌面相关模块##
-- 桌面快捷方式
CREATE TABLE BC_DESKTOP_SHORTCUT (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) COMMENT '全局标识',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    ORDER_ VARCHAR(100) NOT NULL COMMENT '排序号',
    STANDALONE INT(1) NOT NULL COMMENT '是否在独立的浏览器窗口中打开',
    NAME VARCHAR(255) COMMENT '名称,为空则使用资源的名称',
    URL VARCHAR(255) COMMENT '地址,为空则使用资源的地址',
    ICONCLASS VARCHAR(255) COMMENT '图标样式',
    SID BIGINT NOT NULL DEFAULT 0 COMMENT '对应的资源ID',
    AID BIGINT NOT NULL DEFAULT 0 COMMENT '所属的参与者(如果为上级参与者,如单位部门,则其下的所有参与者都拥有该快捷方式)',
    INNER_ INT(1) NOT NULL COMMENT '是否为内置对象:0-否,1-是',
    PRIMARY KEY (ID)
) COMMENT='桌面快捷方式';
ALTER TABLE BC_DESKTOP_SHORTCUT ADD INDEX BCIDX_SHORTCUT (AID,SID) ;

-- 个人设置
CREATE TABLE BC_DESKTOP_PERSONAL (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) COMMENT '全局标识',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    FONT VARCHAR(2) NOT NULL COMMENT '字体大小，如12、14、16',
    THEME VARCHAR(255) NOT NULL COMMENT '主题名称,如BASE',
    AID BIGINT NOT NULL DEFAULT 0 COMMENT '所属的参与者',
    INNER_ INT(1) NOT NULL COMMENT '是否为内置对象:0-否,1-是',
    PRIMARY KEY (ID)
) COMMENT='个人设置';
ALTER TABLE BC_DESKTOP_PERSONAL ADD UNIQUE INDEX BCUK_PERSONAL_AID (AID) ;

-- 消息模块
CREATE TABLE BC_MESSAGE (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) COMMENT '全局标识',
    STATUS_ INT(1) NOT NULL DEFAULT 0 COMMENT '状态：0-发送中,1-已发送,2-已删除,3-发送失败',
    TYPE_ INT(1) NOT NULL DEFAULT 0 COMMENT '消息类型',
    SENDER_ID BIGINT NOT NULL COMMENT '发送者',
    SEND_DATE DATETIME NOT NULL COMMENT '发送时间',
    RECEIVER_ID BIGINT NOT NULL COMMENT '接收者',
    READ_ INT(1) NOT NULL DEFAULT 0 COMMENT '已阅标记',
    FROM_ID BIGINT COMMENT '来源标识',
    FROM_TYPE BIGINT COMMENT '来源类型',
    SUBJECT VARCHAR(255) NOT NULL COMMENT '标题',
    CONTENT TEXT COMMENT '内容',
    PRIMARY KEY (ID)
) COMMENT='消息';
ALTER TABLE BC_MESSAGE ADD CONSTRAINT BCFK_MESSAGE_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_MESSAGE ADD CONSTRAINT BCFK_MESSAGE_REVEIVER FOREIGN KEY (RECEIVER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_MESSAGE ADD INDEX BCIDX_MESSAGE_FROMID (FROM_TYPE,FROM_ID);
ALTER TABLE BC_MESSAGE ADD INDEX BCIDX_MESSAGE_TYPE (TYPE_);

-- 工作事项
CREATE TABLE BC_WORK (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    CLASSIFIER VARCHAR(500) NOT NULL COMMENT '分类词,可多级分类,级间使用/连接,如“发文类/正式发文”',
    SUBJECT VARCHAR(255) NOT NULL COMMENT '标题',
    FROM_ID BIGINT COMMENT '来源标识',
    FROM_TYPE BIGINT COMMENT '来源类型',
    FROM_INFO VARCHAR(255) COMMENT '来源描述',
    OPEN_URL VARCHAR(255) COMMENT '打开的URL模板',
    CONTENT TEXT COMMENT '内容',
    PRIMARY KEY (ID)
) COMMENT='工作事项';
ALTER TABLE BC_WORK ADD INDEX BCIDX_WORK_FROMID (FROM_TYPE,FROM_ID);

-- 待办事项
CREATE TABLE BC_WORK_TODO (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    WORK_ID BIGINT NOT NULL COMMENT '工作事项ID',
    SENDER_ID BIGINT NOT NULL COMMENT '发送者',
    SEND_DATE DATETIME NOT NULL COMMENT '发送时间',
    WORKER_ID BIGINT NOT NULL COMMENT '发送者',
    INFO VARCHAR(255) COMMENT '附加说明',
    PRIMARY KEY (ID)
) COMMENT='待办事项';
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_WORK FOREIGN KEY (WORK_ID) 
	REFERENCES BC_WORK (ID);
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_WORKER FOREIGN KEY (WORKER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);

-- 已办事项
CREATE TABLE BC_WORK_DONE (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    FINISH_DATE DATETIME NOT NULL COMMENT '完成时间',
    FINISH_YEAR INT(4) NOT NULL COMMENT '完成时间的年度',
    FINISH_MONTH INT(2) NOT NULL COMMENT '完成时间的月份(1-12)',
    FINISH_DAY INT(2) NOT NULL COMMENT '完成时间的日(1-31)',

    WORK_ID BIGINT NOT NULL COMMENT '工作事项ID',
    SENDER_ID BIGINT NOT NULL COMMENT '发送者',
    SEND_DATE DATETIME NOT NULL COMMENT '发送时间',
    WORKER_ID BIGINT NOT NULL COMMENT '发送者',
    INFO VARCHAR(255) COMMENT '附加说明',
    PRIMARY KEY (ID)
) COMMENT='已办事项';
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_WORK FOREIGN KEY (WORK_ID) 
	REFERENCES BC_WORK (ID);
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_WORKER FOREIGN KEY (WORKER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_WORK_DONE ADD INDEX BCIDX_DONEWORK_FINISHDATE (FINISH_YEAR,FINISH_MONTH,FINISH_DAY);

-- 系统日志
CREATE TABLE BC_LOG_SYSTEM (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    TYPE_ INT(1) NOT NULL COMMENT '类别：0-登录,1-主动注销,2-超时注销',
    
    FILE_DATE DATETIME NOT NULL COMMENT '创建时间',
    SUBJECT VARCHAR(500) NOT NULL COMMENT '标题',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    C_IP VARCHAR(100) COMMENT '用户机器IP',
    C_NAME VARCHAR(100) COMMENT '用户机器名称',
    C_INFO VARCHAR(1000) COMMENT '用户浏览器信息：USER-AGENT',
    S_IP VARCHAR(100) COMMENT '服务器IP',
    S_NAME VARCHAR(100) COMMENT '服务器名称',
    S_INFO VARCHAR(1000) COMMENT '服务器信息',

    CONTENT TEXT COMMENT '详细内容',
    PRIMARY KEY (ID)
) COMMENT='系统日志';
ALTER TABLE BC_LOG_SYSTEM ADD CONSTRAINT BCFK_SYSLOG_USER FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_LOG_SYSTEM ADD INDEX BCIDX_SYSLOG_CLIENT (C_IP);
ALTER TABLE BC_LOG_SYSTEM ADD INDEX BCIDX_SYSLOG_SERVER (S_IP);

-- 公告模块
CREATE TABLE BC_BULLETIN (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) NOT NULL COMMENT '关联附件的标识号',
    UNIT_ID BIGINT COMMENT '公告所属单位ID',
    SCOPE INT(1) NOT NULL COMMENT '公告发布范围：0-本单位,1-全系统',
    STATUS_ INT(1) NOT NULL COMMENT '状态:0-草稿,1-已发布,2-已过期',
   
    OVERDUE_DATE DATETIME COMMENT '过期日期：为空代表永不过期',
   	ISSUE_DATE DATETIME COMMENT '发布时间',
    ISSUER_ID BIGINT COMMENT '发布人ID',
    ISSUER_NAME VARCHAR(100) COMMENT '发布人姓名',
    
    SUBJECT VARCHAR(500) NOT NULL COMMENT '标题',
    
    FILE_DATE DATETIME NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE DATETIME COMMENT '最后修改时间',

    CONTENT TEXT NOT NULL COMMENT '详细内容',
    PRIMARY KEY (ID)
) COMMENT='公告模块';
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_ISSUER FOREIGN KEY (ISSUER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_UNIT FOREIGN KEY (UNIT_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_BULLETIN ADD INDEX BCIDX_BULLETIN_SEARCH (SCOPE,UNIT_ID,STATUS_);

-- 文档附件
CREATE TABLE BC_DOCS_ATTACH (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    PTYPE VARCHAR(36) NOT NULL COMMENT '所关联文档的类型',
    PUID VARCHAR(36) NOT NULL COMMENT '所关联文档的UID',
   
    SIZE_ BIGINT NOT NULL COMMENT '文件的大小(单位为字节)',
    COUNT_ BIGINT NOT NULL DEFAULT 0 COMMENT '文件的下载次数',
    EXT VARCHAR(10) COMMENT '文件扩展名：如PNG、DOC、MP3等',
    APPPATH INT(1) NOT NULL COMMENT '指定PATH的值是相对于应用部署目录下路径还是相对于全局配置的APP.DATA目录下的路径',
    SUBJECT VARCHAR(500) NOT NULL COMMENT '文件名称(不带路径的部分)',
    PATH VARCHAR(500) NOT NULL COMMENT '物理文件保存的相对路径(相对于全局配置的附件根目录下的子路径，如"2011/BULLETIN/XXXX.DOC")',
    
    FILE_DATE DATETIME NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE DATETIME COMMENT '最后修改时间',
    PRIMARY KEY (ID)
) COMMENT='文档附件,记录文档与其相关附件之间的关系';
ALTER TABLE BC_DOCS_ATTACH ADD CONSTRAINT BCFK_ATTACH_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_DOCS_ATTACH ADD INDEX BCIDX_ATTACH_PUID (PUID);
ALTER TABLE BC_DOCS_ATTACH ADD INDEX BCIDX_ATTACH_PTYPE (PTYPE);

-- 附件处理痕迹
CREATE TABLE BC_DOCS_ATTACH_HISTORY (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    AID BIGINT NOT NULL COMMENT '附件ID',
    TYPE_ BIGINT NOT NULL COMMENT '处理类型：0-下载,1-在线查看,2-格式转换',
    SUBJECT VARCHAR(500) NOT NULL COMMENT '简单说明',
    FORMAT VARCHAR(10) COMMENT '下载的文件格式或转换后的文件格式：如PDF、DOC、MP3等',
    
    FILE_DATE DATETIME NOT NULL COMMENT '处理时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '处理人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE DATETIME COMMENT '最后修改时间',

    C_IP VARCHAR(100) COMMENT '客户端IP',
    C_INFO VARCHAR(1000) COMMENT '浏览器信息：USER-AGENT',
    
    MEMO VARCHAR(2000) COMMENT '备注',
    PRIMARY KEY (ID)
) COMMENT='附件处理痕迹';
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_ATTACH FOREIGN KEY (AID) 
	REFERENCES BC_DOCS_ATTACH (ID);

-- 用户反馈
CREATE TABLE BC_FEEDBACK (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    UID_ VARCHAR(36) NOT NULL COMMENT '关联附件的标识号',
    STATUS_ INT(1) NOT NULL COMMENT '状态:0-草稿,1-已提交,2-已受理',
    SUBJECT VARCHAR(500) NOT NULL COMMENT '标题',
    FILE_DATE DATETIME NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE DATETIME COMMENT '最后修改时间',

    CONTENT TEXT NOT NULL COMMENT '详细内容',
    PRIMARY KEY (ID)
) COMMENT='用户反馈';
ALTER TABLE BC_FEEDBACK ADD CONSTRAINT BCFK_FEEDBACK_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_FEEDBACK ADD CONSTRAINT BCFK_FEEDBACK_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);


-- 选项模块
-- 选项分组
CREATE TABLE BC_OPTION_GROUP (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    KEY_ VARCHAR(255) NOT NULL COMMENT '键',
    VALUE_ VARCHAR(255) NOT NULL COMMENT '值',
    ORDER_ VARCHAR(100) COMMENT '排序号',
    ICON VARCHAR(100) COMMENT '图标样式',
    PRIMARY KEY (ID)
) COMMENT='选项分组';
ALTER TABLE BC_OPTION_GROUP ADD INDEX BCIDX_OPTIONGROUP_KEY (KEY_);
ALTER TABLE BC_OPTION_GROUP ADD INDEX BCIDX_OPTIONGROUP_VALUE (VALUE_);

-- 选项条目
CREATE TABLE BC_OPTION_ITEM (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    PID BIGINT NOT NULL COMMENT '所属分组的ID',
    KEY_ VARCHAR(255) NOT NULL COMMENT '键',
    VALUE_ VARCHAR(255) NOT NULL COMMENT '值',
    ORDER_ VARCHAR(100) COMMENT '排序号',
    ICON VARCHAR(100) COMMENT '图标样式',
    STATUS_ INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    PRIMARY KEY (ID)
) COMMENT='选项条目';
ALTER TABLE BC_OPTION_ITEM ADD CONSTRAINT BCFK_OPTIONITEM_OPTIONGROUP FOREIGN KEY (PID) 
	REFERENCES BC_OPTION_GROUP (ID);
ALTER TABLE BC_OPTION_ITEM ADD INDEX BCIDX_OPTIONITEM_KEY (KEY_);
ALTER TABLE BC_OPTION_ITEM ADD INDEX BCIDX_OPTIONITEM_VALUE (VALUE_);
ALTER TABLE BC_OPTION_ITEM ADD INDEX BCIDX_OPTIONITEM_PID (PID);

-- 调度任务配置
CREATE TABLE BC_SD_JOB (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    STATUS_ INT(1)  NOT NULL COMMENT '状态：0-启用中,1-已禁用,2-已删除,3-正在运行,4-暂停',
    NAME VARCHAR(255) NOT NULL COMMENT '名称',
    GROUPN VARCHAR(255) NOT NULL COMMENT '分组名',
    CRON VARCHAR(255) NOT NULL COMMENT '表达式',
    BEAN VARCHAR(255) NOT NULL COMMENT '要调用的SpringBean名',
    METHOD VARCHAR(255) NOT NULL COMMENT '要调用的SpringBean方法名',
    IGNORE_ERROR INT(1) NOT NULL COMMENT '发现异常是否忽略后继续调度:0-否,1-是',
    ORDER_ VARCHAR(100) COMMENT '排序号',
    NEXT_DATE datetime COMMENT '任务的下一运行时间',
    MEMO_ VARCHAR(1000) COMMENT '备注',
    PRIMARY KEY (ID)
) COMMENT='调度任务配置';

-- 任务调度日志
CREATE TABLE BC_SD_LOG (
    ID BIGINT NOT NULL AUTO_INCREMENT,
    SUCCESS INT(1) NOT NULL COMMENT '任务是否处理成功:0-失败,1-成功',
    START_DATE datetime NOT NULL COMMENT '任务的启动时间',
    END_DATE datetime NOT NULL COMMENT '任务的结束时间',
    CFG_CRON VARCHAR(255) NOT NULL COMMENT '对应ScheduleJob的cron',
    CFG_NAME VARCHAR(255) COMMENT '对应ScheduleJob的name',
    CFG_GROUP VARCHAR(255) COMMENT '对应ScheduleJob的groupn',
    CFG_BEAN VARCHAR(255) COMMENT '对应ScheduleJob的bean',
    CFG_METHOD VARCHAR(255) COMMENT '对应ScheduleJob的method',
    ERROR_TYPE VARCHAR(255) COMMENT '异常分类',
    MSG TEXT COMMENT '异常信息',
    PRIMARY KEY (ID)
) COMMENT='任务调度日志';
-- ##bc平台的 mysql 自定义函数和存储过程##

DELIMITER $$ 
DROP PROCEDURE IF EXISTS update_actor_pcodepname $$ 
-- 创建更新actor的pcode和pname的存储过程：会递归处理下级单位和部门
-- pid: actor所隶属上级的id，为0代表顶层单位
CREATE PROCEDURE update_actor_pcodepname(pid bigint)
BEGIN
	-- 定义变量
	DECLARE done INT DEFAULT 0;
	DECLARE pfcode varchar(4000);
	DECLARE pfname varchar(4000);
	DECLARE cid bigint;
	DECLARE ct bigint;
	DECLARE pid1 bigint;

	-- 定义游标
	DECLARE curChilden CURSOR FOR select a.id,a.type_ from bc_identity_actor a inner join bc_identity_actor_relation r on r.follower_id = a.id 
		where r.type_=0 and r.master_id=pid order by a.order_;
	DECLARE curTops CURSOR FOR select a.id from bc_identity_actor a where a.type_=1 and not exists 
		(select r.follower_id from bc_identity_actor_relation r where r.type_=0 and a.id=r.follower_id)
		order by a.order_;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;

	-- 启用存储过程的递归调用
	SET @@max_sp_recursion_depth = 10; 

	if pid > 0 then
		select concat((case when pcode is null then '' else concat(pcode,'/') end),'[',type_,']',code)
			,concat((case when pname is null then '' else concat(pname,'/') end),name)
			into pfcode,pfname from bc_identity_actor where id=pid;
		open curChilden;
		REPEAT
			fetch curChilden into cid,ct;
			IF NOT done THEN
				update bc_identity_actor a set a.pcode=pfcode,a.pname=pfname where a.id=cid;
				if ct < 3 then 
					-- 单位或部门执行递归处理
					call update_actor_pcodepname(cid);
				end if;
			END IF;
		UNTIL done END REPEAT;
		close curChilden;
	else
		open curTops;
		REPEAT
			fetch curTops into pid1;
			IF NOT done THEN
				call update_actor_pcodepname(pid1);
			END IF;
		UNTIL done END REPEAT;
		close curTops;
	end if; 
END $$ 
DELIMITER ; 

DELIMITER $$ 
DROP PROCEDURE IF EXISTS update_resource_pname $$ 
-- 创建更新resource的pname的存储过程：会递归处理下级资源
-- pid: resource所隶属的id，为0代表顶层资源
CREATE PROCEDURE update_resource_pname(pid bigint)
BEGIN
	-- 定义变量
	DECLARE done INT DEFAULT 0;
	DECLARE pfname varchar(4000);
	DECLARE cid bigint;
	DECLARE ct bigint;
	DECLARE pid1 bigint;

	-- 定义游标
	DECLARE curChilden CURSOR FOR select r.id,r.type_ from bc_identity_resource r where r.belong = pid order by r.order_;
	DECLARE curTops CURSOR FOR select r.id from bc_identity_resource r where r.belong is null order by r.order_;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;

	-- 启用存储过程的递归调用
	SET @@max_sp_recursion_depth = 10; 

	if pid > 0 then
		select concat((case when pname is null then '' else concat(pname,'/') end),name)
        	into pfname from bc_identity_resource where id=pid;
		open curChilden;
		REPEAT
			fetch curChilden into cid,ct;
			IF NOT done THEN
				update bc_identity_resource r set r.pname=pfname where r.id=cid;
				if ct = 1 then 
					-- 分类型资源执行递归处理
					call update_resource_pname(cid);
				end if;
			END IF;
		UNTIL done END REPEAT;
		close curChilden;
	else
		open curTops;
		REPEAT
			fetch curTops into pid1;
			IF NOT done THEN
				call update_resource_pname(pid1);
			END IF;
		UNTIL done END REPEAT;
		close curTops;
	end if; 
END $$ 
DELIMITER ; 
-- 数据转换记录
CREATE TABLE DC_RECORD(
  TYPE_         VARCHAR(255) NOT NULL COMMENT '类型',
  FROM_ID       BIGINT NOT NULL COMMENT '旧表数据ID',
  TO_ID         BIGINT NOT NULL COMMENT '新表数据的ID',
  FROM_TABLE    VARCHAR(255) COMMENT '旧数据表名',
  TO_TABLE      VARCHAR(255) COMMENT '新数据表名',
  CREATE_DATE   DATETIME NOT NULL COMMENT '创建时间',
  REMARK        VARCHAR(4000) COMMENT '备注说明',
  MODIFIED_DATE DATETIME COMMENT '最后修改时间'
) COMMENT '数据转换记录';
ALTER TABLE DC_RECORD ADD CONSTRAINT BSUK_RECORD UNIQUE (TYPE_, FROM_ID);


-- bc营运管理子系统的建表脚本,所有表名须附带前缀"BS_"
-- 运行此脚本之前需先运行平台的建表脚本framework.db.mysql.create.sql

-- 车队信息
CREATE TABLE BS_MOTORCADE(
   ID                   BIGINT NOT NULL auto_increment,
   UID_                 VARCHAR(36),
   CODE                 VARCHAR(255) COMMENT '编码',
   NAME                 VARCHAR(255) NOT NULL COMMENT '简称',
   FULLNAME             VARCHAR(255) COMMENT '全称',
   PAYMENT_DATE         DATETIME COMMENT '缴费日期',
   COMPANY              VARCHAR(255) COMMENT '公司',
   COLOR                VARCHAR(255) COMMENT '颜色',
   ADDRESS              VARCHAR(255) COMMENT '地址',
   PRINCIPAL            VARCHAR(500) COMMENT '负责人',
   PHONE                VARCHAR(255) COMMENT '电话',
   FAX                  VARCHAR(255) COMMENT '传真',
   DESC_                VARCHAR(4000) COMMENT '备注',
   STATUS_              INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   PRIMARY KEY (ID)
) COMMENT '车队';
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

-- 车队历史车辆数
CREATE TABLE BS_MOTORCADE_CARQUANTITY(
   ID                   BIGINT NOT NULL auto_increment,
   MOTORCADE_ID         BIGINT NOT NULL COMMENT '所属车队ID',
   YEAR_                NUMERIC(4,0) NOT NULL COMMENT '年份',
   MONTH_               NUMERIC(2,0) NOT NULL COMMENT '月份',
   QUANTITY             BIGINT NOT NULL COMMENT '车辆数',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   PRIMARY KEY (ID)
) COMMENT '车队历史车辆数';
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_MOTORCADE FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);


-- 车队负责人信息
create table BS_CHARGER (
    ID BIGINT NOT NULL auto_increment,
    UID_ varchar(36) NOT NULL  COMMENT '关联附件的标识号',
    CARD varchar(255)  COMMENT '身份证',
    NAME varchar(255) NOT NULL COMMENT '姓名',
    SEX varchar(100)  COMMENT '性别',
    IDADDRESS varchar(255)  COMMENT '身份证地址',
    TWIC varchar(255)  COMMENT '资格证',
    BRITHDATE datetime COMMENT '出生日期',
    PHONE varchar(255)  COMMENT '电话',
    ORDERID varchar(255)  COMMENT '排序号',
    UNIT varchar(255)  COMMENT '分支机构',
    AREA varchar(255)  COMMENT '区域',
    TEMPORARYADDRESS varchar(255)  COMMENT '暂住地址',
    NATIVEPLACE varchar(255)  COMMENT '籍贯',
    DESC_ text COMMENT '备注',
   
    FILE_DATE datetime NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE datetime COMMENT '最后修改时间',
    STATUS_ int(1)  COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    
    primary key (ID)
) COMMENT='车队负责人信息';
ALTER TABLE BS_CHARGER ADD CONSTRAINT BS_CHARGER_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
	

-- 证件
create table BS_CERT (
    ID BIGINT NOT NULL auto_increment,
    STATUS_ int(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    UID_ varchar(36) NOT NULL,
    TYPE_ int(1) NOT NULL COMMENT '证件类型：居民身份证、机动车驾驶证、从业资格证、服务资格证、驾驶培训证、机动车行驶证、道路运输证',
    CERT_CODE varchar(255) NOT NULL COMMENT '证件号',
    CERT_NAME varchar(255) NOT NULL COMMENT '证件简称',
    CERT_FULL_NAME varchar(255) COMMENT '证件全称',
    LICENCER varchar(255) COMMENT '发证机关',
    ISSUE_DATE datetime COMMENT '发证日期',
    START_DATE datetime COMMENT '生效日期',
    END_DATE datetime COMMENT '到期日期',
    EXT_STR1 varchar(255),
    EXT_STR2 varchar(255),
    EXT_STR3 varchar(255),
    EXT_NUM1 int(19),
    EXT_NUM2 int(19),
    EXT_NUM3 int(19),
    
    FILE_DATE datetime NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE datetime COMMENT '最后修改时间',
    primary key (ID)
) COMMENT='证件';
ALTER TABLE BS_CERT ADD CONSTRAINT BS_CERT_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CERT ADD CONSTRAINT BS_CERT_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CERT ADD INDEX BSIDX_CERT_CODE (CERT_CODE);
ALTER TABLE BS_CERT ADD INDEX BSIDX_CERT_NAME (CERT_NAME);

-- 证件:居民身份证
create table BS_CERT_IDENTITY (
    ID BIGINT NOT NULL,
    NAME varchar(255) COMMENT '姓名',
    SEX int(1) COMMENT '性别(0-未设置,1-男,2-女)',
    BIRTHDATE datetime COMMENT '出生日期',
    NATION varchar(255) COMMENT '民族',
    ADDRESS varchar(500) COMMENT '住址',
    primary key (ID)
) COMMENT='证件:居民身份证';
ALTER TABLE BS_CERT_IDENTITY ADD CONSTRAINT BSFK_CERT4IDENTITY_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:机动车驾驶证
create table BS_CERT_DRIVING (
    ID BIGINT NOT NULL,
    NAME varchar(255) COMMENT '姓名',
    SEX int(1) COMMENT '性别(0-未设置,1-男,2-女)',
    BIRTHDATE datetime COMMENT '出生日期',
    NATION varchar(255) COMMENT '国籍',
    ADDRESS varchar(500) COMMENT '地址',
    MODEL varchar(255) COMMENT '准驾车型',
    RECEIVEDATE datetime COMMENT '初次领证日期',
    VALIDFOR varchar(255) COMMENT '有效期限',
    ARCHIVENO varchar(255) COMMENT '档案编号',
    RECORD varchar(255) COMMENT '记录',
    primary key (ID)
) COMMENT='证件:机动车驾驶证';
ALTER TABLE BS_CERT_DRIVING ADD CONSTRAINT BSFK_CERT4DRIVING_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:从业资格证
create table BS_CERT_CYZG (
    ID BIGINT NOT NULL,
   NAME                 varchar(255) comment '姓名',
   SEX                  int(1) comment '性别(0-未设置,1-男,2-女)',
   BIRTHDATE            datetime comment '出生日期',
   NATION               varchar(255) comment '民族',
   ADDRESS              varchar(500) comment '住址',
   SCOPE_               varchar(255) comment '从业资格',
   IDENTITY_NO          varchar(255) comment '身份证件号',
   SERVICE_UNIT         varchar(500) comment '服务单位',
   primary key (ID)
) COMMENT '证件:从业资格证';
ALTER TABLE BS_CERT_CYZG ADD CONSTRAINT BSFK_CERT4CYZG_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:服务资格证
create table BS_CERT_FWZG (
    ID BIGINT NOT NULL,
   NAME                 varchar(255) comment '姓名',
   SEX                  int(1) comment '性别(0-未设置,1-男,2-女)',
   BIRTHDATE            datetime comment '出生日期',
   NATION               varchar(255) comment '民族',
   ADDRESS              varchar(500) comment '住址',
   LEVEL_               varchar(255) comment '等级',
   SERVICE_UNIT         varchar(500) comment '服务单位',
   primary key (ID)
)COMMENT '证件:服务资格证';
ALTER TABLE BS_CERT_FWZG ADD CONSTRAINT BSFK_CERT4FWZG_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:驾驶培训证
create table BS_CERT_JSPX (
    ID BIGINT NOT NULL,
   NAME                 varchar(255) comment '姓名',
   SEX                  int(1) comment '性别(0-未设置,1-男,2-女)',
   BIRTHDATE            datetime comment '出生日期',
   NATION               varchar(255) comment '民族',
   ADDRESS              varchar(500) comment '住址',
   DOMAIN               varchar(255) comment '培训专业',
   TRAIN_DATE           datetime comment '培训时间',
   TRAIN_HOUR           int(3) comment '培训学时',
   GRADE1               int(3) comment '理论知识考核成绩',
   GRADE2               varchar(10) comment '操作技能考核成绩',
   GRADE3               varchar(10) comment '评定成绩',
   IDENTITY_NO          varchar(255) comment '身份证件号',
   primary key (ID)
)COMMENT '证件:驾驶培训证';
ALTER TABLE BS_CERT_JSPX ADD CONSTRAINT BSFK_CERT4JSPX_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);
    
-- 证件：机动车行驶证
CREATE TABLE BS_CERT_VEHICELICENSE(
   ID                   BIGINT NOT NULL,
   FACTORY              VARCHAR(255) COMMENT '品牌型号，如“桑塔纳SVW7182QQD”',
   PLATE                VARCHAR(255) COMMENT '车牌及号码，如“粤AC4X74”',
   OWNER                VARCHAR(255) COMMENT '业户名称',
   ADDRESS              VARCHAR(255) COMMENT '地址',
   USE_CHARACTER        VARCHAR(255) COMMENT '使用性质',
   VEHICE_TYPE          VARCHAR(255) COMMENT '车辆类型',
   VIN                  VARCHAR(255) COMMENT '车辆识别代号',
   ENGINE_NO            VARCHAR(255) COMMENT '发动机号码',
   REGISTER_DATE        DATETIME COMMENT '注册日期',
   ARCHIVE_NO           VARCHAR(255) COMMENT '档案编号',
   DIM_LEN              BIGINT COMMENT '外廓尺寸：长，单位MM',
   DIM_WIDTH            BIGINT COMMENT '外廓尺寸：宽，单位MM',
   DIM_HEIGHT           BIGINT COMMENT '外廓尺寸：高，单位MM',
   TOTAL_WEIGHT         BIGINT COMMENT '总质量，单位KG',
   CURB_WEIGHT          BIGINT COMMENT '整备质量，单位KG',
   ACCESS_WEIGHT        BIGINT COMMENT '核定载质量，单位KG',
   PULL_WEIGHT          BIGINT COMMENT '准牵引总质量，单位KG',
   ACCESS_COUNT         BIGINT COMMENT '核定载人数',
   SCRAP_DATE           DATETIME COMMENT '强制报废日期',
   DESC_                VARCHAR(500) COMMENT '备注',
   RECORD_              VARCHAR(500) COMMENT '检验记录',
   PRIMARY KEY (ID)
) COMMENT '证件：机动车行驶证';
ALTER TABLE BS_CERT_VEHICELICENSE ADD CONSTRAINT BSFK_CERT4VEHICELICENSE_CERT FOREIGN KEY (ID)
      REFERENCES BS_CERT (ID);
	  
-- 证件：道路运输证
CREATE TABLE BS_CERT_ROADTRANSPORT(
   ID                   BIGINT NOT NULL,
   FACTORY              VARCHAR(255) COMMENT '品牌型号，如“桑塔纳SVW7182QQD”',
   PLATE                VARCHAR(255) COMMENT '车牌及号码，如“粤AC4X74”',
   OWNER                VARCHAR(255) COMMENT '业户名称',
   ADDRESS              VARCHAR(255) COMMENT '地址',
   BS_CERT_NO           VARCHAR(255) COMMENT '经营许可证号',
   SEAT                 VARCHAR(255) COMMENT '吨（座）位',
   DIM_LEN              BIGINT COMMENT '外廓尺寸：长，单位MM',
   DIM_WIDTH            BIGINT COMMENT '外廓尺寸：宽，单位MM',
   DIM_HEIGHT           BIGINT COMMENT '外廓尺寸：高，单位MM',
   SCOPE_               VARCHAR(255) COMMENT '经营范围',
   LEVEL_               VARCHAR(255) COMMENT '技术等级',
   DESC_                VARCHAR(255) COMMENT '备注',
   PRIMARY KEY (ID)
) COMMENT '证件：道路运输证';
ALTER TABLE BS_CERT_ROADTRANSPORT ADD CONSTRAINT BSFK_CERT4ROADTRANSPORT_CERT FOREIGN KEY (ID)
      REFERENCES BS_CERT (ID);


-- 司机责任人
create table BS_CARMAN (
    ID BIGINT NOT NULL auto_increment,
    UID_ varchar(36) NOT NULL COMMENT 'UID',
    STATUS_ int(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
    TYPE_ int(1) default 0 NOT NULL COMMENT '类别:0-司机,1-责任人,2-司机和责任人',
    NAME varchar(255) NOT NULL COMMENT '姓名',
    ORDER_ varchar(100) COMMENT '排序号',
    SEX int(1) default 0 NOT NULL COMMENT 'user-性别：0-未设置,1-男,2-女',
    WORK_DATE datetime COMMENT '入职日期',
    ORIGIN               varchar(255) comment '籍贯',
    REGION_              varchar(255) comment '区域',
    HOUSE_TYPE           varchar(255) comment '户口类型',
    BIRTHDATE datetime comment '出生日期',
    FORMER_UNIT          varchar(255) comment '入职原单位',
    ADDRESS              varchar(500) comment '身份证住址',
    ADDRESS1             varchar(500) comment '暂住地址',
    PHONE                varchar(500) comment '电话',
    PHONE1               varchar(500) comment '电话1',
    MODEL_               varchar(255) comment '准驾车型',
	LEVEL_               VARCHAR(255) COMMENT '司机等级',
    CERT_IDENTITY        varchar(255) comment '身份证号',
    CERT_DRIVING         varchar(255) comment '驾驶证号',
    CERT_DRIVING_ARCHIVE varchar(255) comment '驾驶证档案号',
    CERT_DRIVING_FIRST_DATE datetime comment '初次领证日期',
    CERT_DRIVING_START_DATE datetime comment '驾驶证起效日期',
    CERT_DRIVING_END_DATE datetime comment '驾驶证过期日期',
    CERT_FWZG            varchar(255) comment '服务资格证号',
    CERT_CYZG            varchar(255) comment '从业资格证号',
    DRIVING_STATUS       varchar(255) comment '驾驶状态',
    EXT_FZJG             varchar(255) comment '分支机构：用于历史数据的保存',
    EXT_ZRR              varchar(255) comment '责任人：用于历史数据的保存',
    GZ                   int(1) comment '驾驶证是否广州:0-否,1-是',
    ACCESS_CERTS         varchar(255) comment '已考取证件：历史数据保存',
    DESC_                varchar(4000) comment '备注',
    FILE_DATE datetime NOT NULL COMMENT '创建时间',
    AUTHOR_ID BIGINT NOT NULL COMMENT '创建人ID',
    MODIFIER_ID BIGINT COMMENT '最后修改人ID',
    MODIFIED_DATE datetime COMMENT '最后修改时间',
    primary key (ID)
) COMMENT='司机责任人';
ALTER TABLE BS_CARMAN ADD CONSTRAINT BSFK_CARMAN_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CARMAN ADD CONSTRAINT BSFK_CARMAN_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

-- 司机责任人与证件的关联
CREATE TABLE BS_CARMAN_CERT (
    MAN_ID BIGINT NOT NULL COMMENT '司机责任人ID',
    CERT_ID BIGINT NOT NULL COMMENT '证件ID',
    PRIMARY KEY (MAN_ID,CERT_ID)
) COMMENT='司机责任人与证件的关联';
ALTER TABLE BS_CARMAN_CERT ADD CONSTRAINT BSFK_CARMANCERT_MAN FOREIGN KEY (MAN_ID) 
	REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CARMAN_CERT ADD CONSTRAINT BSFK_CARMANCERT_CERT FOREIGN KEY (CERT_ID) 
	REFERENCES BS_CERT (ID);
    
-- 车辆
CREATE TABLE BS_CAR(
   ID                   BIGINT NOT NULL auto_increment,
   UID_                 VARCHAR(36) NOT NULL,
   STATUS_              INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
   UNIT_ID        		BIGINT COMMENT '所属单位ID',
   MOTORCADE_ID         BIGINT COMMENT '所属车队ID',
   DRIVER		VARCHAR(255) COMMENT '司机信息',
   BS_TYPE              VARCHAR(255) COMMENT '营运性质',
   CODE                 VARCHAR(255) COMMENT '自编号',
   ORIGIN_NO            VARCHAR(255) COMMENT '原车号',
   PLATE_TYPE           VARCHAR(255) COMMENT '车牌归属，如“粤A”',
   PLATE_NO             VARCHAR(255) COMMENT '车牌号码，如“C4X74”',
   VIN                  VARCHAR(255) COMMENT '车辆识别代号',
   FACTORY_TYPE         VARCHAR(255) COMMENT '厂牌类型，如“桑塔纳”',
   FACTORY_MODEL        VARCHAR(255) COMMENT '厂牌型号，如“SVW7182QQD”',
   REGISTER_DATE        DATETIME COMMENT '登记日期',
   OPERATE_DATE         DATETIME COMMENT '投产日期',
   SCRAP_DATE           DATETIME COMMENT '报废日期',
   FACTORY_DATE         DATETIME COMMENT '出厂日期',
   REGISTER_NO          VARCHAR(255) COMMENT '机动车登记编号',
   LEVEL_               VARCHAR(255) COMMENT '车辆定级',
   COLOR                VARCHAR(255) COMMENT '颜色',
   ENGINE_NO            VARCHAR(255) COMMENT '发动机号码',
   ENGINE_TYPE          VARCHAR(255) COMMENT '发动机类型',
   FUEL_TYPE            VARCHAR(255) COMMENT '燃料类型，如“汽油”',
   DISPLACEMENT         BIGINT COMMENT '排量，单位ML',
   POWER                NUMERIC(19,2) COMMENT '功率，单位KW',
   TURN_TYPE            VARCHAR(255) COMMENT '转向方式，如“方向盘”',
   TIRE_COUNT           BIGINT COMMENT '轮胎数',
   TIRE_STANDARD        VARCHAR(255) COMMENT '轮胎规格',
   AXIS_DISTANCE        BIGINT COMMENT '轴距',
   AXIS_COUNT           BIGINT COMMENT '轴数',
   PIECE_COUNT          BIGINT COMMENT '后轴钢板弹簧片数',
   DIM_LEN              BIGINT COMMENT '外廓尺寸：长，单位MM',
   DIM_WIDTH            BIGINT COMMENT '外廓尺寸：宽，单位MM',
   DIM_HEIGHT           BIGINT COMMENT '外廓尺寸：高，单位MM',
   TOTAL_WEIGHT         BIGINT COMMENT '总质量，单位KG',
   ACCESS_WEIGHT        BIGINT COMMENT '核定载质量，单位KG',
   ACCESS_COUNT         BIGINT COMMENT '核定载人数',
   ORIGINAL_VALUE       NUMERIC(19,2) COMMENT '固定资产原值，单位元',
   INVOICE_NO1          VARCHAR(255) COMMENT '购车发票号',
   INVOICE_NO2          VARCHAR(255) COMMENT '购置税发票号',
   PAYMENT_TYPE         VARCHAR(255) COMMENT '缴费日',
   CERT_NO1             VARCHAR(255) COMMENT '购置税证号',
   CERT_NO2             VARCHAR(255) COMMENT '经营权使用证号',
   CERT_NO3             VARCHAR(255) COMMENT '强检证号',
   TAXIMETER_FACTORY    VARCHAR(255) COMMENT '计价器制造厂',
   TAXIMETER_TYPE       VARCHAR(255) COMMENT '计价器型号',
   TAXIMETER_NO         VARCHAR(255) COMMENT '计价器出厂编号',
   DESC1                VARCHAR(4000) COMMENT '备注1',
   DESC2                VARCHAR(4000) COMMENT '备注2',
   DESC3                VARCHAR(4000) COMMENT '备注3',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT COMMENT '创建人ID',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   PRIMARY KEY (ID)
) COMMENT '车辆';
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_MOTORCADEID FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_UNITID FOREIGN KEY (UNIT_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);

-- 车辆与证件的关联
CREATE TABLE BS_CAR_CERT(
   CAR_ID               BIGINT NOT NULL COMMENT '车辆ID',
   CERT_ID              BIGINT NOT NULL COMMENT '证件ID',
   PRIMARY KEY (CAR_ID, CERT_ID)
) COMMENT '车辆与证件的关联';
ALTER TABLE BS_CAR_CERT ADD CONSTRAINT BSFK_CAR_CERT_CARID FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_CAR_CERT ADD CONSTRAINT BSFK_CAR_CERT_CERTID FOREIGN KEY (CERT_ID)
      REFERENCES BS_CERT (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- 合同
CREATE TABLE BS_CONTRACT(
   ID                   BIGINT NOT NULL auto_increment,
   UID_                 VARCHAR(36) NOT NULL,
   STATUS_              INT(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
   WORD_NO              VARCHAR(255) COMMENT '文书号',
   CODE                 VARCHAR(255) NOT NULL COMMENT '合同号',
   TYPE_                INT(1) NOT NULL COMMENT '合同类型：如劳动合同、承包合同等',
   TRANSACTOR_ID        BIGINT NOT NULL COMMENT '经办人ID',
   SIGN_DATE            DATETIME NOT NULL COMMENT '签订日期',
   START_DATE           DATETIME NOT NULL COMMENT '生效日期',
   END_DATE             DATETIME NOT NULL COMMENT '到期日期',
   CONTENT              VARCHAR(4000) COMMENT '合同内容',
   EXT_STR1             VARCHAR(255) COMMENT '字符扩展域1',
   EXT_STR2             VARCHAR(255) COMMENT '字符扩展域2',
   EXT_STR3             VARCHAR(255) COMMENT '字符扩展域3',
   EXT_NUM1             BIGINT COMMENT '数字扩展域1',
   EXT_NUM2             BIGINT COMMENT '数字扩展域2',
   EXT_NUM3             BIGINT COMMENT '数字扩展域3',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   PRIMARY KEY (ID)
) COMMENT '合同';
ALTER TABLE BS_CONTRACT ADD CONSTRAINT BSFK_CONTRACT_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CONTRACT ADD CONSTRAINT BSFK_CONTRACT_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

-- 司机劳动合同
CREATE TABLE BS_CONTRACT_LABOUR(
   ID                   BIGINT NOT NULL,
   DRIVER_ID            BIGINT  COMMENT '司机ID',
   CAR_ID               BIGINT  COMMENT '车辆ID',
   ADDITION_PROTOCOL    INT(1) NOT NULL COMMENT '补充协议:0-无,1-有',
   PRE_INDUSTRY_NAME    VARCHAR(255) COMMENT '前身行业名称',
   PRE_INDUSTRY_TYPE    INT(1) NOT NULL COMMENT '前身工种行业:0-非特殊,1-特殊',
   HIRING_PROCEDURE     INT(1) NOT NULL COMMENT '招用工手续:0-未办,1-已办',
   DOLE                 INT(1) NOT NULL COMMENT '下岗失业补贴:0-已发,1-未发',
   CERT_NO              VARCHAR(255)  COMMENT '资格证号',
   FILING               INT(1) NOT NULL COMMENT '是否已备案',
   PRIMARY KEY (ID)
) COMMENT '司机劳动合同';
ALTER TABLE BS_CONTRACT_LABOUR ADD CONSTRAINT BSFK_CONTRACT4LABOUR_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_CONTRACT_LABOUR ADD CONSTRAINT BSFK_CONTRACT4LABOUR_CARMAN FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_CONTRACT_LABOUR ADD CONSTRAINT BSFK_CONTRACT4LABOUR_CONTRACT FOREIGN KEY (ID)
      REFERENCES BS_CONTRACT (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- 责任人合同
CREATE TABLE BS_CONTRACT_CHARGER(
   ID                   BIGINT NOT NULL,
   CAR_ID               BIGINT NOT NULL COMMENT '车辆ID',
   SIGN_TYPE            VARCHAR(255) NOT NULL COMMENT '签约类型:如新户',
   LOGOUT               INT(1) NOT NULL COMMENT '注销:0-未,1-已',
   TAKEBACK_ORIGIN      INT(1) NOT NULL COMMENT '已经收回原件:0-未1-已',
   INCLUDE_COST         INT(1) NOT NULL COMMENT '包含检审费用:0-不包含,1-包含',
   BS_TYPE		VARCHAR(255)  COMMENT '合同性质:',
   OLD_CONTENT          VARCHAR(4000) COMMENT '旧合同内容',
   PRIMARY KEY (ID)
) COMMENT '责任人合同:如承包合同';
ALTER TABLE BS_CONTRACT_CHARGER ADD CONSTRAINT BSFK_CONTRACT4CHARGER_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_CONTRACT_CHARGER ADD CONSTRAINT BSFK_CONTRACT4CHARGER_CONTRACT FOREIGN KEY (ID)
      REFERENCES BS_CONTRACT (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- 责任人与合同的关联
CREATE TABLE BS_CARMAN_CONTRACT(
   CONTRACT_ID          BIGINT NOT NULL COMMENT '合同ID',
   CARMAN_ID            BIGINT NOT NULL COMMENT '责任人ID',
   PRIMARY KEY (CARMAN_ID, CONTRACT_ID)
) COMMENT '责任人与合同的关联';
ALTER TABLE BS_CARMAN_CONTRACT ADD CONSTRAINT BSFK_CARMANCONTRACT_CARMAN FOREIGN KEY (CARMAN_ID)
      REFERENCES BS_CARMAN (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_CARMAN_CONTRACT ADD CONSTRAINT BSFK_CARMANCONTRACT_CONTRACT FOREIGN KEY (CONTRACT_ID)
      REFERENCES BS_CONTRACT_CHARGER (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

-- 司机营运车辆
CREATE TABLE BS_CAR_DRIVER(
   ID                   BIGINT NOT NULL auto_increment,
   STATUS_ int(1) NOT NULL COMMENT '状态：0-已禁用,1-启用中,2-已删除',
   DRIVER_ID            BIGINT NOT NULL COMMENT '司机ID',
   CAR_ID               BIGINT NOT NULL COMMENT '车辆ID',
   CLASSES              int(1) NOT NULL COMMENT '营运班次:如0-未定义，1-正班、2-副班、3-顶班',
   START_DATE           DATETIME COMMENT '起始时段',
   END_DATE             DATETIME COMMENT '结束时段',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   DESC_                VARCHAR(4000) COMMENT '备注',
   PRIMARY KEY (ID)
) COMMENT '司机营运车辆';
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_CARMAN FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
      
-- 司机迁移历史
CREATE TABLE BS_CARMAN_HISTORY (
   ID                   BIGINT NOT NULL auto_increment,
   TYPE_                VARCHAR(255) NOT NULL COMMENT '迁移属性，如新入职',
   DRIVER_ID            BIGINT NOT NULL COMMENT '司机ID',
   SUBJECT              VARCHAR(1000) COMMENT '其他',
   FROM_CARID           BIGINT COMMENT '迁自车辆ID',
   TO_CARID             BIGINT NOT NULL COMMENT '迁往车辆ID',
   FROM_CLASSES         VARCHAR(255) COMMENT '原营运班次:如正班、副班、顶班',
   TO_CLASSES           VARCHAR(255) NOT NULL COMMENT '新营运班次:如正班、副班、顶班',
   SHIFT_DATE           DATETIME NOT NULL COMMENT '迁移日期',
   FROM_MOTORCADEID     BIGINT COMMENT '原车队ID',
   TO_MOTORCADEID       BIGINT NOT NULL COMMENT '迁往车队ID',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   PRIMARY KEY (ID)
) COMMENT '司机迁移历史';
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BS_CARMANHISTORY_DRIVER FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BS_CARMANHISTORY_FROMCAR FOREIGN KEY (FROM_CARID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BS_CARMANHISTORY_TOCAR FOREIGN KEY (TO_CARID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BS_CARMANHISTORY_FROMMOTORCADE FOREIGN KEY (FROM_MOTORCADEID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BS_CARMANHISTORY_TOMOTORCADE FOREIGN KEY (TO_MOTORCADEID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANHISTORY_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANHISTORY_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

-- 黑名单
CREATE TABLE BS_BLACKLIST(
   ID                   BIGINT NOT NULL AUTO_INCREMENT,
   TYPE_                VARCHAR(255) NOT NULL COMMENT '限制项目',
   UNIT_ID              BIGINT COMMENT '车属单位ID',
   DRIVER_ID            BIGINT  COMMENT '司机ID',
   CAR_ID               BIGINT  COMMENT '车辆ID',
   MOTORCADE_ID         BIGINT COMMENT '车队ID',
   SUBJECT              VARCHAR(1000) NOT NULL COMMENT '主题',
   LOCK_DATE            DATETIME NOT NULL COMMENT '锁定时间',
   UNLOCK_DATE          DATETIME COMMENT '解锁时间',
   LOCKER_ID            BIGINT NOT NULL COMMENT '锁定人ID',
   UNLOCKER_ID          BIGINT COMMENT '解锁人ID',
   LOCK_REASON          VARCHAR(4000) COMMENT '锁定原因',
   UNLOCK_REASON        VARCHAR(4000) COMMENT '解锁原因',
   LEVEL_               VARCHAR(255) COMMENT '等级',
   CODE                 VARCHAR(255) COMMENT '编号',
   FILE_DATE            DATETIME NOT NULL COMMENT '创建时间',
   AUTHOR_ID            BIGINT NOT NULL COMMENT '创建人ID',
   MODIFIED_DATE        DATETIME COMMENT '最后修改时间',
   MODIFIER_ID          BIGINT COMMENT '最后修改人ID',
   PRIMARY KEY (ID)
) COMMENT '黑名单';
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_UNIT FOREIGN KEY (UNIT_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_DIRVER FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_LOCKER FOREIGN KEY (LOCKER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_MOTORCADE FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BS_BLACKLIST_UNLOCKER FOREIGN KEY (UNLOCKER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

