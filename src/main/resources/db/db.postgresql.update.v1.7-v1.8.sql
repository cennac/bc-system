-- ###########################################################################
-- 宝城综合应用系统的升级脚本
-- 数据库类型: postgresql
-- 升级版本: 从 1.7升级到 1.8
-- ###########################################################################

-- 司机人意险删表脚本
DROP TABLE IF EXISTS BS_CARMAN_RISK_INSURANT;
DROP TABLE IF EXISTS BS_CARMAN_RISK_ITEM;
DROP TABLE IF EXISTS BS_CARMAN_RISK;

-- 司机人意险
CREATE TABLE BS_CARMAN_RISK (
	ID INT NOT NULL,
	UID_ VARCHAR(32) NOT NULL,
	CODE VARCHAR(255) NOT NULL,
	BUY_TYPE INT DEFAULT 0 NOT NULL,
	STATUS_ INT DEFAULT 0 NOT NULL,
	COMPANY VARCHAR(255) NOT NULL,
	HOLDER VARCHAR(255) NOT NULL,
	START_DATE DATE NOT NULL,
	END_DATE DATE,
	AUTHOR_ID INT NOT NULL,
	FILE_DATE TIMESTAMP NOT NULL,
	MODIFIER_ID INT,
	MODIFIED_DATE TIMESTAMP,
	CONSTRAINT BCPK_CARMAN_RISK PRIMARY KEY (ID),
	CONSTRAINT BSUK_CARMAN_RISK_CODE UNIQUE (CODE)
);
COMMENT ON TABLE BS_CARMAN_RISK IS '司机人意险';
COMMENT ON COLUMN BS_CARMAN_RISK.ID IS 'ID';
COMMENT ON COLUMN BS_CARMAN_RISK.UID_ IS 'UID';
COMMENT ON COLUMN BS_CARMAN_RISK.CODE IS '保单号';
COMMENT ON COLUMN BS_CARMAN_RISK.BUY_TYPE IS '购买类型 : 0-未知,1-公司,2-自买';
COMMENT ON COLUMN BS_CARMAN_RISK.STATUS_ IS '状态:未使用的保留字段';
COMMENT ON COLUMN BS_CARMAN_RISK.COMPANY IS '保险公司';
COMMENT ON COLUMN BS_CARMAN_RISK.HOLDER IS '投保人';
COMMENT ON COLUMN BS_CARMAN_RISK.START_DATE IS '开始日期';
COMMENT ON COLUMN BS_CARMAN_RISK.END_DATE IS '结束日期 : 为空代表长期有效';
COMMENT ON COLUMN BS_CARMAN_RISK.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CARMAN_RISK.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CARMAN_RISK.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CARMAN_RISK.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_CARMAN_RISK ADD CONSTRAINT BCFK_CARMAN_RISK_MODIFIER FOREIGN KEY (MODIFIER_ID)
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE BS_CARMAN_RISK ADD CONSTRAINT BCFK_CARMAN_RISK_AUTHOR FOREIGN KEY (AUTHOR_ID)
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

-- 司机人意险的被投保人
CREATE TABLE BS_CARMAN_RISK_INSURANT (
	RISK_ID INT NOT NULL,
	MAN_ID INT NOT NULL,
	CONSTRAINT BCPK_CARMAN_RISK_INSURANT PRIMARY KEY (RISK_ID, MAN_ID)
);
COMMENT ON TABLE BS_CARMAN_RISK_INSURANT IS '司机人意险的被投保人';
COMMENT ON COLUMN BS_CARMAN_RISK_INSURANT.RISK_ID IS '所属人意险ID';
COMMENT ON COLUMN BS_CARMAN_RISK_INSURANT.MAN_ID IS '被保险人ID';
ALTER TABLE BS_CARMAN_RISK_INSURANT ADD CONSTRAINT BCFK_CARMAN_RISK_INSURANT_MANID FOREIGN KEY (MAN_ID)
	REFERENCES BS_CARMAN (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE BS_CARMAN_RISK_INSURANT ADD CONSTRAINT BCFK_CARMAN_RISK_INSURANT_RISKID FOREIGN KEY (RISK_ID)
	REFERENCES BS_CARMAN_RISK (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

-- 司机人意险购买的险种
CREATE TABLE BS_CARMAN_RISK_ITEM (
	ID INT NOT NULL,
	PID INT NOT NULL,
	ORDER_ INT NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	COVERAGE VARCHAR(255) NOT NULL,
	PREMIUM VARCHAR(255) NOT NULL,
	DESC_ VARCHAR(4000),
	CONSTRAINT BCPK_CARMAN_RISK_ITEM PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CARMAN_RISK_ITEM IS '司机人意险购买的险种';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.ID IS 'ID';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.PID IS '所属人意险ID';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.ORDER_ IS '排序号';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.NAME IS '名称';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.COVERAGE IS '保额';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.PREMIUM IS '保费';
COMMENT ON COLUMN BS_CARMAN_RISK_ITEM.DESC_ IS '备注';
ALTER TABLE BS_CARMAN_RISK_ITEM ADD CONSTRAINT BCFK_CARMAN_RISK_ITEM_PID FOREIGN KEY (PID)
	REFERENCES BS_CARMAN_RISK (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

-- 司机人意险资源、角色
insert into BC_IDENTITY_RESOURCE (ID,STATUS_,INNER_,TYPE_,BELONG,ORDER_,NAME,URL,ICONCLASS)
	select NEXTVAL('CORE_SEQUENCE'), 0, false, 2, m.id, '030700','司机人意险', '/bc-business/carManRisks/paging?vt=man', 'i0401' 
	from BC_IDENTITY_RESOURCE m where m.order_='030300'
	and not exists (select 0 from BC_IDENTITY_RESOURCE where order_='030700');
insert into BC_IDENTITY_ROLE (ID, STATUS_,INNER_,TYPE_,ORDER_,CODE,NAME) 
	select NEXTVAL('CORE_SEQUENCE'), 0, false, 0, '0104', 'BS_DRIVER_RISK_MANAGE','司机人意险管理' 
	from BC_dual
	where not exists (select 0 from BC_IDENTITY_ROLE where CODE='BS_DRIVER_RISK_MANAGE');
insert into BC_IDENTITY_ROLE_RESOURCE (RID,SID) 
	select r.id,m.id from BC_IDENTITY_ROLE r,BC_IDENTITY_RESOURCE m 
	where r.code='BS_DRIVER_RISK_MANAGE' 
	and m.type_ > 1 and m.order_ in ('030700')
	and not exists (select 0 from BC_IDENTITY_ROLE_RESOURCE rm where rm.rid=r.id and rm.sid=m.id);


-- 让超级管理岗拥有司机人意险管理角色
insert into BC_IDENTITY_ROLE_ACTOR (AID,RID) 
	select a.id, r.id from BC_IDENTITY_ACTOR a,BC_IDENTITY_ROLE r
	where a.code='chaojiguanligang' and r.code='BS_DRIVER_RISK_MANAGE'
	and not exists (select 0 from BC_IDENTITY_ROLE_ACTOR ra where ra.aid=a.id and ra.rid=r.id);
-- 让指定用户拥有司机人意险管理角色
insert into BC_IDENTITY_ROLE_ACTOR (AID,RID) 
	select a.id, r.id from BC_IDENTITY_ACTOR a,BC_IDENTITY_ROLE r
	where a.code in ('wing') and r.code='BS_DRIVER_RISK_MANAGE'
	and not exists (select 0 from BC_IDENTITY_ROLE_ACTOR ra where ra.aid=a.id and ra.rid=r.id);

-- 通用角色可访问司机人意险资源
insert into BC_IDENTITY_ROLE_RESOURCE (RID,SID) 
	select r.id,m.id from BC_IDENTITY_ROLE r,BC_IDENTITY_RESOURCE m where r.code='BC_COMMON' 
	and m.type_ > 1 and m.order_ in ('030700')
	and not exists (select 0 from BC_IDENTITY_ROLE_RESOURCE rm where rm.rid=r.id and rm.sid=m.id);

-- 插入人意险数据导入模板
insert into BC_TEMPLATE (ID,UID_,STATUS_,ORDER_,CATEGORY,CODE,VERSION_,FORMATTED,INNER_
	,PATH,SIZE_,SUBJECT,DESC_,TYPE_ID,FILE_DATE,AUTHOR_ID) 
	select NEXTVAL('CORE_SEQUENCE'),'Template.mt.'||NEXTVAL('CORE_SEQUENCE'),0
	,'2010','营运系统/数据导入模板','IMPORT_CARMAN_RISK','1.0',false,false
	,'bs/ImportCarManRisk.xls',36152,'司机人意险数据导入模板',null
	,(select id from BC_TEMPLATE_TYPE where code='xls'),now()
	,(select id from BC_IDENTITY_ACTOR_HISTORY where current=true and actor_name='系统管理员')
	from bc_dual where not exists (select 0 from BC_TEMPLATE where code='IMPORT_CARMAN_RISK');

-- 根据司机ID查找人意险的状态描述信息：长期|有效|已过期|未购买
DROP FUNCTION getCarManRiskStatus(integer);
CREATE OR REPLACE FUNCTION getCarManRiskStatus(carMan_id integer)
	RETURNS CHARACTER VARYING AS
$BODY$
DECLARE
	-- 定义变量
	status_ varchar(10);
BEGIN
	select case when r.end_date is null then '长期' 
		when r.end_date >= current_date then '有效' 
		else '已过期' end
		from bs_carman_risk_insurant ri
		inner join bs_carman_risk r on r.id=ri.risk_id
		where ri.man_id = carMan_id
		order by r.end_date desc limit 1
		into status_;
	IF status_ is null THEN
		status_:= '未购买';
	END IF;

	RETURN status_;
END;
$BODY$
LANGUAGE plpgsql;
