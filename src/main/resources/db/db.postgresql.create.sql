-- ##bc平台的 postgresql 建表脚本##

-- 创建Identity用的序列，开始于1000
CREATE sequence CORE_SEQUENCE
    minvalue 1
    start with 1000
    increment by 1
    cache 20;

-- 创建序列，开始于1千万，方便历史数据的转换
CREATE sequence HIBERNATE_SEQUENCE
    minvalue 1
    start with 10000000
    increment by 1
    cache 20;

-- 测试用的表
CREATE TABLE BC_EXAMPLE (
    ID INTEGER NOT NULL,
    NAME varchar(255) NOT NULL,
    CODE varchar(255),
    PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_EXAMPLE IS '测试用的表';
COMMENT ON COLUMN BC_EXAMPLE.NAME IS '名称';

-- 系统标识相关模块
-- 系统资源
CREATE TABLE BC_IDENTITY_RESOURCE (
    ID INTEGER NOT NULL,
    UID_ varchar(36),
    TYPE_ int  DEFAULT 0 NOT NULL,
    STATUS_ int  DEFAULT 0 NOT NULL,
    INNER_ boolean NOT NULL default false,
    BELONG integer,
    ORDER_ varchar(100),
    NAME varchar(255) NOT NULL,
    URL varchar(255),
    ICONCLASS varchar(255),
    OPTION_ varchar(4000),
    PNAME varchar(4000),
    CONSTRAINT BCPK_RESOURCE PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_RESOURCE IS '系统资源';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.TYPE_ IS '类型：1-文件夹,2-内部链接,3-外部链接,4-html';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.INNER_ IS '是否为内置对象:0-否,1-是';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.BELONG IS '所隶属的资源';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.ORDER_ IS '排序号';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.NAME IS '名称';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.URL IS '地址';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.ICONCLASS IS '图标样式';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.OPTION_ IS '扩展参数';
COMMENT ON COLUMN BC_IDENTITY_RESOURCE.PNAME IS '所隶属模块的全名:如系统维护/组织架构/单位配置';
CREATE INDEX BCIDX_RESOURCE_BELONG ON BC_IDENTITY_RESOURCE (BELONG);
CREATE INDEX BCIDX_RESOURCE_BELONG_NULL ON BC_IDENTITY_RESOURCE (COALESCE(BELONG,0));

-- 角色
CREATE TABLE BC_IDENTITY_ROLE (
    ID INTEGER NOT NULL,
    CODE varchar(100) NOT NULL,
    ORDER_ varchar(100),
    NAME varchar(255) NOT NULL,
    UID_ varchar(36),
    TYPE_ int  NOT NULL,
    STATUS_ int  NOT NULL,
    INNER_ boolean NOT NULL default false,
    CONSTRAINT BCPK_ROLE PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_ROLE IS '角色';
COMMENT ON COLUMN BC_IDENTITY_ROLE.CODE IS '编码';
COMMENT ON COLUMN BC_IDENTITY_ROLE.ORDER_ IS '排序号';
COMMENT ON COLUMN BC_IDENTITY_ROLE.NAME IS '名称';
COMMENT ON COLUMN BC_IDENTITY_ROLE.TYPE_ IS '类型';
COMMENT ON COLUMN BC_IDENTITY_ROLE.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_IDENTITY_ROLE.INNER_ IS '是否为内置对象:0-否,1-是';

-- 角色与资源的关联
CREATE TABLE BC_IDENTITY_ROLE_RESOURCE (
    RID integer NOT NULL,
    SID integer NOT NULL,
    CONSTRAINT BCPK_ROLE_RESOURCE PRIMARY KEY (RID,SID)
);
COMMENT ON TABLE BC_IDENTITY_ROLE_RESOURCE IS '角色与资源的关联：角色可以访问哪些资源';
COMMENT ON COLUMN BC_IDENTITY_ROLE_RESOURCE.RID IS '角色ID';
COMMENT ON COLUMN BC_IDENTITY_ROLE_RESOURCE.SID IS '资源ID';
ALTER TABLE BC_IDENTITY_ROLE_RESOURCE ADD CONSTRAINT BCFK_RS_ROLE FOREIGN KEY (RID) REFERENCES BC_IDENTITY_ROLE (ID);
ALTER TABLE BC_IDENTITY_ROLE_RESOURCE ADD CONSTRAINT BCFK_RS_RESOURCE FOREIGN KEY (SID) REFERENCES BC_IDENTITY_RESOURCE (ID);

-- 职务
CREATE TABLE BC_IDENTITY_DUTY (
    ID INTEGER NOT NULL,
    CODE varchar(100) NOT NULL,
    NAME varchar(255) NOT NULL,
    CONSTRAINT BCPK_DUTY PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_DUTY IS '职务';
COMMENT ON COLUMN BC_IDENTITY_DUTY.CODE IS '编码';
COMMENT ON COLUMN BC_IDENTITY_DUTY.NAME IS '名称';

-- 参与者的扩展属性
CREATE TABLE BC_IDENTITY_ACTOR_DETAIL (
    ID INTEGER NOT NULL,
    CREATE_DATE timestamp,
    WORK_DATE timestamp,
    ISO boolean NOT NULL default false,
    SEX int  default 0,
    CARD varchar(20),
    DUTY_ID integer,
    COMMENT_ varchar(4000),
    CONSTRAINT BCPK_ACTOR_DETAIL PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_ACTOR_DETAIL IS '参与者的扩展属性';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_DETAIL.CREATE_DATE IS '创建时间';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_DETAIL.WORK_DATE IS 'user-入职时间';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_DETAIL.SEX IS 'user-性别：0-未设置,1-男,2-女';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_DETAIL.DUTY_ID IS 'user-职务ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_DETAIL.COMMENT_ IS '备注';
ALTER TABLE BC_IDENTITY_ACTOR_DETAIL ADD CONSTRAINT BCFK_ACTORDETAIL_DUTY FOREIGN KEY (DUTY_ID) REFERENCES BC_IDENTITY_DUTY (ID);

-- 参与者
CREATE TABLE BC_IDENTITY_ACTOR (
    ID INTEGER NOT NULL,
    UID_ varchar(36) NOT NULL,
    TYPE_ int  DEFAULT 0 NOT NULL,
    STATUS_ int  DEFAULT 0 NOT NULL,
    INNER_ boolean NOT NULL default false,
    CODE varchar(100) NOT NULL,
    NAME varchar(255) NOT NULL,
    PY varchar(255),
    ORDER_ varchar(100),
    EMAIL varchar(255),
    PHONE varchar(255),
    DETAIL_ID integer,
    PCODE varchar(4000),
    PNAME varchar(4000),
    CONSTRAINT BCPK_ACTOR PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_ACTOR IS '参与者(代表一个人或组织，组织也可以是单位、部门、岗位、团队等)';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.UID_ IS '全局标识';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.TYPE_ IS '类型：0-未定义,1-单位,2-部门,3-岗位,4-用户';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.INNER_ IS '是否为内置对象:0-否,1-是';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.CODE IS '编码';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.NAME IS '名称';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.PY IS '名称的拼音';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.ORDER_ IS '同类参与者之间的排序号';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.EMAIL IS '邮箱';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.PHONE IS '联系电话';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.DETAIL_ID IS '扩展表的ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.PCODE IS '隶属机构的全编码';
COMMENT ON COLUMN BC_IDENTITY_ACTOR.PNAME IS '隶属机构的全名';
ALTER TABLE BC_IDENTITY_ACTOR ADD CONSTRAINT BCFK_ACTOR_ACTORDETAIL FOREIGN KEY (DETAIL_ID) 
	REFERENCES BC_IDENTITY_ACTOR_DETAIL (ID) ON DELETE CASCADE;
CREATE INDEX BCIDX_ACTOR_CODE ON BC_IDENTITY_ACTOR (CODE ASC);
CREATE INDEX BCIDX_ACTOR_NAME ON BC_IDENTITY_ACTOR (NAME ASC);
CREATE INDEX BCIDX_ACTOR_STATUSTYPE ON BC_IDENTITY_ACTOR (STATUS_ ASC,TYPE_ ASC);
CREATE INDEX BCIDX_ACTOR_TYPE ON BC_IDENTITY_ACTOR (TYPE_ ASC);
CREATE INDEX BCIDX_ACTOR_DETAIL ON BC_IDENTITY_ACTOR (DETAIL_ID ASC);

-- 参与者之间的关联关系
CREATE TABLE BC_IDENTITY_ACTOR_RELATION (
    TYPE_ integer NOT NULL,
    MASTER_ID integer NOT NULL,
    FOLLOWER_ID integer NOT NULL,
    ORDER_ varchar(100),
    CONSTRAINT BCPK_ACTOR_RELATION PRIMARY KEY (MASTER_ID,FOLLOWER_ID,TYPE_)
);
COMMENT ON TABLE BC_IDENTITY_ACTOR_RELATION IS '参与者之间的关联关系';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_RELATION.TYPE_ IS '关联类型';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_RELATION.MASTER_ID IS '主控方ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_RELATION.FOLLOWER_ID IS '从属方ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_RELATION.ORDER_ IS '从属方之间的排序号';
ALTER TABLE BC_IDENTITY_ACTOR_RELATION ADD CONSTRAINT BCFK_AR_MASTER FOREIGN KEY (MASTER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ACTOR_RELATION ADD CONSTRAINT BCFK_AR_FOLLOWER FOREIGN KEY (FOLLOWER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
CREATE INDEX BCIDX_AR_TM ON BC_IDENTITY_ACTOR_RELATION (TYPE_, MASTER_ID);
CREATE INDEX BCIDX_AR_TF ON BC_IDENTITY_ACTOR_RELATION (TYPE_, FOLLOWER_ID);

-- ACTOR隶属信息的变动历史
CREATE TABLE BC_IDENTITY_ACTOR_HISTORY (
   ID                   INTEGER           NOT NULL,
   PID                  integer,
   CURRENT              integer NOT NULL DEFAULT 1,
   RANK              	integer NOT NULL DEFAULT 0,
   CREATE_DATE          timestamp                 NOT NULL,
   START_DATE           timestamp,
   END_DATE             timestamp,
   ACTOR_TYPE           int            NOT NULL,
   ACTOR_ID             integer           NOT NULL,
   ACTOR_NAME           varchar(100)        NOT NULL,
   UPPER_ID             integer,
   UPPER_NAME           varchar(255),
   UNIT_ID              integer,
   UNIT_NAME            varchar(255),
   PCODE varchar(4000),
   PNAME varchar(4000),
   CONSTRAINT BCPK_ACTOR_HISTORY PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_ACTOR_HISTORY IS 'ACTOR隶属信息的变动历史';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.PID IS '对应旧记录的id';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.CURRENT IS '是否为当前配置';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.RANK IS '多个当前配置间的首选次序，数值越小级别越高，值从0开始递增，只适用于隶属多个组织的情况';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.CREATE_DATE IS '创建时间';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.START_DATE IS '起始时段';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.END_DATE IS '结束时段';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.ACTOR_TYPE IS 'ACTOR类型';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.ACTOR_ID IS 'ACTORID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.ACTOR_NAME IS 'ACTOR名称';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.UPPER_ID IS '直属上级ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.UPPER_NAME IS '直属上级名称';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.UNIT_ID IS '所在单位ID';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.UNIT_NAME IS '所在单位名称';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.PCODE IS '隶属机构的全编码';
COMMENT ON COLUMN BC_IDENTITY_ACTOR_HISTORY.PNAME IS '隶属机构的全名';
ALTER TABLE BC_IDENTITY_ACTOR_HISTORY ADD CONSTRAINT BCFK_ACTORHISTORY_PID FOREIGN KEY (PID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_IDENTITY_ACTOR_HISTORY ADD CONSTRAINT BCFK_ACTORHISTORY_ACTOR FOREIGN KEY (ACTOR_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
CREATE INDEX BCIDX_ACTORHISTORY_ACTORID ON BC_IDENTITY_ACTOR_HISTORY (ACTOR_ID ASC);
CREATE INDEX BCIDX_ACTORHISTORY_ACTORNAME ON BC_IDENTITY_ACTOR_HISTORY (ACTOR_NAME ASC);
CREATE INDEX BCIDX_ACTORHISTORY_UPPER ON BC_IDENTITY_ACTOR_HISTORY (UPPER_ID ASC);
CREATE INDEX BCIDX_ACTORHISTORY_UNIT ON BC_IDENTITY_ACTOR_HISTORY (UNIT_ID ASC);

-- 认证信息
CREATE TABLE BC_IDENTITY_AUTH (
    ID integer NOT NULL,
    PASSWORD varchar(32) NOT NULL,
    CONSTRAINT BCPK_AUTH PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDENTITY_AUTH IS '认证信息';
COMMENT ON COLUMN BC_IDENTITY_AUTH.ID IS '与Actor表的id对应';
COMMENT ON COLUMN BC_IDENTITY_AUTH.PASSWORD IS '经MD5加密的密码';
ALTER TABLE BC_IDENTITY_AUTH ADD CONSTRAINT BCFK_AUTH_ACTOR FOREIGN KEY (ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);

-- 标识生成器
CREATE TABLE BC_IDENTITY_IDGENERATOR (
  TYPE_ varchar(45) NOT NULL,
  VALUE_ integer NOT NULL,
  FORMAT varchar(45) ,
  CONSTRAINT BCPK_IDGENERATOR PRIMARY KEY (TYPE_)
);
COMMENT ON TABLE BC_IDENTITY_IDGENERATOR IS '标识生成器,用于生成主键或唯一编码用';
COMMENT ON COLUMN BC_IDENTITY_IDGENERATOR.TYPE_ IS '分类';
COMMENT ON COLUMN BC_IDENTITY_IDGENERATOR.VALUE_ IS '当前值';
COMMENT ON COLUMN BC_IDENTITY_IDGENERATOR.FORMAT IS '格式模板,如“case-${V}”、“${T}-${V}”,V代表value的值，T代表type_的值';

-- 参与者与角色的关联
CREATE TABLE BC_IDENTITY_ROLE_ACTOR (
    AID integer NOT NULL,
    RID integer NOT NULL,
    CONSTRAINT BCPK_ROLE_ACTOR PRIMARY KEY (AID,RID)
);
ALTER TABLE BC_IDENTITY_ROLE_ACTOR ADD CONSTRAINT BCFK_RA_ACTOR FOREIGN KEY (AID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_IDENTITY_ROLE_ACTOR ADD CONSTRAINT BCFK_RA_ROLE FOREIGN KEY (RID) 
	REFERENCES BC_IDENTITY_ROLE (ID);
COMMENT ON TABLE BC_IDENTITY_ROLE_ACTOR IS '参与者与角色的关联：参与者拥有哪些角色';
COMMENT ON COLUMN BC_IDENTITY_ROLE_ACTOR.AID IS '参与者ID';
COMMENT ON COLUMN BC_IDENTITY_ROLE_ACTOR.RID IS '角色ID';
	
-- ##系统桌面相关模块##
-- 桌面快捷方式
create table BC_DESKTOP_SHORTCUT (
    ID INTEGER NOT NULL,
    UID_ varchar(36),
    STATUS_ int NOT NULL,
    INNER_ boolean NOT NULL default false,
    ORDER_ varchar(100) NOT NULL,
    STANDALONE boolean NOT NULL default false,
    NAME varchar(255),
    URL varchar(255),
    ICONCLASS varchar(255),
    SID integer default 0 NOT NULL,
    AID integer default 0 NOT NULL,
    CONSTRAINT BCPK_DESKTOP_SHORTCUT primary key (ID)
);
COMMENT ON TABLE BC_DESKTOP_SHORTCUT IS '桌面快捷方式';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.UID_ IS '全局标识';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.INNER_ IS '是否为内置对象:0-否,1-是';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.STANDALONE IS '是否在独立的浏览器窗口中打开';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.NAME IS '名称,为空则使用模块的名称';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.URL IS '地址,为空则使用模块的地址';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.ICONCLASS IS '图标样式';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.SID IS '对应的资源ID';
COMMENT ON COLUMN BC_DESKTOP_SHORTCUT.AID IS '所属的参与者(如果为上级参与者,如单位部门,则其下的所有参与者都拥有该快捷方式)';
CREATE INDEX BCIDX_SHORTCUT ON BC_DESKTOP_SHORTCUT (AID,SID);

-- 个人设置
CREATE TABLE BC_DESKTOP_PERSONAL (
    ID INTEGER NOT NULL,
    UID_ varchar(36),
    STATUS_ int  NOT NULL,
    FONT varchar(2) NOT NULL,
    THEME varchar(255) NOT NULL,
    AID integer default 0 NOT NULL,
    INNER_ boolean NOT NULL default false,
    CONSTRAINT BCPK_DESKTOP_PERSONAL PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_DESKTOP_PERSONAL IS '个人设置';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.UID_ IS '全局标识';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.FONT IS '字体大小，如12、14、16';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.THEME IS '主题名称,如base';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.AID IS '所属的参与者';
COMMENT ON COLUMN BC_DESKTOP_PERSONAL.INNER_ IS '是否为内置对象:0-否,1-是';
ALTER TABLE BC_DESKTOP_PERSONAL ADD CONSTRAINT BCUK_PERSONAL_AID UNIQUE (AID);

-- 消息模块
CREATE TABLE BC_MESSAGE (
    ID INTEGER NOT NULL,
    UID_ varchar(36),
    STATUS_ int default 0 NOT NULL,
    TYPE_ int default 0 NOT NULL,
    SENDER_ID integer NOT NULL,
    SEND_DATE timestamp NOT NULL,
    RECEIVER_ID integer NOT NULL,
    READ_ int default 0 NOT NULL,
    FROM_ID integer,
    FROM_TYPE integer,
    SUBJECT varchar(255) NOT NULL,
    CONTENT varchar(4000),
    CONSTRAINT BCPK_MESSAGE PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_MESSAGE IS '消息模块';
COMMENT ON COLUMN BC_MESSAGE.STATUS_ IS '状态：0-发送中,1-已发送,2-已删除,3-发送失败';
COMMENT ON COLUMN BC_MESSAGE.TYPE_ IS '消息类型';
COMMENT ON COLUMN BC_MESSAGE.SENDER_ID IS '发送者';
COMMENT ON COLUMN BC_MESSAGE.SEND_DATE IS '发送时间';
COMMENT ON COLUMN BC_MESSAGE.RECEIVER_ID IS '接收者';
COMMENT ON COLUMN BC_MESSAGE.FROM_ID IS '来源标识';
COMMENT ON COLUMN BC_MESSAGE.FROM_TYPE IS '来源类型';
COMMENT ON COLUMN BC_MESSAGE.READ_ IS '已阅标记';
COMMENT ON COLUMN BC_MESSAGE.SUBJECT IS '标题';
COMMENT ON COLUMN BC_MESSAGE.CONTENT IS '内容';
ALTER TABLE BC_MESSAGE ADD CONSTRAINT BCFK_MESSAGE_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_MESSAGE ADD CONSTRAINT BCFK_MESSAGE_REVEIVER FOREIGN KEY (RECEIVER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
CREATE INDEX BCIDX_MESSAGE_FROMID ON BC_MESSAGE (FROM_TYPE,FROM_ID);
CREATE INDEX BCIDX_MESSAGE_TYPE ON BC_MESSAGE (TYPE_);

-- 工作事项
CREATE TABLE BC_WORK (
    ID INTEGER NOT NULL,
    CLASSIFIER varchar(500) NOT NULL,
    SUBJECT varchar(255) NOT NULL,
    FROM_ID integer,
    FROM_TYPE integer,
    FROM_INFO varchar(255),
    OPEN_URL varchar(255),
    CONTENT varchar(4000),
    CONSTRAINT BCPK_WORK PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_WORK IS '工作事项';
COMMENT ON COLUMN BC_WORK.CLASSIFIER IS '分类词,可多级分类,级间使用/连接,如“发文类/正式发文”';
COMMENT ON COLUMN BC_WORK.SUBJECT IS '标题';
COMMENT ON COLUMN BC_WORK.FROM_ID IS '来源标识';
COMMENT ON COLUMN BC_WORK.FROM_TYPE IS '来源类型';
COMMENT ON COLUMN BC_WORK.FROM_INFO IS '来源描述';
COMMENT ON COLUMN BC_WORK.OPEN_URL IS '打开的Url模板';
COMMENT ON COLUMN BC_WORK.CONTENT IS '内容';
CREATE INDEX BCIDX_WORK_FROM ON BC_WORK (FROM_TYPE,FROM_ID);

-- 待办事项
CREATE TABLE BC_WORK_TODO (
    ID INTEGER NOT NULL,
    WORK_ID integer NOT NULL,
    SENDER_ID integer NOT NULL,
    SEND_DATE timestamp NOT NULL,
    WORKER_ID integer NOT NULL,
    INFO varchar(255),
    CONSTRAINT BCPK_WORK_TODO PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_WORK_TODO IS '待办事项';
COMMENT ON COLUMN BC_WORK_TODO.WORK_ID IS '工作事项ID';
COMMENT ON COLUMN BC_WORK_TODO.SENDER_ID IS '发送者';
COMMENT ON COLUMN BC_WORK_TODO.SEND_DATE IS '发送时间';
COMMENT ON COLUMN BC_WORK_TODO.WORKER_ID IS '发送者';
COMMENT ON COLUMN BC_WORK_TODO.INFO IS '附加说明';
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_WORK FOREIGN KEY (WORK_ID) 
	REFERENCES BC_WORK (ID);
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_WORK_TODO ADD CONSTRAINT BCFK_TODOWORK_WORKER FOREIGN KEY (WORKER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);

-- 已办事项
CREATE TABLE BC_WORK_DONE (
    ID INTEGER NOT NULL,
    FINISH_DATE timestamp NOT NULL,
    FINISH_YEAR integer  NOT NULL,
    FINISH_MONTH integer  NOT NULL,
    FINISH_DAY integer  NOT NULL,
    WORK_ID integer NOT NULL,
    SENDER_ID integer NOT NULL,
    SEND_DATE timestamp NOT NULL,
    WORKER_ID integer NOT NULL,
    INFO varchar(255),
    CONSTRAINT BCPK_WORK_DONE PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_WORK_DONE IS '已办事项';
COMMENT ON COLUMN BC_WORK_DONE.FINISH_DATE IS '完成时间';
COMMENT ON COLUMN BC_WORK_DONE.FINISH_YEAR IS '完成时间的年度';
COMMENT ON COLUMN BC_WORK_DONE.FINISH_MONTH IS '完成时间的月份(1-12)';
COMMENT ON COLUMN BC_WORK_DONE.FINISH_DAY IS '完成时间的日(1-31)';
COMMENT ON COLUMN BC_WORK_DONE.WORK_ID IS '工作事项ID';
COMMENT ON COLUMN BC_WORK_DONE.SENDER_ID IS '发送者';
COMMENT ON COLUMN BC_WORK_DONE.SEND_DATE IS '发送时间';
COMMENT ON COLUMN BC_WORK_DONE.WORKER_ID IS '发送者';
COMMENT ON COLUMN BC_WORK_DONE.INFO IS '附加说明';
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_WORK FOREIGN KEY (WORK_ID) 
	REFERENCES BC_WORK (ID);
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_SENDER FOREIGN KEY (SENDER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_WORK_DONE ADD CONSTRAINT BCFK_DONEWORK_WORKER FOREIGN KEY (WORKER_ID) 
	REFERENCES BC_IDENTITY_ACTOR (ID);
CREATE INDEX BCIDX_DONEWORK_FINISHtimestamp ON BC_WORK_DONE (FINISH_YEAR,FINISH_MONTH,FINISH_DAY);


-- 系统日志
CREATE TABLE BC_LOG_SYSTEM (
    ID INTEGER NOT NULL,
    TYPE_ int  NOT NULL,
    SUBJECT varchar(500) NOT NULL,
    FILE_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    C_IP varchar(100),
    C_NAME varchar(100),
    C_INFO varchar(1000),
    S_IP varchar(100),
    S_NAME varchar(100),
    S_INFO varchar(1000),
    CONTENT varchar(4000),
    CONSTRAINT BCPK_LOG_SYSTEM PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_LOG_SYSTEM IS '系统日志';
COMMENT ON COLUMN BC_LOG_SYSTEM.TYPE_ IS '类别：0-登录,1-注销,2-超时';
COMMENT ON COLUMN BC_LOG_SYSTEM.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BC_LOG_SYSTEM.SUBJECT IS '标题';
COMMENT ON COLUMN BC_LOG_SYSTEM.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BC_LOG_SYSTEM.C_IP IS '用户机器IP';
COMMENT ON COLUMN BC_LOG_SYSTEM.C_NAME IS '用户机器名称';
COMMENT ON COLUMN BC_LOG_SYSTEM.C_INFO IS '用户浏览器信息：User-Agent';
COMMENT ON COLUMN BC_LOG_SYSTEM.S_IP IS '服务器IP';
COMMENT ON COLUMN BC_LOG_SYSTEM.S_NAME IS '服务器名称';
COMMENT ON COLUMN BC_LOG_SYSTEM.S_INFO IS '服务器信息';
COMMENT ON COLUMN BC_LOG_SYSTEM.CONTENT IS '详细内容';
ALTER TABLE BC_LOG_SYSTEM ADD CONSTRAINT BCFK_SYSLOG_USER FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
CREATE INDEX BCIDX_SYSLOG_CLIENT ON BC_LOG_SYSTEM (C_IP);
CREATE INDEX BCIDX_SYSLOG_SERVER ON BC_LOG_SYSTEM (S_IP);


-- 公告模块
CREATE TABLE BC_BULLETIN (
    ID INTEGER NOT NULL,
    UID_ varchar(36) NOT NULL,
    UNIT_ID integer,
    SCOPE int  NOT NULL,
    STATUS_ int  NOT NULL,
    OVERDUE_DATE timestamp,
    ISSUE_DATE timestamp,
    ISSUER_ID integer,
    SUBJECT varchar(500) NOT NULL,
    FILE_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    MODIFIER_ID integer,
    MODIFIED_DATE timestamp,
    CONTENT varchar(4000) NOT NULL,
    CONSTRAINT BCPK_BULLETIN PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_BULLETIN IS '公告模块';
COMMENT ON COLUMN BC_BULLETIN.UID_ IS '关联附件的标识号';
COMMENT ON COLUMN BC_BULLETIN.UNIT_ID IS '公告所属单位ID';
COMMENT ON COLUMN BC_BULLETIN.SCOPE IS '公告发布范围：0-本单位,1-全系统';
COMMENT ON COLUMN BC_BULLETIN.STATUS_ IS '状态:0-草稿,1-已发布,2-已过期';
COMMENT ON COLUMN BC_BULLETIN.OVERDUE_DATE IS '过期日期：为空代表永不过期';
COMMENT ON COLUMN BC_BULLETIN.ISSUE_DATE IS '发布时间';
COMMENT ON COLUMN BC_BULLETIN.ISSUER_ID IS '发布人ID';
COMMENT ON COLUMN BC_BULLETIN.SUBJECT IS '标题';
COMMENT ON COLUMN BC_BULLETIN.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BC_BULLETIN.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BC_BULLETIN.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BC_BULLETIN.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BC_BULLETIN.CONTENT IS '详细内容';
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_ISSUER FOREIGN KEY (ISSUER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_BULLETIN ADD CONSTRAINT BCFK_BULLETIN_UNIT FOREIGN KEY (UNIT_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
CREATE INDEX BCIDX_BULLETIN_SEARCH ON BC_BULLETIN (SCOPE,UNIT_ID,STATUS_);

-- 文档附件
CREATE TABLE BC_DOCS_ATTACH (
    ID INTEGER NOT NULL,
    STATUS_ int  NOT NULL,
    PTYPE varchar(36) NOT NULL,
    PUID varchar(36) NOT NULL,
    SIZE_ integer NOT NULL,
    COUNT_ integer default 0 NOT NULL,
    EXT varchar(10),
    APPPATH boolean NOT NULL default false,
    SUBJECT varchar(500) NOT NULL,
    PATH varchar(500) NOT NULL,
    FILE_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    MODIFIER_ID integer,
    MODIFIED_DATE timestamp,
    CONSTRAINT BCPK_ATTACH PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_DOCS_ATTACH IS '文档附件,记录文档与其相关附件之间的关系';
COMMENT ON COLUMN BC_DOCS_ATTACH.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_DOCS_ATTACH.PTYPE IS '所关联文档的类型';
COMMENT ON COLUMN BC_DOCS_ATTACH.PUID IS '所关联文档的UID';
COMMENT ON COLUMN BC_DOCS_ATTACH.SIZE_ IS '文件的大小(单位为字节)';
COMMENT ON COLUMN BC_DOCS_ATTACH.COUNT_ IS '文件的下载次数';
COMMENT ON COLUMN BC_DOCS_ATTACH.EXT IS '文件扩展名：如png、doc、mp3等';
COMMENT ON COLUMN BC_DOCS_ATTACH.APPPATH IS '指定path的值是相对于应用部署目录下路径还是相对于全局配置的app.data目录下的路径';
COMMENT ON COLUMN BC_DOCS_ATTACH.SUBJECT IS '文件名称(不带路径的部分)';
COMMENT ON COLUMN BC_DOCS_ATTACH.PATH IS '物理文件保存的相对路径(相对于全局配置的附件根目录下的子路径，如"2011/bulletin/xxxx.doc")';

COMMENT ON COLUMN BC_DOCS_ATTACH.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BC_DOCS_ATTACH.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BC_DOCS_ATTACH.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BC_DOCS_ATTACH.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BC_DOCS_ATTACH ADD CONSTRAINT BCFK_ATTACH_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_DOCS_ATTACH ADD CONSTRAINT BCFK_ATTACH_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
CREATE INDEX BCIDX_ATTACH_PUID ON BC_DOCS_ATTACH (PUID);
CREATE INDEX BCIDX_ATTACH_PTYPE ON BC_DOCS_ATTACH (PTYPE);

-- 附件处理痕迹
CREATE TABLE BC_DOCS_ATTACH_HISTORY (
    ID INTEGER NOT NULL,
    AID integer NOT NULL,
    TYPE_ integer NOT NULL,
    SUBJECT varchar(500) NOT NULL,
    FORMAT varchar(10),
    FILE_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    MODIFIER_ID integer,
    MODIFIED_DATE timestamp,
    C_IP varchar(100),
    C_INFO varchar(1000),
    MEMO varchar(2000),
    CONSTRAINT BCPK_ATTACH_HISTORY PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_DOCS_ATTACH_HISTORY IS '附件处理痕迹';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.AID IS '附件ID';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.TYPE_ IS '处理类型：0-下载,1-在线查看,2-格式转换';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.SUBJECT IS '简单说明';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.FORMAT IS '下载的文件格式或转换后的文件格式：如pdf、doc、mp3等';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.C_IP IS '客户端IP';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.C_INFO IS '浏览器信息：User-Agent';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.MEMO IS '备注';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.FILE_DATE IS '处理时间';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BC_DOCS_ATTACH_HISTORY.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_DOCS_ATTACH_HISTORY ADD CONSTRAINT BCFK_ATTACHHISTORY_ATTACH FOREIGN KEY (AID) 
	REFERENCES BC_DOCS_ATTACH (ID);

-- 用户反馈
CREATE TABLE BC_FEEDBACK (
    ID INTEGER NOT NULL,
    UID_ varchar(36) NOT NULL,
    STATUS_ int  NOT NULL,
    SUBJECT varchar(500) NOT NULL,
    FILE_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    MODIFIER_ID integer,
    MODIFIED_DATE timestamp,
    CONTENT varchar(4000) NOT NULL,
    CONSTRAINT BCPK_FEEDBACK PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_FEEDBACK IS '用户反馈';
COMMENT ON COLUMN BC_FEEDBACK.UID_ IS '关联附件的标识号';
COMMENT ON COLUMN BC_FEEDBACK.STATUS_ IS '状态:0-草稿,1-已提交,2-已受理';
COMMENT ON COLUMN BC_FEEDBACK.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BC_FEEDBACK.SUBJECT IS '标题';
COMMENT ON COLUMN BC_FEEDBACK.CONTENT IS '详细内容';
COMMENT ON COLUMN BC_FEEDBACK.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BC_FEEDBACK.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BC_FEEDBACK.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BC_FEEDBACK ADD CONSTRAINT BCFK_FEEDBACK_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_FEEDBACK ADD CONSTRAINT BCFK_FEEDBACK_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);


-- ##选项模块##
-- 选项分组
CREATE TABLE BC_OPTION_GROUP (
    ID INTEGER NOT NULL,
    KEY_ varchar(255) NOT NULL,
    VALUE_ varchar(255) NOT NULL,
    ORDER_ varchar(100),
    ICON varchar(100),
    CONSTRAINT BCPK_OPTION_GROUP PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_OPTION_GROUP IS '选项分组';
COMMENT ON COLUMN BC_OPTION_GROUP.KEY_ IS '键';
COMMENT ON COLUMN BC_OPTION_GROUP.VALUE_ IS '值';
COMMENT ON COLUMN BC_OPTION_GROUP.ORDER_ IS '排序号';
COMMENT ON COLUMN BC_OPTION_GROUP.ICON IS '图标样式';
CREATE INDEX BCIDX_OPTIONGROUP_KEY ON BC_OPTION_GROUP (KEY_);
CREATE INDEX BCIDX_OPTIONGROUP_VALUE ON BC_OPTION_GROUP (VALUE_);

-- 选项条目
CREATE TABLE BC_OPTION_ITEM (
    ID INTEGER NOT NULL,
    PID integer NOT NULL,
    KEY_ varchar(255) NOT NULL,
    VALUE_ varchar(255) NOT NULL,
    ORDER_ varchar(100),
    ICON varchar(100),
    STATUS_ int  NOT NULL,
    DESC_ varchar(1000),
    CONSTRAINT BCPK_OPTION_ITEM PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_OPTION_ITEM IS '选项条目';
COMMENT ON COLUMN BC_OPTION_ITEM.PID IS '所属分组的ID';
COMMENT ON COLUMN BC_OPTION_ITEM.KEY_ IS '键';
COMMENT ON COLUMN BC_OPTION_ITEM.VALUE_ IS '值';
COMMENT ON COLUMN BC_OPTION_ITEM.ORDER_ IS '排序号';
COMMENT ON COLUMN BC_OPTION_ITEM.ICON IS '图标样式';
COMMENT ON COLUMN BC_OPTION_ITEM.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BC_OPTION_ITEM.DESC_ IS '说明';
ALTER TABLE BC_OPTION_ITEM ADD CONSTRAINT BCFK_OPTIONITEM_OPTIONGROUP FOREIGN KEY (PID) 
	REFERENCES BC_OPTION_GROUP (ID);
CREATE INDEX BCIDX_OPTIONITEM_KEY ON BC_OPTION_ITEM (KEY_);
CREATE INDEX BCIDX_OPTIONITEM_VALUE ON BC_OPTION_ITEM (VALUE_);
CREATE INDEX BCIDX_OPTIONITEM_PID ON BC_OPTION_ITEM (PID);

-- 调度任务配置
CREATE TABLE BC_SD_JOB (
    ID INTEGER NOT NULL,
    STATUS_ int  NOT NULL,
    NAME varchar(255) NOT NULL,
    GROUPN varchar(255) NOT NULL,
    CRON varchar(255) NOT NULL,
    BEAN varchar(255) NOT NULL,
    METHOD varchar(255) NOT NULL,
    IGNORE_ERROR int NOT NULL,
    ORDER_ varchar(100),
    NEXT_DATE timestamp,
    MEMO_ varchar(1000),
    CONSTRAINT BCPK_SD_JOB PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_SD_JOB IS '调度任务配置';
COMMENT ON COLUMN BC_SD_JOB.NAME IS '名称';
COMMENT ON COLUMN BC_SD_JOB.BEAN IS '要调用的SpringBean名';
COMMENT ON COLUMN BC_SD_JOB.METHOD IS '要调用的SpringBean方法名';
COMMENT ON COLUMN BC_SD_JOB.IGNORE_ERROR IS '发现异常是否忽略后继续调度:0-否,1-是';
COMMENT ON COLUMN BC_SD_JOB.MEMO_ IS '备注';
COMMENT ON COLUMN BC_SD_JOB.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除,3-正在运行,4-暂停';
COMMENT ON COLUMN BC_SD_JOB.GROUPN IS '分组名';
COMMENT ON COLUMN BC_SD_JOB.CRON IS '表达式';
COMMENT ON COLUMN BC_SD_JOB.ORDER_ IS '排序号';
COMMENT ON COLUMN BC_SD_JOB.NEXT_DATE IS '任务的下一运行时间';

-- 任务调度日志
CREATE TABLE BC_SD_LOG (
    ID INTEGER NOT NULL,
    SUCCESS int  NOT NULL,
    START_DATE timestamp NOT NULL,
    END_DATE timestamp NOT NULL,
    CFG_CRON varchar(255) NOT NULL,
    CFG_NAME varchar(255),
    CFG_GROUP varchar(255),
    CFG_BEAN varchar(255),
    CFG_METHOD varchar(255),
    ERROR_TYPE varchar(255),
    MSG text,
    CONSTRAINT BCPK_SD_LOG PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_SD_LOG IS '任务调度日志';
COMMENT ON COLUMN BC_SD_LOG.SUCCESS IS '任务是否处理成功:0-失败,1-成功';
COMMENT ON COLUMN BC_SD_LOG.START_DATE IS '任务的启动时间';
COMMENT ON COLUMN BC_SD_LOG.END_DATE IS '任务的结束时间';
COMMENT ON COLUMN BC_SD_LOG.ERROR_TYPE IS '异常分类';
COMMENT ON COLUMN BC_SD_LOG.MSG IS '异常信息';
COMMENT ON COLUMN BC_SD_LOG.CFG_CRON IS '对应ScheduleJob的cron';
COMMENT ON COLUMN BC_SD_LOG.CFG_NAME IS '对应ScheduleJob的name';
COMMENT ON COLUMN BC_SD_LOG.CFG_GROUP IS '对应ScheduleJob的groupn';
COMMENT ON COLUMN BC_SD_LOG.CFG_BEAN IS '对应ScheduleJob的bean';
COMMENT ON COLUMN BC_SD_LOG.CFG_METHOD IS '对应ScheduleJob的method';

-- 同步信息基表
CREATE TABLE BC_SYNC_BASE (
    ID INTEGER NOT NULL,
    STATUS_ int default 0 NOT NULL,
    SYNC_TYPE varchar(255) NOT NULL,
    SYNC_CODE varchar(255) NOT NULL,
    SYNC_FROM varchar(1000) NOT NULL,
    SYNC_DATE timestamp NOT NULL,
    AUTHOR_ID integer NOT NULL,
    CONSTRAINT BCPK_SYNC_BASE PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_SYNC_BASE IS '同步信息基表';
COMMENT ON COLUMN BC_SYNC_BASE.STATUS_ IS '状态:0-同步后待处理,1-已处理';
COMMENT ON COLUMN BC_SYNC_BASE.SYNC_TYPE IS '同步信息的类型';
COMMENT ON COLUMN BC_SYNC_BASE.SYNC_CODE IS '同步信息的标识符';
COMMENT ON COLUMN BC_SYNC_BASE.SYNC_FROM IS '同步信息的来源';
COMMENT ON COLUMN BC_SYNC_BASE.SYNC_DATE IS '同步时间';
COMMENT ON COLUMN BC_SYNC_BASE.AUTHOR_ID IS '同步人ID';
ALTER TABLE BC_SYNC_BASE ADD CONSTRAINT BCFK_SYNC_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BC_SYNC_BASE ADD CONSTRAINT BCUK_SYNC_ID UNIQUE (SYNC_TYPE,SYNC_CODE);

-- ##bc平台的 postgresql 自定义函数和存储过程##

-- 创建更新actor的pcode和pname的存储过程：会递归处理下级单位和部门
--	pid: actor所隶属上级的id，为0代表顶层单位
CREATE OR REPLACE FUNCTION update_actor_pcodepname(pid IN integer) RETURNS integer AS $$
DECLARE
	--定义变量
	pfcode varchar(4000);
	pfname varchar(4000);
	t integer := 0;
	child RECORD;
BEGIN
  	if pid > 0 then
		select (case when pcode is null then '' else pcode || '/' end) || '[' || type_ || ']' || code
        	,(case when pname is null then '' else pname || '/' end) || name
        	into pfcode,pfname from bc_identity_actor where id=pid;

		FOR child IN select a.id id,a.type_ type_ from bc_identity_actor a inner join bc_identity_actor_relation r on r.follower_id = a.id 
		where r.type_=0 and r.master_id=pid order by a.order_ LOOP
			update bc_identity_actor a set pcode=pfcode,pname=pfname where a.id=child.id;
			if child.type_ < 3 then 
				-- 单位或部门执行递归处理
				t := t + update_actor_pcodepname(child.id);
			end if;
		END LOOP;
	else
		FOR child IN select a.id id from bc_identity_actor a where a.type_=1 and not exists 
		(select r.follower_id from bc_identity_actor_relation r where r.type_=0 and a.id=r.follower_id)
	    order by a.order_ LOOP
			t := t + update_actor_pcodepname(child.id);
		END LOOP;
  	end if; 
	return t;
END;
$$ LANGUAGE plpgsql;


-- 创建更新resource的pname的存储过程：会递归处理下级资源
--	pid:resource所隶属的id，为0代表顶层资源
CREATE OR REPLACE FUNCTION update_resource_pname(pid IN integer) RETURNS integer AS $$
DECLARE
	--定义变量
	pfname varchar(4000);
	t integer := 0;
	child RECORD;
BEGIN
  	if pid > 0 then
		select (case when pname is null then '' else pname || '/' end) || name
        	into pfname from bc_identity_resource where id=pid;

		FOR child IN select r.id id,r.type_ type_ from bc_identity_resource r where r.belong = pid order by r.order_ LOOP
			update bc_identity_resource set pname=pfname where id=child.id;
			if child.type_ = 1 then 
				-- 分类型资源执行递归处理
				t := t + update_resource_pname(child.id);
			end if;
		END LOOP;
	else
		FOR child IN select r.id id from bc_identity_resource r where COALESCE(r.belong,0) = 0 order by r.order_ LOOP
			t := t + update_resource_pname(child.id);
		END LOOP;
  	end if; 
	return t;
END;
$$ LANGUAGE plpgsql;

-- 创建数据转换用的序列，开始于100000
CREATE sequence DC_SEQUENCE
    minvalue 1
    start with 100000
    increment by 1
    cache 20;

-- 数据转换记录
CREATE TABLE DC_RECORD(
  TYPE_         VARCHAR(255) NOT NULL,
  FROM_ID       INTEGER NOT NULL,
  TO_ID         INTEGER NOT NULL,
  FROM_TABLE    VARCHAR(255),
  TO_TABLE      VARCHAR(255),
  CREATE_DATE   TIMESTAMP NOT NULL,
  REMARK        VARCHAR(4000),
  MODIFIED_DATE TIMESTAMP
);
COMMENT ON TABLE DC_RECORD IS '数据转换记录';
COMMENT ON COLUMN DC_RECORD.TYPE_ IS '类型';
COMMENT ON COLUMN DC_RECORD.FROM_ID IS '旧表数据ID';
COMMENT ON COLUMN DC_RECORD.TO_ID IS '新表数据的ID';
COMMENT ON COLUMN DC_RECORD.FROM_TABLE IS '旧数据表名';
COMMENT ON COLUMN DC_RECORD.TO_TABLE IS '新数据表名';
COMMENT ON COLUMN DC_RECORD.CREATE_DATE IS '创建时间';
COMMENT ON COLUMN DC_RECORD.REMARK IS '备注说明';
COMMENT ON COLUMN DC_RECORD.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE DC_RECORD ADD CONSTRAINT BSUK_RECORD UNIQUE (TYPE_, FROM_ID);

-- bc营运管理子系统的建表脚本,所有表名须附带前缀"BS_"
-- 运行此脚本之前需先运行平台的建表脚本framework.db.postgresql.create.sql

-- 车队信息
CREATE TABLE BS_MOTORCADE (
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36),
   CODE                 VARCHAR(255)        NOT NULL,
   NAME                 VARCHAR(255)        NOT NULL,
   STATUS_              INTEGER            NOT NULL,
   UNIT_ID              INTEGER           NOT NULL,
   PRINCIPAL_ID         INTEGER,
   PRINCIPAL_NAME       VARCHAR(255),
   TYPE_                INTEGER            NOT NULL,
   PID                  INTEGER,
   DESC_                VARCHAR(4000),
   PAYMENT_DATE         VARCHAR(255),
   COLOR                VARCHAR(255), ADDRESS              VARCHAR(255),
   PHONE                VARCHAR(255),
   FAX                  VARCHAR(255),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT BSPK_MOTORCADE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_MOTORCADE IS '车队';
COMMENT ON COLUMN BS_MOTORCADE.CODE IS '编码';
COMMENT ON COLUMN BS_MOTORCADE.NAME IS '名称';
COMMENT ON COLUMN BS_MOTORCADE.STATUS_ IS '状态：0-在案,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_MOTORCADE.UNIT_ID IS '所属单位ID';
COMMENT ON COLUMN BS_MOTORCADE.PRINCIPAL_ID IS '负责人ID';
COMMENT ON COLUMN BS_MOTORCADE.PRINCIPAL_NAME IS '负责人姓名';
COMMENT ON COLUMN BS_MOTORCADE.TYPE_ IS '类别：0-分队,1-分组';
COMMENT ON COLUMN BS_MOTORCADE.PID IS '所属父类ID';
COMMENT ON COLUMN BS_MOTORCADE.DESC_ IS '备注';
COMMENT ON COLUMN BS_MOTORCADE.PAYMENT_DATE IS '缴费日';
COMMENT ON COLUMN BS_MOTORCADE.COLOR IS '颜色';
COMMENT ON COLUMN BS_MOTORCADE.ADDRESS IS '地址';
COMMENT ON COLUMN BS_MOTORCADE.PHONE IS '电话';
COMMENT ON COLUMN BS_MOTORCADE.FAX IS '传真';
COMMENT ON COLUMN BS_MOTORCADE.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_MOTORCADE.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_MOTORCADE.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_MOTORCADE.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_AUTHORID FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_PID FOREIGN KEY (PID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_PRINCIPAL FOREIGN KEY (PRINCIPAL_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_MOTORCADE ADD CONSTRAINT BSFK_MOTORCADE_UNIT FOREIGN KEY (UNIT_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
CREATE INDEX BSIDX_MOTORCADE_STATUS ON BS_MOTORCADE (STATUS_);

-- 车队历史车辆数
CREATE TABLE BS_MOTORCADE_CARQUANTITY (
   ID                   INTEGER           NOT NULL,
   MOTORCADE_ID         INTEGER           NOT NULL,
   YEAR_                NUMERIC(4)            NOT NULL,
   MONTH_               NUMERIC(2)            NOT NULL,
   QUANTITY             INTEGER           NOT NULL,
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT BSPK_CARQUANTITY PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_MOTORCADE_CARQUANTITY IS '车队历史车辆数';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.MOTORCADE_ID IS '所属车队ID';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.YEAR_ IS '年份';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.MONTH_ IS '月份';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.QUANTITY IS '车辆数';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_MOTORCADE_CARQUANTITY.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_MOTORCADE_CARQUANTITY ADD CONSTRAINT BSFK_CARQUANTITY_MOTORCADE FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);


-- 证件
create table BS_CERT (
    ID INTEGER NOT NULL,
    STATUS_ INTEGER NOT NULL,
    UID_ VARCHAR(36) NOT NULL,
    TYPE_ INTEGER NOT NULL,
    CERT_CODE VARCHAR(255) NOT NULL,
    CERT_NAME VARCHAR(255) NOT NULL,
    CERT_FULL_NAME VARCHAR(255),
    LICENCER VARCHAR(255),
    ISSUE_DATE TIMESTAMP,
    START_DATE TIMESTAMP,
    END_DATE TIMESTAMP,
    EXT_STR1 VARCHAR(255),
    EXT_STR2 VARCHAR(255),
    EXT_STR3 VARCHAR(255),
    EXT_NUM1 INTEGER,
    EXT_NUM2 INTEGER,
    EXT_NUM3 INTEGER,
    FILE_DATE TIMESTAMP NOT NULL,
    AUTHOR_ID INTEGER NOT NULL,
    MODIFIER_ID INTEGER ,
    MODIFIED_DATE TIMESTAMP,
    CONSTRAINT BSPK_CERT primary key (ID)
);
COMMENT ON TABLE BS_CERT IS '证件';
COMMENT ON COLUMN BS_CERT.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_CERT.CERT_CODE IS '证件号';
COMMENT ON COLUMN BS_CERT.TYPE_ IS '证件类型：居民身份证、机动车驾驶证、从业资格证、服务资格证、驾驶培训证、机动车行驶证、道路运输证';
COMMENT ON COLUMN BS_CERT.CERT_NAME IS '证件简称';
COMMENT ON COLUMN BS_CERT.CERT_FULL_NAME IS '证件全称';
COMMENT ON COLUMN BS_CERT.LICENCER IS '发证机关';
COMMENT ON COLUMN BS_CERT.START_DATE IS '生效日期';
COMMENT ON COLUMN BS_CERT.ISSUE_DATE IS '发证日期';
COMMENT ON COLUMN BS_CERT.END_DATE IS '到期日期';
COMMENT ON COLUMN BS_CERT.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CERT.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CERT.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CERT.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_CERT ADD CONSTRAINT BSFK_CERT_AUTHORID FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CERT ADD CONSTRAINT BSFK_CERT_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
CREATE INDEX BSIDX_CERT_CODE ON BS_CERT (CERT_CODE ASC);
CREATE INDEX BSIDX_CERT_NAME ON BS_CERT (CERT_NAME ASC);

-- 证件:居民身份证
create table BS_CERT_IDENTITY (
    ID INTEGER NOT NULL,
    NAME VARCHAR(255),
    SEX NUMERIC(1),
    BIRTHDATE TIMESTAMP,
    NATION VARCHAR(255),
    ADDRESS VARCHAR(500),
    CONSTRAINT BSPK_CERT_IDENTITY primary key (ID)
);
COMMENT ON TABLE BS_CERT_IDENTITY IS '证件:居民身份证';
COMMENT ON COLUMN BS_CERT_IDENTITY.NAME IS '姓名';
COMMENT ON COLUMN BS_CERT_IDENTITY.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CERT_IDENTITY.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CERT_IDENTITY.NATION IS '民族';
COMMENT ON COLUMN BS_CERT_IDENTITY.ADDRESS IS '住址';
ALTER TABLE BS_CERT_IDENTITY ADD CONSTRAINT BSFK_CERT4IDENTITY_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:机动车驾驶证
create table BS_CERT_DRIVING (
    ID INTEGER NOT NULL,
    NAME VARCHAR(255),
    SEX NUMERIC(1),
    BIRTHDATE TIMESTAMP,
    NATION VARCHAR(255),
    ADDRESS VARCHAR(500),
    MODEL VARCHAR(255),
    RECEIVEDATE TIMESTAMP,
    VALIDFOR VARCHAR(255),
    ARCHIVENO VARCHAR(255),
    RECORD VARCHAR(255),
    CONSTRAINT BSPK_CERT_DRIVING primary key (ID)
);
COMMENT ON TABLE BS_CERT_DRIVING IS '证件:机动车驾驶证';
COMMENT ON COLUMN BS_CERT_DRIVING.NAME IS '姓名';
COMMENT ON COLUMN BS_CERT_DRIVING.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CERT_DRIVING.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CERT_DRIVING.NATION IS '国籍';
COMMENT ON COLUMN BS_CERT_DRIVING.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_DRIVING.MODEL IS '准驾车型';
COMMENT ON COLUMN BS_CERT_DRIVING.RECEIVEDATE IS '初次领证日期';
COMMENT ON COLUMN BS_CERT_DRIVING.VALIDFOR IS '有效期限';
COMMENT ON COLUMN BS_CERT_DRIVING.ARCHIVENO IS '档案编号';
COMMENT ON COLUMN BS_CERT_DRIVING.RECORD IS '记录';
ALTER TABLE BS_CERT_DRIVING ADD CONSTRAINT BSFK_CERT4DRIVING_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:从业资格证
create table BS_CERT_CYZG (
    ID INTEGER NOT NULL,
    NAME VARCHAR(255),
    SEX NUMERIC(1),
    BIRTHDATE TIMESTAMP,
    NATION VARCHAR(255),
    ADDRESS VARCHAR(500),
    SCOPE_ VARCHAR(255),
    IDENTITY_NO VARCHAR(255),
    SERVICE_UNIT VARCHAR(500),
    CONSTRAINT BSPK_CERT_CYZG primary key (ID)
);
COMMENT ON TABLE BS_CERT_CYZG IS '证件:从业资格证';
COMMENT ON COLUMN BS_CERT_CYZG.NAME IS '姓名';
COMMENT ON COLUMN BS_CERT_CYZG.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CERT_CYZG.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CERT_CYZG.NATION IS '国籍';
COMMENT ON COLUMN BS_CERT_CYZG.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_CYZG.SCOPE_ IS '从业资格';
COMMENT ON COLUMN BS_CERT_CYZG.IDENTITY_NO IS '身份证件号';
COMMENT ON COLUMN BS_CERT_CYZG.SERVICE_UNIT IS '服务单位';
ALTER TABLE BS_CERT_CYZG ADD CONSTRAINT BSFK_CERT4CYZG_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:服务资格证
create table BS_CERT_FWZG (
    ID INTEGER NOT NULL,
    NAME VARCHAR(255),
    SEX NUMERIC(1),
    BIRTHDATE TIMESTAMP,
    NATION VARCHAR(255),
    ADDRESS VARCHAR(500),
    LEVEL_ VARCHAR(255),
    SERVICE_UNIT VARCHAR(500),
    CONSTRAINT BSPK_CERT_FWZG primary key (ID)
);
COMMENT ON TABLE BS_CERT_FWZG IS '证件:服务资格证';
COMMENT ON COLUMN BS_CERT_FWZG.NAME IS '姓名';
COMMENT ON COLUMN BS_CERT_FWZG.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CERT_FWZG.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CERT_FWZG.NATION IS '国籍';
COMMENT ON COLUMN BS_CERT_FWZG.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_FWZG.LEVEL_ IS '等级';
COMMENT ON COLUMN BS_CERT_FWZG.SERVICE_UNIT IS '服务单位';
ALTER TABLE BS_CERT_FWZG ADD CONSTRAINT BSFK_CERT4FWZG_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:驾驶培训证
create table BS_CERT_JSPX (
    ID INTEGER NOT NULL,
    NAME VARCHAR(255),
    SEX NUMERIC(1),
    BIRTHDATE TIMESTAMP,
    NATION VARCHAR(255),
    ADDRESS VARCHAR(500),
    DOMAIN VARCHAR(255),
    TRAIN_DATE TIMESTAMP,
    TRAIN_HOUR NUMERIC(3),
    GRADE1 NUMERIC(3),
    GRADE2 VARCHAR(10),
    GRADE3 VARCHAR(10),
    IDENTITY_NO VARCHAR(255),
    CONSTRAINT BSPK_CERT_JSPX primary key (ID)
);
COMMENT ON TABLE BS_CERT_JSPX IS '证件:驾驶培训证';
COMMENT ON COLUMN BS_CERT_JSPX.NAME IS '姓名';
COMMENT ON COLUMN BS_CERT_JSPX.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CERT_JSPX.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CERT_JSPX.NATION IS '国籍';
COMMENT ON COLUMN BS_CERT_JSPX.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_JSPX.DOMAIN IS '培训专业';
COMMENT ON COLUMN BS_CERT_JSPX.TRAIN_DATE IS '培训时间';
COMMENT ON COLUMN BS_CERT_JSPX.TRAIN_HOUR IS '培训学时';
COMMENT ON COLUMN BS_CERT_JSPX.GRADE1 IS '理论知识考核成绩';
COMMENT ON COLUMN BS_CERT_JSPX.GRADE2 IS '操作技能考核成绩';
COMMENT ON COLUMN BS_CERT_JSPX.GRADE3 IS '评定成绩';
COMMENT ON COLUMN BS_CERT_JSPX.IDENTITY_NO IS '身份证件号';
ALTER TABLE BS_CERT_JSPX ADD CONSTRAINT BSFK_CERT4JSPX_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);

-- 证件:道路运输证
CREATE TABLE BS_CERT_ROADTRANSPORT(
	ID                   INTEGER NOT NULL,
	FACTORY              VARCHAR(255),
	PLATE                VARCHAR(255),
	OWNER                VARCHAR(255),
	ADDRESS              VARCHAR(255),
	BS_CERT_NO           VARCHAR(255),
	SEAT                 VARCHAR(255),
	DIM_LEN              INTEGER,
	DIM_WIDTH            INTEGER,
	DIM_HEIGHT           INTEGER,
	SCOPE_               VARCHAR(255),
	LEVEL_               VARCHAR(255),
	DESC_                VARCHAR(255),
  	CONSTRAINT BSPK_CERT_ROADTRANSPORT PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CERT_ROADTRANSPORT IS '证件：道路运输证';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.FACTORY IS '品牌型号，如“桑塔纳SVW7182QQD”';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.PLATE IS '车牌及号码，如“粤AC4X74”';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.OWNER IS '业户名称';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.BS_CERT_NO IS '经营许可证号';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.SEAT IS '吨（座）位';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.DIM_LEN IS '外廓尺寸：长，单位MM';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.DIM_WIDTH IS '外廓尺寸：宽，单位MM';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.DIM_HEIGHT IS '外廓尺寸：高，单位MM';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.SCOPE_ IS '经营范围';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.LEVEL_ IS '技术等级';
COMMENT ON COLUMN BS_CERT_ROADTRANSPORT.DESC_ IS '备注';
ALTER TABLE BS_CERT_ROADTRANSPORT ADD CONSTRAINT BSFK_CERT4ROADTRANSPORT_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);
  
-- 证件:机动车行驶证
CREATE TABLE BS_CERT_VEHICELICENSE(
	ID                   INTEGER NOT NULL,
	FACTORY              VARCHAR(255),
	PLATE                VARCHAR(255),
	OWNER                VARCHAR(255),
	ADDRESS              VARCHAR(255),
	USE_CHARACTER        VARCHAR(255),
	VEHICE_TYPE          VARCHAR(255),
	VIN                  VARCHAR(255),
	ENGINE_NO            VARCHAR(255),
	REGISTER_DATE        TIMESTAMP,
	ARCHIVE_NO           VARCHAR(255),
	DIM_LEN              INTEGER,
	DIM_WIDTH            INTEGER,
	DIM_HEIGHT           INTEGER,
	TOTAL_WEIGHT         INTEGER,
	CURB_WEIGHT          INTEGER,
	ACCESS_WEIGHT        INTEGER,
	PULL_WEIGHT          INTEGER,
	ACCESS_COUNT         INTEGER,
	SCRAP_DATE           TIMESTAMP,
	DESC_                VARCHAR(500),
	RECORD_              VARCHAR(500),
	CONSTRAINT BSPK_CERT_VEHICELICENSE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CERT_VEHICELICENSE IS '证件：机动车行驶证';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.FACTORY IS '品牌型号，如“桑塔纳SVW7182QQD”';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.PLATE IS '车牌及号码，如“粤AC4X74”';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.OWNER IS '业户名称';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.ADDRESS IS '地址';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.USE_CHARACTER IS '使用性质';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.VEHICE_TYPE IS '车辆类型';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.VIN IS '车辆识别代号';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.ENGINE_NO IS '发动机号码';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.REGISTER_DATE IS '注册日期';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.ARCHIVE_NO IS '档案编号';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.DIM_LEN IS '外廓尺寸：长，单位MM';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.DIM_WIDTH IS '外廓尺寸：宽，单位MM';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.DIM_HEIGHT IS '外廓尺寸：高，单位MM';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.TOTAL_WEIGHT IS '总质量，单位KG';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.CURB_WEIGHT IS '整备质量，单位KG';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.ACCESS_WEIGHT IS '核定载质量，单位KG';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.PULL_WEIGHT IS '准牵引总质量，单位KG';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.ACCESS_COUNT IS '核定载人数';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.SCRAP_DATE IS '强制报废日期';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.DESC_ IS '备注';
COMMENT ON COLUMN BS_CERT_VEHICELICENSE.RECORD_ IS '检验记录';
ALTER TABLE BS_CERT_VEHICELICENSE ADD CONSTRAINT BSFK_CERT4VEHICELICENSE_CERT FOREIGN KEY (ID) 
	REFERENCES BS_CERT (ID);


-- 司机责任人
create table BS_CARMAN (
    ID INTEGER NOT NULL,
    UID_ VARCHAR(36) NOT NULL,
    STATUS_ INTEGER NOT NULL,
    TYPE_ INTEGER default 0 NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    ORDER_ VARCHAR(100),
    SEX INTEGER default 0 NOT NULL,
    WORK_DATE TIMESTAMP,
    ORIGIN VARCHAR(255),
    REGION_  NUMERIC(1),
    HOUSE_TYPE VARCHAR(255),
    BIRTHDATE TIMESTAMP,
    FORMER_UNIT VARCHAR(500),
    ADDRESS VARCHAR(500),
    ADDRESS1 VARCHAR(500),
    PHONE VARCHAR(500),
    PHONE1 VARCHAR(500),
    MODEL_                VARCHAR(255),
	LEVEL_ VARCHAR(255),
    CERT_IDENTITY        VARCHAR(255),
    CERT_DRIVING         VARCHAR(255),
    CERT_DRIVING_ARCHIVE VARCHAR(255),
    CERT_DRIVING_FIRST_DATE TIMESTAMP,
    CERT_DRIVING_START_DATE TIMESTAMP,
    CERT_DRIVING_END_DATE TIMESTAMP,
    CERT_FWZG            VARCHAR(255),
	CERT_FWZG_ID            VARCHAR(255),
    CERT_CYZG            VARCHAR(255),
    DRIVING_STATUS        NUMERIC(1),
    OLD_UNIT_NAME        VARCHAR(255),
    EXT_ZRR              VARCHAR(255),
    GZ                   boolean default false,
    ACCESS_CERTS         VARCHAR(255),
    DESC_                VARCHAR(4000),
    FILE_DATE TIMESTAMP NOT NULL,
    AUTHOR_ID INTEGER NOT NULL,
    MODIFIER_ID INTEGER,
    MODIFIED_DATE TIMESTAMP,
    CHARGER		VARCHAR(255),
    CONSTRAINT BSPK_CARMAN primary key (ID)
);
COMMENT ON TABLE BS_CARMAN IS '司机责任人';
COMMENT ON COLUMN BS_CARMAN.UID_ IS 'UID';
COMMENT ON COLUMN BS_CARMAN.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_CARMAN.TYPE_ IS '类别:0-司机,1-责任人,2-司机和责任人';
COMMENT ON COLUMN BS_CARMAN.NAME IS '姓名';
COMMENT ON COLUMN BS_CARMAN.ORDER_ IS '排序号';
COMMENT ON COLUMN BS_CARMAN.SEX IS '性别：0-未设置,1-男,2-女';
COMMENT ON COLUMN BS_CARMAN.WORK_DATE IS '入职日期';
COMMENT ON COLUMN BS_CARMAN.ORIGIN IS '籍贯';
COMMENT ON COLUMN BS_CARMAN.REGION_ IS '区域：0-未定义，1-本市，2-本省，3-外省';
COMMENT ON COLUMN BS_CARMAN.HOUSE_TYPE IS '户口类型';
COMMENT ON COLUMN BS_CARMAN.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CARMAN.FORMER_UNIT IS '入职原单位';
COMMENT ON COLUMN BS_CARMAN.ADDRESS IS '身份证住址';
COMMENT ON COLUMN BS_CARMAN.ADDRESS1 IS '暂住地址';
COMMENT ON COLUMN BS_CARMAN.PHONE IS '电话';
COMMENT ON COLUMN BS_CARMAN.PHONE1 IS '电话1';
COMMENT ON COLUMN BS_CARMAN.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CARMAN.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CARMAN.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CARMAN.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CARMAN.MODEL_ IS '准驾车型';
COMMENT ON COLUMN BS_CARMAN.LEVEL_ IS '司机等级';
COMMENT ON COLUMN BS_CARMAN.CERT_IDENTITY IS '身份证号';
COMMENT ON COLUMN BS_CARMAN.CERT_DRIVING IS '驾驶证号';
COMMENT ON COLUMN BS_CARMAN.CERT_DRIVING_ARCHIVE IS '驾驶证档案号';
COMMENT ON COLUMN BS_CARMAN.CERT_DRIVING_FIRST_DATE IS '初次领证日期';
COMMENT ON COLUMN BS_CARMAN.CERT_DRIVING_START_DATE IS '驾驶证起效日期';
COMMENT ON COLUMN BS_CARMAN.CERT_DRIVING_END_DATE IS '驾驶证过期日期';
COMMENT ON COLUMN BS_CARMAN.CERT_FWZG IS '服务资格证号';
COMMENT ON COLUMN BS_CARMAN.CERT_FWZG_ID IS '服务资格证号';
COMMENT ON COLUMN BS_CARMAN.CERT_CYZG IS '从业资格证号';
COMMENT ON COLUMN BS_CARMAN.DRIVING_STATUS IS '驾驶状态：0-未定义，1-正班，2-副班，3-顶班';
COMMENT ON COLUMN BS_CARMAN.OLD_UNIT_NAME IS '分支机构：用于历史数据的保存';
COMMENT ON COLUMN BS_CARMAN.EXT_ZRR IS '责任人：用于历史数据的保存';
COMMENT ON COLUMN BS_CARMAN.GZ IS '驾驶证是否广州:0-否,1-是';
COMMENT ON COLUMN BS_CARMAN.ACCESS_CERTS IS '已考取证件：历史数据保存';
COMMENT ON COLUMN BS_CARMAN.DESC_ IS '备注';
COMMENT ON COLUMN BS_CARMAN.CHARGER IS '责任人信息';
ALTER TABLE BS_CARMAN ADD CONSTRAINT BSFK_CARMAN_AUTHOR FOREIGN KEY (AUTHOR_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CARMAN ADD CONSTRAINT BSFK_CARMAN_MODIFIER FOREIGN KEY (MODIFIER_ID) 
	REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
CREATE INDEX BSIDX_CARMAN_STATUS ON BS_CARMAN (STATUS_);

-- 司机责任人与证件的关联
CREATE TABLE BS_CARMAN_CERT (
    MAN_ID INTEGER NOT NULL,
    CERT_ID INTEGER NOT NULL,
    CONSTRAINT BSPK_CARMAN_CERT PRIMARY KEY (MAN_ID,CERT_ID)
);
COMMENT ON TABLE BS_CARMAN_CERT IS '司机责任人与证件的关联';
COMMENT ON COLUMN BS_CARMAN_CERT.MAN_ID IS '司机责任人ID';
COMMENT ON COLUMN BS_CARMAN_CERT.CERT_ID IS '证件ID';
ALTER TABLE BS_CARMAN_CERT ADD CONSTRAINT BSFK_CARMANCERT_MAN FOREIGN KEY (MAN_ID) 
	REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CARMAN_CERT ADD CONSTRAINT BSFK_CARMANCERT_CERT FOREIGN KEY (CERT_ID) 
	REFERENCES BS_CERT (ID);


-- 车辆 
CREATE TABLE BS_CAR (
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36)         NOT NULL,
   STATUS_              INTEGER            NOT NULL,
   OLD_UNIT_NAME        VARCHAR(255),
   MOTORCADE_ID         INTEGER,
   DRIVER		VARCHAR(255),
   CHARGER		VARCHAR(255),
   BS_TYPE              VARCHAR(255),
   CODE                 VARCHAR(255),
   ORIGIN_NO            VARCHAR(255),
   PLATE_TYPE           VARCHAR(255),
   PLATE_NO             VARCHAR(255),
   VIN                  VARCHAR(255),
   FACTORY_TYPE         VARCHAR(255),
   FACTORY_MODEL        VARCHAR(255),
   REGISTER_DATE        TIMESTAMP,
   OPERATE_DATE         TIMESTAMP,
   SCRAP_DATE           TIMESTAMP,
   FACTORY_DATE         TIMESTAMP,
   REGISTER_NO          VARCHAR(255),
   LEVEL_               VARCHAR(255),
   COLOR                VARCHAR(255),
   ENGINE_NO            VARCHAR(255),
   ENGINE_TYPE          VARCHAR(255),
   FUEL_TYPE            VARCHAR(255),
   DISPLACEMENT         INTEGER,
   POWER                NUMERIC(19,2),
   TURN_TYPE            VARCHAR(255),
   TIRE_COUNT           INTEGER,
   TIRE_STANDARD        VARCHAR(255),
   AXIS_DISTANCE        INTEGER,
   AXIS_COUNT           INTEGER,
   PIECE_COUNT          INTEGER,
   DIM_LEN              INTEGER,
   DIM_WIDTH            INTEGER,
   DIM_HEIGHT           INTEGER,
   TOTAL_WEIGHT         INTEGER,
   ACCESS_WEIGHT        INTEGER,
   ACCESS_COUNT         INTEGER,
   ORIGINAL_VALUE       NUMERIC(19,2),
   INVOICE_NO1          VARCHAR(255),
   INVOICE_NO2          VARCHAR(255),
   PAYMENT_TYPE         VARCHAR(255),
   CERT_NO1             VARCHAR(255),
   CERT_NO2             VARCHAR(255),
   CERT_NO3             VARCHAR(255),
   TAXIMETER_FACTORY    VARCHAR(255),
   TAXIMETER_TYPE       VARCHAR(255),
   TAXIMETER_NO         VARCHAR(255),
   DESC1                VARCHAR(4000),
   DESC2                VARCHAR(4000),
   DESC3                VARCHAR(4000),
   FILE_DATE            TIMESTAMP NOT NULL,
   AUTHOR_ID            INTEGER NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT BSPK_CAR PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CAR IS '车辆';
COMMENT ON COLUMN BS_CAR.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_CAR.OLD_UNIT_NAME IS '所属单位';
COMMENT ON COLUMN BS_CAR.MOTORCADE_ID IS '所属车队ID';
COMMENT ON COLUMN BS_CAR.DRIVER IS '司机信息';
COMMENT ON COLUMN BS_CAR.CHARGER IS '责任人信息';
COMMENT ON COLUMN BS_CAR.BS_TYPE IS '营运性质';
COMMENT ON COLUMN BS_CAR.CODE IS '自编号';
COMMENT ON COLUMN BS_CAR.ORIGIN_NO IS '原车号';
COMMENT ON COLUMN BS_CAR.PLATE_TYPE IS '车牌归属，如“粤A”';
COMMENT ON COLUMN BS_CAR.PLATE_NO IS '车牌号码，如“C4X74”';
COMMENT ON COLUMN BS_CAR.VIN IS '车辆识别代号';
COMMENT ON COLUMN BS_CAR.FACTORY_TYPE IS '厂牌类型，如“桑塔纳”';
COMMENT ON COLUMN BS_CAR.FACTORY_MODEL IS '厂牌型号，如“SVW7182QQD”';
COMMENT ON COLUMN BS_CAR.REGISTER_DATE IS '登记日期';
COMMENT ON COLUMN BS_CAR.OPERATE_DATE IS '投产日期';
COMMENT ON COLUMN BS_CAR.SCRAP_DATE IS '报废日期';
COMMENT ON COLUMN BS_CAR.FACTORY_DATE IS '出厂日期';
COMMENT ON COLUMN BS_CAR.REGISTER_NO IS '机动车登记编号';
COMMENT ON COLUMN BS_CAR.LEVEL_ IS '车辆定级';
COMMENT ON COLUMN BS_CAR.COLOR IS '颜色';
COMMENT ON COLUMN BS_CAR.ENGINE_NO IS '发动机号码';
COMMENT ON COLUMN BS_CAR.ENGINE_TYPE IS '发动机类型';
COMMENT ON COLUMN BS_CAR.FUEL_TYPE IS '燃料类型，如“汽油”';
COMMENT ON COLUMN BS_CAR.DISPLACEMENT IS '排量，单位ML';
COMMENT ON COLUMN BS_CAR.POWER IS '功率，单位KW';
COMMENT ON COLUMN BS_CAR.TURN_TYPE IS '转向方式，如“方向盘”';
COMMENT ON COLUMN BS_CAR.TIRE_COUNT IS '轮胎数';
COMMENT ON COLUMN BS_CAR.TIRE_STANDARD IS '轮胎规格';
COMMENT ON COLUMN BS_CAR.AXIS_DISTANCE IS '轴距';
COMMENT ON COLUMN BS_CAR.AXIS_COUNT IS '轴数';
COMMENT ON COLUMN BS_CAR.PIECE_COUNT IS '后轴钢板弹簧片数';
COMMENT ON COLUMN BS_CAR.DIM_LEN IS '外廓尺寸：长，单位MM';
COMMENT ON COLUMN BS_CAR.DIM_WIDTH IS '外廓尺寸：宽，单位MM';
COMMENT ON COLUMN BS_CAR.DIM_HEIGHT IS '外廓尺寸：高，单位MM';
COMMENT ON COLUMN BS_CAR.TOTAL_WEIGHT IS '总质量，单位KG';
COMMENT ON COLUMN BS_CAR.ACCESS_WEIGHT IS '核定载质量，单位KG';
COMMENT ON COLUMN BS_CAR.ACCESS_COUNT IS '核定载人数';
COMMENT ON COLUMN BS_CAR.ORIGINAL_VALUE IS '固定资产原值，单位元';
COMMENT ON COLUMN BS_CAR.INVOICE_NO1 IS '购车发票号';
COMMENT ON COLUMN BS_CAR.INVOICE_NO2 IS '购置税发票号';
COMMENT ON COLUMN BS_CAR.PAYMENT_TYPE IS '缴费日';
COMMENT ON COLUMN BS_CAR.CERT_NO1 IS '购置税证号';
COMMENT ON COLUMN BS_CAR.CERT_NO2 IS '经营权使用证号';
COMMENT ON COLUMN BS_CAR.CERT_NO3 IS '强检证号';
COMMENT ON COLUMN BS_CAR.TAXIMETER_FACTORY IS '计价器制造厂';
COMMENT ON COLUMN BS_CAR.TAXIMETER_TYPE IS '计价器型号';
COMMENT ON COLUMN BS_CAR.TAXIMETER_NO IS '计价器出厂编号';
COMMENT ON COLUMN BS_CAR.DESC1 IS '备注1';
COMMENT ON COLUMN BS_CAR.DESC2 IS '备注2';
COMMENT ON COLUMN BS_CAR.DESC3 IS '备注3';
COMMENT ON COLUMN BS_CAR.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CAR.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CAR.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CAR.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR ADD CONSTRAINT BSFK_CAR_MOTORCADEID FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
CREATE INDEX BSIDX_CAR_STATUS ON BS_CAR (STATUS_);
CREATE INDEX BSIDX_CAR_MOTORCADE ON BS_CAR (MOTORCADE_ID);


-- 车辆与证件的关联
CREATE TABLE BS_CAR_CERT (
    CAR_ID INTEGER NOT NULL,
    CERT_ID INTEGER NOT NULL,
    CONSTRAINT BSPK_CAR_CERT PRIMARY KEY (CAR_ID,CERT_ID)
);
COMMENT ON TABLE BS_CAR_CERT IS '车辆与证件的关联';
COMMENT ON COLUMN BS_CAR_CERT.CAR_ID IS '车辆ID';
COMMENT ON COLUMN BS_CAR_CERT.CERT_ID IS '证件ID';
ALTER TABLE BS_CAR_CERT ADD CONSTRAINT BSFK_CARCERT_CAR FOREIGN KEY (CAR_ID) 
	REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_CERT ADD CONSTRAINT BSFK_CARCERT_CERT FOREIGN KEY (CERT_ID) 
	REFERENCES BS_CERT (ID);


-- 合同
CREATE TABLE BS_CONTRACT 
(
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36)         NOT NULL,
   PID                  INTEGER,
   STATUS_              INTEGER            NOT NULL,
   VER_MAJOR            NUMERIC(2),
   VER_MINOR            NUMERIC(3),
   PATCH_NO             VARCHAR(255)        NOT NULL,
   MAIN                 INTEGER            NOT NULL,
   WORD_NO              VARCHAR(255),
   CODE                 VARCHAR(255)        NOT NULL,
   TYPE_                INTEGER            NOT NULL,
   OP_TYPE              INTEGER            NOT NULL,
   TRANSACTOR_ID        INTEGER,
   TRANSACTOR_NAME      VARCHAR(255),
   SIGN_DATE            TIMESTAMP,
   START_DATE           TIMESTAMP                 NOT NULL,
   END_DATE             TIMESTAMP                 NOT NULL,
   CONTENT              VARCHAR(4000),
   EXT_STR1             VARCHAR(255),
   EXT_STR2             VARCHAR(255),
   EXT_STR3             VARCHAR(255),
   EXT_NUM1             INTEGER,
   EXT_NUM2             INTEGER,
   EXT_NUM3             INTEGER,
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT PK_BS_CONTRACT PRIMARY KEY (ID)
);

COMMENT ON TABLE BS_CONTRACT IS'合同';
COMMENT ON COLUMN BS_CONTRACT.STATUS_ IS'状态：0-正常,1-失效,2-离职';
COMMENT ON COLUMN BS_CONTRACT.VER_MAJOR IS '主版本号';
COMMENT ON COLUMN BS_CONTRACT.VER_MINOR IS '次版本号';
COMMENT ON COLUMN BS_CONTRACT.PATCH_NO IS '批号';
COMMENT ON COLUMN BS_CONTRACT.MAIN IS '主体: 0-当前版本,1-历史版本';
COMMENT ON COLUMN BS_CONTRACT.WORD_NO IS '文书号';
COMMENT ON COLUMN BS_CONTRACT.CODE IS '合同号';
COMMENT ON COLUMN BS_CONTRACT.TYPE_ IS '合同类型：1-司机劳动合同、2-责任人合同';
COMMENT ON COLUMN BS_CONTRACT.OP_TYPE IS '操作类型: 1-新建,2-维护,3-转车,4-续约,5-离职';
COMMENT ON COLUMN BS_CONTRACT.TRANSACTOR_ID IS '经办人ID';
COMMENT ON COLUMN BS_CONTRACT.TRANSACTOR_NAME IS '经办人姓名';
COMMENT ON COLUMN BS_CONTRACT.SIGN_DATE IS '签订日期';
COMMENT ON COLUMN BS_CONTRACT.START_DATE IS '生效日期';
COMMENT ON COLUMN BS_CONTRACT.END_DATE IS '到期日期';
COMMENT ON COLUMN BS_CONTRACT.CONTENT IS '合同内容';
COMMENT ON COLUMN BS_CONTRACT.EXT_STR1 IS '车牌';
COMMENT ON COLUMN BS_CONTRACT.EXT_STR2 IS '司机责任人姓名';
COMMENT ON COLUMN BS_CONTRACT.EXT_STR3 IS '字符扩展域3';
COMMENT ON COLUMN BS_CONTRACT.EXT_NUM1 IS '数字扩展域1';
COMMENT ON COLUMN BS_CONTRACT.EXT_NUM2 IS '数字扩展域2';
COMMENT ON COLUMN BS_CONTRACT.EXT_NUM3 IS '数字扩展域3';
COMMENT ON COLUMN BS_CONTRACT.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CONTRACT.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CONTRACT.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CONTRACT.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_CONTRACT ADD CONSTRAINT BSFK_CONTRACT_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CONTRACT ADD CONSTRAINT BSFK_CONTRACT_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CONTRACT ADD CONSTRAINT BSFK_CONTR_REFERENCE_BS_CONTR FOREIGN KEY (PID)
      REFERENCES BS_CONTRACT (ID);

-- 司机劳动合同
CREATE TABLE BS_CONTRACT_LABOUR 
(
   ID                   INTEGER           NOT NULL,
   CERT_NO              VARCHAR(255)        NOT NULL,
   CERT_IDENTITY        VARCHAR(255),
   SEX                  NUMERIC(1),
   BIRTHDATE            TIMESTAMP,
   AGE                  NUMERIC(3),
   ORIGIN               VARCHAR(255),
   HOUSE_TYPE           VARCHAR(255),
   DOLE                 boolean default false,
   FUNDING              boolean default false,
   INSURCODE            VARCHAR(255),
   JOINDATE             TIMESTAMP,
   REGISTER_DATE        TIMESTAMP,
   INSURE_DATE          TIMESTAMP,
   BS_TYPE              VARCHAR(255),
   BUY_UNIT             VARCHAR(255),
   INSURANCE_TYPE       VARCHAR(255),
   IS_IQAMA             BOOLEAN            DEFAULT FALSE,
   IS_ACCOUNT_BOOK      BOOLEAN            DEFAULT FALSE,
   IS_IDENTITY_CARDS    BOOLEAN            DEFAULT FALSE,
   IS_FPC               BOOLEAN            DEFAULT FALSE,
   IS_UNEMPLOYED        BOOLEAN            DEFAULT FALSE,
   IS_HEALTHFORM        BOOLEAN            DEFAULT FALSE,
   IS_PHOTO             BOOLEAN            DEFAULT FALSE,
   BREEDING_DATE        TIMESTAMP,
   GET_STARTDATE        TIMESTAMP,
   GET_ENDDATE          TIMESTAMP,
   REMARK               VARCHAR(255),
   CONSTRAINT PK_BS_CONTRACT_LABOUR PRIMARY KEY (ID)
);

COMMENT ON TABLE BS_CONTRACT_LABOUR IS '司机劳动合同';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.CERT_NO IS '资格证号';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.CERT_IDENTITY IS '身份证号';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.SEX IS '性别(0-未设置,1-男,2-女)';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.AGE IS '年龄: 通过出生年月算出';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.ORIGIN IS '籍贯';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.HOUSE_TYPE IS '户口类型';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.DOLE IS '个人岗位补贴:0-无,1-有';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.FUNDING IS '对公社保资助';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.INSURCODE IS '社保号';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.JOINDATE IS '参保日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.REGISTER_DATE IS '车辆登记日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.INSURE_DATE IS '申领日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.BS_TYPE IS '营运性质';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.BUY_UNIT IS '购买单位';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.INSURANCE_TYPE IS '社保险种';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_IQAMA IS '是否缴交暂住证';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_ACCOUNT_BOOK IS '是否缴交户口薄';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_IDENTITY_CARDS IS '是否缴交身份证';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_FPC IS '是否缴交计生证';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_UNEMPLOYED IS '是否缴交失业就业手册';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_HEALTHFORM IS '是否缴交体检表';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.IS_PHOTO IS '是否缴交照片';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.BREEDING_DATE IS '生育日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.GET_STARTDATE IS '申领开始日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.GET_ENDDATE IS '申领结束日期';
COMMENT ON COLUMN BS_CONTRACT_LABOUR.REMARK IS '备注';
ALTER TABLE BS_CONTRACT_LABOUR ADD CONSTRAINT BSFK_CONTRACT4LABOUR_CONTRACT FOREIGN KEY (ID)
      REFERENCES BS_CONTRACT (ID);

-- 责任人合同
CREATE TABLE BS_CONTRACT_CHARGER (
   ID                   INTEGER           NOT NULL,
   SIGN_TYPE            VARCHAR(255)        NOT NULL,
   LOGOUT               BOOLEAN            DEFAULT FALSE,
   TAKEBACK_ORIGIN      BOOLEAN            DEFAULT FALSE,
   INCLUDE_COST         BOOLEAN            DEFAULT FALSE,
   BS_TYPE		VARCHAR(255),
   OLD_CONTENT          VARCHAR(4000),
   CONSTRAINT BSPK_CONTRACT_CHARGER PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CONTRACT_CHARGER IS '责任人合同:如承包合同';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.SIGN_TYPE IS '签约类型:如新户';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.LOGOUT IS '注销:0-未,1-已';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.TAKEBACK_ORIGIN IS '已经收回原件:0-未1-已';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.INCLUDE_COST IS '包含检审费用:0-不包含,1-包含';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.BS_TYPE IS '合同性质';
COMMENT ON COLUMN BS_CONTRACT_CHARGER.OLD_CONTENT IS '旧合同内容';
ALTER TABLE BS_CONTRACT_CHARGER ADD CONSTRAINT BSFK_CONTRACT4CHARGER_CONTRACT FOREIGN KEY (ID)
      REFERENCES BS_CONTRACT (ID);
      
-- 司机责任人与合同的关联
CREATE TABLE BS_CARMAN_CONTRACT (
   MAN_ID               INTEGER           NOT NULL,
   CONTRACT_ID          INTEGER           NOT NULL,
   CONSTRAINT BSPK_CARMAN_CONTRACT PRIMARY KEY (MAN_ID, CONTRACT_ID)
);
COMMENT ON TABLE BS_CARMAN_CONTRACT IS '司机责任人与合同的关联';
COMMENT ON COLUMN BS_CARMAN_CONTRACT.MAN_ID IS '司机责任人ID';
COMMENT ON COLUMN BS_CARMAN_CONTRACT.CONTRACT_ID IS '合同ID';
ALTER TABLE BS_CARMAN_CONTRACT ADD CONSTRAINT BSFK_CARMANCONTRACT_CONTRACT FOREIGN KEY (CONTRACT_ID)
      REFERENCES BS_CONTRACT (ID);
ALTER TABLE BS_CARMAN_CONTRACT ADD CONSTRAINT BSFK_CARMANCONTRACT_MAN FOREIGN KEY (MAN_ID)
      REFERENCES BS_CARMAN (ID);

-- 车辆与合同的关联
CREATE TABLE BS_CAR_CONTRACT (
   CAR_ID               INTEGER           NOT NULL,
   CONTRACT_ID          INTEGER           NOT NULL,
   CONSTRAINT BSPK_CAR_CONTRACT PRIMARY KEY (CAR_ID, CONTRACT_ID)
);
COMMENT ON TABLE BS_CAR_CONTRACT IS '车辆与合同的关联';
COMMENT ON COLUMN BS_CAR_CONTRACT.CAR_ID IS '车辆ID';
COMMENT ON COLUMN BS_CAR_CONTRACT.CONTRACT_ID IS '合同ID';
ALTER TABLE BS_CAR_CONTRACT ADD CONSTRAINT BSFK_CARCONTRACT_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_CONTRACT ADD CONSTRAINT BSFK_CARCONTRACT_CONTRACT FOREIGN KEY (CONTRACT_ID)
      REFERENCES BS_CONTRACT (ID);
            
-- 司机营运车辆
CREATE TABLE BS_CAR_DRIVER (
   ID                   INTEGER           NOT NULL,
   STATUS_              INTEGER            NOT NULL,
   DRIVER_ID            INTEGER           NOT NULL,
   CAR_ID               INTEGER           NOT NULL,
   CLASSES              INTEGER         NOT NULL,
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIED_DATE        TIMESTAMP,
   MODIFIER_ID          INTEGER,
   DESC_                VARCHAR(4000),
  CONSTRAINT BSPK_CAR_DRIVER PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CAR_DRIVER IS '司机营运车辆';
COMMENT ON COLUMN BS_CAR_DRIVER.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_CAR_DRIVER.DRIVER_ID IS '司机ID';
COMMENT ON COLUMN BS_CAR_DRIVER.CAR_ID IS '车辆ID';
COMMENT ON COLUMN BS_CAR_DRIVER.CLASSES IS '营运班次:如1-正班、2-副班、3-顶班';
COMMENT ON COLUMN BS_CAR_DRIVER.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CAR_DRIVER.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CAR_DRIVER.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CAR_DRIVER.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CAR_DRIVER.DESC_ IS '备注';
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_DRIVER ADD CONSTRAINT BSFK_CARDRIVER_CARMAN FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
      CREATE INDEX BSIDX_CARDRIVER_CAR ON BS_CAR_DRIVER (CAR_ID);
      CREATE INDEX BSIDX_CARDRIVER_DRIVER ON BS_CAR_DRIVER (DRIVER_ID);
      
 -- 迁移记录
CREATE TABLE BS_CAR_DRIVER_HISTORY (
   ID                   INTEGER           NOT NULL,
   DRIVER_ID            INTEGER  ,
   FROM_CAR_ID             INTEGER,
   FROM_MOTORCADE_ID       INTEGER,
   FROM_CLASSES       NUMERIC(1),
   TO_CAR_ID             INTEGER,
   TO_MOTORCADE_ID       INTEGER,
   TO_CLASSES      NUMERIC(1),
   MOVE_DATE              TIMESTAMP,
   MOVE_TYPE            INTEGER         NOT NULL,  
   FROM_UNIT              VARCHAR(255),
   TO_UNIT                VARCHAR(255),
   HAND_PAPERS_DATE      TIMESTAMP,
   CANCEL_ID            VARCHAR(255),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIED_DATE        TIMESTAMP,
   MODIFIER_ID          INTEGER,
   DESC_                VARCHAR(4000),
  CONSTRAINT BSPK_CAR_DRIVER_HISTORY PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CAR_DRIVER_HISTORY IS '迁移记录';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.DRIVER_ID IS '司机ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.FROM_CAR_ID IS '原车辆ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.FROM_MOTORCADE_ID IS '原车队ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.FROM_CLASSES IS '营运班次:如1-正班、2-副班、3-顶班';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.TO_CAR_ID IS '新车辆ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.TO_MOTORCADE_ID IS '新车队ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.TO_CLASSES IS '营运班次:如1-正班、2-副班、3-顶班';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.MOVE_DATE IS '迁移日期';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.MOVE_TYPE IS '迁移类型';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.FROM_UNIT IS '原单位';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.TO_UNIT IS '现单位';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.HAND_PAPERS_DATE IS '交证日期';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.CANCEL_ID IS '注销单号';

COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CAR_DRIVER_HISTORY.DESC_ IS '备注';
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CARDRIVERHISTORY_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CARDRIVERHISTORY_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CARDRIVER_OLD_CAR FOREIGN KEY (FROM_CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CARDRIVER_NEW_CAR FOREIGN KEY (TO_CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CASEBASE_OLD_MOTORCADE FOREIGN KEY (FROM_MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CASEBASE_NEW_MOTORCADE FOREIGN KEY (TO_MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CAR_DRIVER_HISTORY ADD CONSTRAINT BSFK_CARDRIVERHISTORY_CARMAN FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
      CREATE INDEX BSIDX_CARDRIVERHISTORY_TO_CAR ON BS_CAR_DRIVER_HISTORY (TO_CAR_ID);
      CREATE INDEX BSIDX_CARDRIVERHISTORY_FR_CAR ON BS_CAR_DRIVER_HISTORY (FROM_CAR_ID);
      CREATE INDEX BSIDX_CARDRIVERHISTORY_DRIVER ON BS_CAR_DRIVER_HISTORY (DRIVER_ID);
           
-- 司机迁移历史
CREATE TABLE BS_CARMAN_HISTORY (
   ID                   INTEGER           NOT NULL,
   TYPE_                VARCHAR(255)        NOT NULL,
   DRIVER_ID            INTEGER           NOT NULL,
   SUBJECT              VARCHAR(1000),
   FROM_CARID           INTEGER,
   TO_CARID             INTEGER           NOT NULL,
   FROM_CLASSES         VARCHAR(255),
   TO_CLASSES           VARCHAR(255)        NOT NULL,
   SHIFT_DATE           TIMESTAMP                 NOT NULL,
   FROM_MOTORCADEID     INTEGER,
   TO_MOTORCADEID       INTEGER           NOT NULL,
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIED_DATE        TIMESTAMP,
   MODIFIER_ID          INTEGER,
   CONSTRAINT BSPK_CARMAN_HISTORY PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CARMAN_HISTORY IS '司机迁移历史';
COMMENT ON COLUMN BS_CARMAN_HISTORY.TYPE_ IS '迁移属性，如新入职';
COMMENT ON COLUMN BS_CARMAN_HISTORY.DRIVER_ID IS '司机ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.SUBJECT IS '其他';
COMMENT ON COLUMN BS_CARMAN_HISTORY.FROM_CARID IS '迁自车辆ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.TO_CARID IS '迁往车辆ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.FROM_CLASSES IS '原营运班次:如正班、副班、顶班';
COMMENT ON COLUMN BS_CARMAN_HISTORY.TO_CLASSES IS '新营运班次:如正班、副班、顶班';
COMMENT ON COLUMN BS_CARMAN_HISTORY.SHIFT_DATE IS '迁移日期';
COMMENT ON COLUMN BS_CARMAN_HISTORY.FROM_MOTORCADEID IS '原车队ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.TO_MOTORCADEID IS '迁往车队ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CARMAN_HISTORY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CARMAN_HISTORY.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CARMAN_HISTORY.MODIFIER_ID IS '最后修改人ID';
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_DRIVER FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_FROMCAR FOREIGN KEY (FROM_CARID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_TOCAR FOREIGN KEY (TO_CARID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_FROMMC FOREIGN KEY (FROM_MOTORCADEID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_TOMC FOREIGN KEY (TO_MOTORCADEID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID); 
ALTER TABLE BS_CARMAN_HISTORY ADD CONSTRAINT BSFK_CARMANH_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);

-- 黑名单
CREATE TABLE BS_BLACKLIST (
   ID                   INTEGER           NOT NULL,
   STATUS_              NUMERIC(1),
   TYPE_                VARCHAR(255)        NOT NULL,
   OLD_UNIT_NAME        VARCHAR(255),
   DRIVER_ID            INTEGER,
   CAR_ID               INTEGER,
   MOTORCADE_ID         INTEGER,
   SUBJECT              VARCHAR(1000),
   LOCK_DATE            TIMESTAMP                 NOT NULL,
   UNLOCK_DATE          TIMESTAMP,
   LOCKER_ID            INTEGER           NOT NULL,
   UNLOCKER_ID          INTEGER,
   LOCK_REASON          VARCHAR(4000),
   UNLOCK_REASON        VARCHAR(4000),
   LEVEL_               VARCHAR(255),
   CODE                 VARCHAR(255),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIED_DATE        TIMESTAMP,
   MODIFIER_ID          INTEGER,
   CONSTRAINT BSPK_BLACKLIST PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_BLACKLIST IS '黑名单';
COMMENT ON COLUMN BS_BLACKLIST.STATUS_ IS '状态：0-锁定,1-解锁';
COMMENT ON COLUMN BS_BLACKLIST.TYPE_ IS '限制项目';
COMMENT ON COLUMN BS_BLACKLIST.OLD_UNIT_NAME IS '车属单位';
COMMENT ON COLUMN BS_BLACKLIST.DRIVER_ID IS '司机ID';
COMMENT ON COLUMN BS_BLACKLIST.CAR_ID IS '车辆ID';
COMMENT ON COLUMN BS_BLACKLIST.MOTORCADE_ID IS '车队ID';
COMMENT ON COLUMN BS_BLACKLIST.SUBJECT IS '主题';
COMMENT ON COLUMN BS_BLACKLIST.LOCK_DATE IS '锁定时间';
COMMENT ON COLUMN BS_BLACKLIST.UNLOCK_DATE IS '解锁时间';
COMMENT ON COLUMN BS_BLACKLIST.LOCKER_ID IS '锁定人ID';
COMMENT ON COLUMN BS_BLACKLIST.UNLOCKER_ID IS '解锁人ID';
COMMENT ON COLUMN BS_BLACKLIST.LOCK_REASON IS '锁定原因';
COMMENT ON COLUMN BS_BLACKLIST.UNLOCK_REASON IS '解锁原因';
COMMENT ON COLUMN BS_BLACKLIST.LEVEL_ IS '等级';
COMMENT ON COLUMN BS_BLACKLIST.CODE IS '编号';
COMMENT ON COLUMN BS_BLACKLIST.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_BLACKLIST.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_BLACKLIST.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_BLACKLIST.MODIFIER_ID IS '最后修改人ID';
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_MOTORCADE FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_DIRVER FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_LOCKER FOREIGN KEY (LOCKER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_BLACKLIST ADD CONSTRAINT BSFK_BLACKLIST_UNLOCKER FOREIGN KEY (UNLOCKER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
      CREATE INDEX BSIDX_BLACKLIST_DRIVER ON BS_BLACKLIST (DRIVER_ID);
      CREATE INDEX BSIDX_BLACKLIST_CAR ON BS_BLACKLIST (CAR_ID);

-- 营运事件基表
CREATE TABLE BS_CASE_BASE (
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36)         NOT NULL,
   CASE_NO              VARCHAR(255),
   CODE                 VARCHAR(255),
   TYPE_                INTEGER            NOT NULL,
   STATUS_              INTEGER            NOT NULL,
   SOURCE               INTEGER            NOT NULL,
   SUBJECT              VARCHAR(1000),
   ADDRESS              VARCHAR(1000),
   FROM_                VARCHAR(255),
   HAPPEN_DATE          TIMESTAMP                 NOT NULL,
   MOTORCADE_ID         INTEGER,
   MOTORCADE_NAME       VARCHAR(255),
   CAR_ID               INTEGER,
   CAR_PLATE            VARCHAR(255),
   DRIVER_ID            INTEGER,
   DRIVER_NAME          VARCHAR(255),
   DRIVER_CERT          VARCHAR(255),
   CLOSE_DATE           TIMESTAMP,
   CLOSER_ID            INTEGER,
   CLOSER_NAME          VARCHAR(255),
   DESC_                VARCHAR(4000),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   SYNC_UID             VARCHAR(36),
   SYNC_ID              INTEGER,
   CONSTRAINT BSPK_CASEBASE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_BASE IS '营运事件：表扬、投诉、营运违章、交通违法、事故等的基表';
COMMENT ON COLUMN BS_CASE_BASE.CASE_NO IS '案号：营运违章的案号，交通违章的违章顺序号等';
COMMENT ON COLUMN BS_CASE_BASE.CODE IS '自编号';
COMMENT ON COLUMN BS_CASE_BASE.TYPE_ IS '内部类型：1-表扬、2-投诉、3-营运违章、4-交通违章、5-事故';
COMMENT ON COLUMN BS_CASE_BASE.STATUS_ IS '状态：0-在案,1-已结案';
COMMENT ON COLUMN BS_CASE_BASE.SOURCE IS '来源：1-用户创建(手输)、2-接口导入、3-司机递交等';
COMMENT ON COLUMN BS_CASE_BASE.SUBJECT IS '标题';
COMMENT ON COLUMN BS_CASE_BASE.ADDRESS IS '事发地点';
COMMENT ON COLUMN BS_CASE_BASE.HAPPEN_DATE IS '事发时间';
COMMENT ON COLUMN BS_CASE_BASE.FROM_ IS '信息来源(用户填写)';
COMMENT ON COLUMN BS_CASE_BASE.MOTORCADE_ID IS '车队ID';
COMMENT ON COLUMN BS_CASE_BASE.MOTORCADE_NAME IS '车队名称';
COMMENT ON COLUMN BS_CASE_BASE.CAR_ID IS '车辆ID';
COMMENT ON COLUMN BS_CASE_BASE.CAR_PLATE IS '车辆号码';
COMMENT ON COLUMN BS_CASE_BASE.DRIVER_ID IS '司机ID';
COMMENT ON COLUMN BS_CASE_BASE.DRIVER_NAME IS '司机姓名';
COMMENT ON COLUMN BS_CASE_BASE.DRIVER_CERT IS '服务资格证';
COMMENT ON COLUMN BS_CASE_BASE.CLOSE_DATE IS '结案日期';
COMMENT ON COLUMN BS_CASE_BASE.CLOSER_ID IS '结案人ID';
COMMENT ON COLUMN BS_CASE_BASE.CLOSER_NAME IS '结案人姓名';
COMMENT ON COLUMN BS_CASE_BASE.DESC_ IS '备注';
COMMENT ON COLUMN BS_CASE_BASE.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CASE_BASE.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CASE_BASE.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_CASE_BASE.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CASE_BASE.SYNC_UID IS '旧数据同步的UID';
COMMENT ON COLUMN BS_CASE_BASE.SYNC_ID IS '数据同步ID';
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_MOTORCADE FOREIGN KEY (MOTORCADE_ID)
      REFERENCES BS_MOTORCADE (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_CAR FOREIGN KEY (CAR_ID)
      REFERENCES BS_CAR (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_DRIVER FOREIGN KEY (DRIVER_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_CLOSER FOREIGN KEY (CLOSER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_CASE_BASE ADD CONSTRAINT BSFK_CASEBASE_SYNC FOREIGN KEY (SYNC_ID)
      REFERENCES BC_SYNC_BASE (ID);
CREATE INDEX BSIDX_CASE_BASE_DRIVER ON BS_CASE_BASE (DRIVER_ID);
CREATE INDEX BSIDX_CASE_BASE_CAR ON BS_CASE_BASE (CAR_ID);
            
-- 营运违章
CREATE TABLE BS_CASE_INFRACT_BUSINESS (
   ID                   INTEGER           NOT NULL,
   RECEIVE_DATE         TIMESTAMP,
   RECEIVER_ID          INTEGER,
   RECEIVER_NAME        VARCHAR(255),
   CHARGER1_ID          INTEGER,
   CHARGER1_NAME        VARCHAR(255),
   CHARGER2_ID          INTEGER,
   CHARGER2_NAME        VARCHAR(255),
   DUTY                 VARCHAR(255),
   SORT                 VARCHAR(255),
   EXTENT               VARCHAR(255),
   CERT_KJ_TYPE         VARCHAR(255),
   CERT_KJ              VARCHAR(255),
   CERT_YY              VARCHAR(255),
   DETAIN               VARCHAR(255),
   JEOM                 NUMERIC(3,1),
   PENALTY              NUMERIC(10,2),
   PENALTY2             NUMERIC(10,2),
   AREA                 VARCHAR(255),
   PULL_UNIT            VARCHAR(255),
   OPERATOR             VARCHAR(255),
   OPERATE_UNIT         VARCHAR(255),
   RECEIPT              VARCHAR(255),
   COMMENT_             VARCHAR(4000),
   IS_INVALID           boolean default false,
   IS_SEAL              boolean default false,
   SEAL_DATE            TIMESTAMP,
   IS_DELIVER           boolean default false,
   IS_CLOSE             boolean default false,
   IS_OVERDUE           boolean default false,
   IS_STOP              boolean default false,
   CONSTRAINT BSPK_CASE_INFRACT_BUSINESS PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_INFRACT_BUSINESS IS '营运违章';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.RECEIVE_DATE IS '接案日期';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.RECEIVER_ID IS '接案人ID';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.RECEIVER_NAME IS '接案人姓名';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CHARGER1_ID IS '责任人1ID';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CHARGER1_NAME IS '责任人1姓名';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CHARGER2_ID IS '责任人2ID';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CHARGER2_NAME IS '责任人2姓名';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.DUTY IS '责任';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.SORT IS '性质';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.EXTENT IS '程度';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CERT_KJ_TYPE IS '没收证件类型';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CERT_KJ IS '扣件证号';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.CERT_YY IS '营运证号';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.DETAIN IS '扣留物品';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.JEOM IS '扣分';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.PENALTY IS '罚款';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.PENALTY2 IS '违约金';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.AREA IS '所属区县';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.PULL_UNIT IS '拖车单位';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.OPERATOR IS '执法人';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.OPERATE_UNIT IS '执法机关';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.RECEIPT IS '罚没收据编号';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.COMMENT_ IS '处理意见';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_INVALID IS '是否无效：1-无效';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_SEAL IS '是否盖章：1-盖';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.SEAL_DATE IS '盖章日期';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_DELIVER IS '是否交结案单：1-已交';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_CLOSE IS '是否结案：1-结案';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_OVERDUE IS '是否过期：1-过期';
COMMENT ON COLUMN BS_CASE_INFRACT_BUSINESS.IS_STOP IS '是否停场：1-停';
ALTER TABLE BS_CASE_INFRACT_BUSINESS ADD CONSTRAINT BSFK_INFRACTB_CASEBASE FOREIGN KEY (ID)
      REFERENCES BS_CASE_BASE (ID);
ALTER TABLE BS_CASE_INFRACT_BUSINESS ADD CONSTRAINT BSFK_INFRACTB_RECEIVER FOREIGN KEY (RECEIVER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_CASE_INFRACT_BUSINESS ADD CONSTRAINT BSFK_INFRACTB_CHARGER1 FOREIGN KEY (CHARGER1_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CASE_INFRACT_BUSINESS ADD CONSTRAINT BSFK_INFRACTB_CHARGER2 FOREIGN KEY (CHARGER2_ID)
      REFERENCES BS_CARMAN (ID);

-- 交通违章
CREATE TABLE BS_CASE_INFRACT_TRAFFIC (
   ID                   INTEGER           NOT NULL,
   CHARGER1_ID          INTEGER,
   CHARGER1_NAME        VARCHAR(255),
   CHARGER2_ID          INTEGER,
   CHARGER2_NAME        VARCHAR(255),
   DUTY                 VARCHAR(255),
   SORT                 VARCHAR(255),
   JEOM                 NUMERIC(3,1),
   COMMENT_             VARCHAR(4000),
   IS_DELIVER           boolean default false,
   DELIVER_DATE         TIMESTAMP,
   IS_SIGN              boolean default false,
   SIGN_DATE            TIMESTAMP,
   CONSTRAINT BSPK_CASE_INFRACT_TRAFFIC PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_INFRACT_TRAFFIC IS '交通违章';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.CHARGER1_ID IS '责任人1ID';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.CHARGER1_NAME IS '责任人1姓名';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.CHARGER2_ID IS '责任人2ID';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.CHARGER2_NAME IS '责任人2姓名';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.DUTY IS '责任';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.SORT IS '性质';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.JEOM IS '扣分';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.COMMENT_ IS '处理意见';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.IS_DELIVER IS '是否邮递：1-是';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.DELIVER_DATE IS '邮递时间';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.IS_SIGN IS '是否签领：1-是';
COMMENT ON COLUMN BS_CASE_INFRACT_TRAFFIC.SIGN_DATE IS '签领时间';
ALTER TABLE BS_CASE_INFRACT_TRAFFIC ADD CONSTRAINT BSFK_INFRACTT_CASEBASE FOREIGN KEY (ID)
      REFERENCES BS_CASE_BASE (ID);
ALTER TABLE BS_CASE_INFRACT_TRAFFIC ADD CONSTRAINT BSFK_INFRACTT_CHARGER1 FOREIGN KEY (CHARGER1_ID)
      REFERENCES BS_CARMAN (ID);
ALTER TABLE BS_CASE_INFRACT_TRAFFIC ADD CONSTRAINT BSFK_INFRACTT_CHARGER2 FOREIGN KEY (CHARGER2_ID)
      REFERENCES BS_CARMAN (ID);
      
-- 事故理赔
CREATE TABLE BS_CASE_ACCIDENT (
   ID                   INTEGER           NOT NULL,
   RECEIVE_DATE         TIMESTAMP,
   RECEIVER_ID          INTEGER,
   RECEIVER_NAME        VARCHAR(255),
   RECEIVE_CODE         VARCHAR(255),
   DEPARTMENT           VARCHAR(255),
   CHARGER_ID           INTEGER,
   CHARGER_NAME         VARCHAR(255),
   DUTY                 VARCHAR(255),
   SORT                 VARCHAR(255),
   WEATHER              VARCHAR(255),
   DRIVER_AREA          NUMERIC(1),
   DRIVER_TYPE          NUMERIC(1),
   DRIVER_CLASSES       NUMERIC(1),
   INSURANCE_COMPANY    VARCHAR(255),
   INSURANCE_INFO       VARCHAR(4000),
   IS_DELIVER           boolean default false,
   DELIVER_DATE         TIMESTAMP,
   DELIVER_MONEY        NUMERIC(10,2),
   IS_PAY               boolean default false,
   PAY_DATE             TIMESTAMP,
   PAY_MONEY            NUMERIC(10,2),
   PAY_CODE             VARCHAR(255),
   IS_CLAIM             boolean default false,
   CLAIM_DATE           TIMESTAMP,
   CLAIM_MONEY          NUMERIC(10,2),
   CLAIM_CODE           VARCHAR(255),
   CLAIM_NO1           VARCHAR(255),
   CLAIM_NO2           VARCHAR(255),
   CASUALTIES           VARCHAR(255),
   CAR_HURT             VARCHAR(255),
   THIRD_PARTY          VARCHAR(255),
   IS_ROB               boolean default false,
   HURT_COUNT           NUMERIC(10),
   DEAD_COUNT           NUMERIC(10),
   ACTUAL_LOSS          NUMERIC(10,2),
   IS_INNER_FIX         boolean default false,
   FIX_COST             NUMERIC(10,2),
   COST_DETAIL          VARCHAR(4000),
   CONSTRAINT BSPK_CASE_ACCIDENT PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_ACCIDENT IS '事故理赔';
COMMENT ON COLUMN BS_CASE_ACCIDENT.RECEIVE_DATE IS '受理时间';
COMMENT ON COLUMN BS_CASE_ACCIDENT.RECEIVER_ID IS '经办人ID';
COMMENT ON COLUMN BS_CASE_ACCIDENT.RECEIVER_NAME IS '经办人姓名';
COMMENT ON COLUMN BS_CASE_ACCIDENT.RECEIVE_CODE IS '受理编号';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DEPARTMENT IS '处理部门';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CHARGER_ID IS '负责人ID';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CHARGER_NAME IS '负责人姓名';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DUTY IS '责任';
COMMENT ON COLUMN BS_CASE_ACCIDENT.SORT IS '性质';
COMMENT ON COLUMN BS_CASE_ACCIDENT.WEATHER IS '天气';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DRIVER_AREA IS '司机区域:0-未定义，1-本市，2-本省，3-外省';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DRIVER_TYPE IS '司机类型：0:未定义,1:车主 ,2:司机,3:非编';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DRIVER_CLASSES IS '驾驶状态：如正班等';
COMMENT ON COLUMN BS_CASE_ACCIDENT.INSURANCE_COMPANY IS '保险公司';
COMMENT ON COLUMN BS_CASE_ACCIDENT.INSURANCE_INFO IS '相关保单';
COMMENT ON COLUMN BS_CASE_ACCIDENT.IS_DELIVER IS '是否送保：1-是';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DELIVER_DATE IS '送保日期';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DELIVER_MONEY IS '送保金额';
COMMENT ON COLUMN BS_CASE_ACCIDENT.IS_PAY IS '是否司机受款：1-是';
COMMENT ON COLUMN BS_CASE_ACCIDENT.PAY_DATE IS '司机受款日期';
COMMENT ON COLUMN BS_CASE_ACCIDENT.PAY_MONEY IS '司机受款金额';
COMMENT ON COLUMN BS_CASE_ACCIDENT.PAY_CODE IS '司机受款收据号';
COMMENT ON COLUMN BS_CASE_ACCIDENT.IS_CLAIM IS '是否保险公司赔付：1-是';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CLAIM_DATE IS '保险公司赔付日期';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CLAIM_MONEY IS '保险公司赔付金额';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CLAIM_CODE IS '保险公司赔付收据号';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CLAIM_NO1 IS '商业险赔付号';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CLAIM_NO2 IS '交强险赔付号';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CASUALTIES IS '伤亡情况';
COMMENT ON COLUMN BS_CASE_ACCIDENT.CAR_HURT IS '车损情况';
COMMENT ON COLUMN BS_CASE_ACCIDENT.THIRD_PARTY IS '第三者情况';
COMMENT ON COLUMN BS_CASE_ACCIDENT.IS_ROB IS '是否抢劫：1-是';
COMMENT ON COLUMN BS_CASE_ACCIDENT.HURT_COUNT IS '受伤人数';
COMMENT ON COLUMN BS_CASE_ACCIDENT.DEAD_COUNT IS '死亡人数';
COMMENT ON COLUMN BS_CASE_ACCIDENT.ACTUAL_LOSS IS '实际损失';
COMMENT ON COLUMN BS_CASE_ACCIDENT.IS_INNER_FIX IS '是否修理厂内修：1-是';
COMMENT ON COLUMN BS_CASE_ACCIDENT.FIX_COST IS '修理厂内修金额';
COMMENT ON COLUMN BS_CASE_ACCIDENT.COST_DETAIL IS '损失明细';
ALTER TABLE BS_CASE_ACCIDENT ADD CONSTRAINT BSFK_ACCIDENT_CASEBASE FOREIGN KEY (ID)
      REFERENCES BS_CASE_BASE (ID);
ALTER TABLE BS_CASE_ACCIDENT ADD CONSTRAINT BSFK_ACCIDENT_CHARGER FOREIGN KEY (CHARGER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
ALTER TABLE BS_CASE_ACCIDENT ADD CONSTRAINT BSFK_ACCIDENT_RECEIVER FOREIGN KEY (RECEIVER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
      

-- 投诉与建议
CREATE TABLE BS_CASE_ADVICE (
   ID                   INTEGER           NOT NULL,
   ADVICE_TYPE          INTEGER            NOT NULL,
   RECEIVE_DATE         TIMESTAMP                 NOT NULL,
   RECEIVE_CODE         VARCHAR(255),
   RECEIVER_ID          INTEGER,
   RECEIVER_NAME        VARCHAR(255),
   SUBJECT2             VARCHAR(255),
   DETAIL               VARCHAR(4000),
   CAR_COLOR            VARCHAR(255),
   DRIVER_SEX           NUMERIC(1),
   DRIVER_FEATURE       VARCHAR(255),
   ADVISOR_NAME         VARCHAR(255),
   ADVISOR_SEX          INTEGER            NOT NULL,
   ADVISOR_AGE          NUMERIC(3),
   ADVISOR_PHONE        VARCHAR(255),
   ADVISOR_CERT         VARCHAR(255),
   DUTY                 VARCHAR(255),
   EXTENT               VARCHAR(255),
   NOTICE_DATE          TIMESTAMP,
   RESULT_              VARCHAR(4000),
   TICKET               VARCHAR(255),
   MACHINE_PRICE        NUMERIC(10),
   CHARGE               NUMERIC(10),
   RIDING_TIME_START    TIMESTAMP,
   RIDING_TIME_END      TIMESTAMP,
   PATH_FROM            VARCHAR(255),
   PATH_TO              VARCHAR(255),
   PATH                 VARCHAR(255),
   PASSENGER_COUNT_MAN  NUMERIC(1),
   PASSENGER_COUNT_WOMAN NUMERIC(1),
   PASSENGER_COUNT_CHILD NUMERIC(1),
   PASSENGER_COUNT      NUMERIC(1),
   DELIVER_DATE         TIMESTAMP,
   IS_INVALID           boolean default false,
   CONSTRAINT BSPK_CASE_ADVICE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_ADVICE IS '投诉与建议';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVICE_TYPE IS '标识是投诉还是建议:0-投诉,1-建议';
COMMENT ON COLUMN BS_CASE_ADVICE.RECEIVE_DATE IS '接诉时间';
COMMENT ON COLUMN BS_CASE_ADVICE.RECEIVE_CODE IS '受理号';
COMMENT ON COLUMN BS_CASE_ADVICE.RECEIVER_ID IS '经办人ID';
COMMENT ON COLUMN BS_CASE_ADVICE.RECEIVER_NAME IS '经办人姓名';
COMMENT ON COLUMN BS_CASE_ADVICE.SUBJECT2 IS '投诉项目小类';
COMMENT ON COLUMN BS_CASE_ADVICE.DETAIL IS '投诉内容';
COMMENT ON COLUMN BS_CASE_ADVICE.CAR_COLOR IS '车色';
COMMENT ON COLUMN BS_CASE_ADVICE.DRIVER_SEX IS '司机性别:0-未设,1-男,2-女';
COMMENT ON COLUMN BS_CASE_ADVICE.DRIVER_FEATURE IS '司机特征';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVISOR_NAME IS '投诉人姓名';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVISOR_SEX IS '投诉人性别';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVISOR_AGE IS '投诉人年龄';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVISOR_PHONE IS '投诉人电话';
COMMENT ON COLUMN BS_CASE_ADVICE.ADVISOR_CERT IS '投诉人证件号';
COMMENT ON COLUMN BS_CASE_ADVICE.DUTY IS '责任';
COMMENT ON COLUMN BS_CASE_ADVICE.EXTENT IS '程度';
COMMENT ON COLUMN BS_CASE_ADVICE.NOTICE_DATE IS '通知时间';
COMMENT ON COLUMN BS_CASE_ADVICE.RESULT_ IS '处理结果';
COMMENT ON COLUMN BS_CASE_ADVICE.TICKET IS '车票号码';
COMMENT ON COLUMN BS_CASE_ADVICE.MACHINE_PRICE IS '计费器显示价格';
COMMENT ON COLUMN BS_CASE_ADVICE.CHARGE IS '实际收费';
COMMENT ON COLUMN BS_CASE_ADVICE.RIDING_TIME_START IS '乘车起始时间';
COMMENT ON COLUMN BS_CASE_ADVICE.RIDING_TIME_END IS '乘车结束时间';
COMMENT ON COLUMN BS_CASE_ADVICE.PATH_FROM IS '乘车路线(从)';
COMMENT ON COLUMN BS_CASE_ADVICE.PATH_TO IS '乘车路线(到)';
COMMENT ON COLUMN BS_CASE_ADVICE.PATH IS '乘车路线';
COMMENT ON COLUMN BS_CASE_ADVICE.PASSENGER_COUNT_MAN IS '乘车人数(男)';
COMMENT ON COLUMN BS_CASE_ADVICE.PASSENGER_COUNT_WOMAN IS '乘车人数(女)';
COMMENT ON COLUMN BS_CASE_ADVICE.PASSENGER_COUNT_CHILD IS '乘车人数(童)';
COMMENT ON COLUMN BS_CASE_ADVICE.PASSENGER_COUNT IS '乘车人数';
COMMENT ON COLUMN BS_CASE_ADVICE.DELIVER_DATE IS '结案书交回日期';
COMMENT ON COLUMN BS_CASE_ADVICE.IS_INVALID IS '是否无效：1-无效';
ALTER TABLE BS_CASE_ADVICE ADD CONSTRAINT BSFK_ADVICE_CASEBASE FOREIGN KEY (ID)
      REFERENCES BS_CASE_BASE (ID);
ALTER TABLE BS_CASE_ADVICE ADD CONSTRAINT BSFK_ADVICE_RECEIVER FOREIGN KEY (RECEIVER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);
      
-- 表扬
CREATE TABLE BS_CASE_PRAISE (
   ID                   INTEGER           NOT NULL,
   PRAISE_TYPE          VARCHAR(255),
   RECEIVE_DATE         TIMESTAMP                 NOT NULL,
   RECEIVER_ID          INTEGER,
   RECEIVER_NAME        VARCHAR(255),
   SUBJECT2             VARCHAR(255),
   DETAIL               VARCHAR(4000),
   CAR_COLOR            VARCHAR(255),
   DRIVER_SEX           INTEGER            NOT NULL,
   DRIVER_FEATURE       VARCHAR(255),
   ADVISOR_NAME         VARCHAR(255)        NOT NULL,
   ADVISOR_SEX          INTEGER            NOT NULL,
   ADVISOR_AGE          NUMERIC(3),
   ADVISOR_PHONE        VARCHAR(255),
   ADVISOR_CERT         VARCHAR(255),
   NOTICE_DATE          TIMESTAMP,
   RESULT_              VARCHAR(4000),
   TICKET               VARCHAR(255),
   MACHINE_PRICE        NUMERIC(10),
   CHARGE               NUMERIC(10),
   RIDING_TIME_START    TIMESTAMP,
   RIDING_TIME_END      TIMESTAMP,
   PATH_FROM            VARCHAR(255),
   PATH_TO              VARCHAR(255),
   PATH                 VARCHAR(255),
   PASSENGER_COUNT_MAN  NUMERIC(1),
   PASSENGER_COUNT_WOMAN NUMERIC(1),
   PASSENGER_COUNT_CHILD NUMERIC(1),
   PASSENGER_COUNT      NUMERIC(1),
   REWARD_MONEY         NUMERIC(10,2),
   CONSTRAINT BSPK_CASE_PRAISE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CASE_PRAISE IS '表扬';
COMMENT ON COLUMN BS_CASE_PRAISE.PRAISE_TYPE IS '表扬类型';
COMMENT ON COLUMN BS_CASE_PRAISE.RECEIVE_DATE IS '接诉时间';
COMMENT ON COLUMN BS_CASE_PRAISE.RECEIVER_ID IS '经办人ID';
COMMENT ON COLUMN BS_CASE_PRAISE.RECEIVER_NAME IS '经办人姓名';
COMMENT ON COLUMN BS_CASE_PRAISE.SUBJECT2 IS '表扬项目小类';
COMMENT ON COLUMN BS_CASE_PRAISE.DETAIL IS '表扬内容';
COMMENT ON COLUMN BS_CASE_PRAISE.CAR_COLOR IS '车色';
COMMENT ON COLUMN BS_CASE_PRAISE.DRIVER_SEX IS '司机性别:0-未设,1-男,2-女';
COMMENT ON COLUMN BS_CASE_PRAISE.DRIVER_FEATURE IS '司机特征';
COMMENT ON COLUMN BS_CASE_PRAISE.ADVISOR_NAME IS '投诉人姓名';
COMMENT ON COLUMN BS_CASE_PRAISE.ADVISOR_SEX IS '投诉人性别';
COMMENT ON COLUMN BS_CASE_PRAISE.ADVISOR_AGE IS '投诉人年龄';
COMMENT ON COLUMN BS_CASE_PRAISE.ADVISOR_PHONE IS '投诉人电话';
COMMENT ON COLUMN BS_CASE_PRAISE.ADVISOR_CERT IS '投诉人证件号';
COMMENT ON COLUMN BS_CASE_PRAISE.NOTICE_DATE IS '通知时间';
COMMENT ON COLUMN BS_CASE_PRAISE.RESULT_ IS '处理结果';
COMMENT ON COLUMN BS_CASE_PRAISE.TICKET IS '车票号码';
COMMENT ON COLUMN BS_CASE_PRAISE.MACHINE_PRICE IS '计费器显示价格';
COMMENT ON COLUMN BS_CASE_PRAISE.CHARGE IS '实际收费';
COMMENT ON COLUMN BS_CASE_PRAISE.RIDING_TIME_START IS '乘车起始时间';
COMMENT ON COLUMN BS_CASE_PRAISE.RIDING_TIME_END IS '乘车结束时间';
COMMENT ON COLUMN BS_CASE_PRAISE.PATH_FROM IS '乘车路线(从)';
COMMENT ON COLUMN BS_CASE_PRAISE.PATH_TO IS '乘车路线(到)';
COMMENT ON COLUMN BS_CASE_PRAISE.PATH IS '乘车路线';
COMMENT ON COLUMN BS_CASE_PRAISE.PASSENGER_COUNT_MAN IS '乘车人数(男)';
COMMENT ON COLUMN BS_CASE_PRAISE.PASSENGER_COUNT_WOMAN IS '乘车人数(女)';
COMMENT ON COLUMN BS_CASE_PRAISE.PASSENGER_COUNT_CHILD IS '乘车人数(童)';
COMMENT ON COLUMN BS_CASE_PRAISE.PASSENGER_COUNT IS '乘车人数';
COMMENT ON COLUMN BS_CASE_PRAISE.REWARD_MONEY IS '获奖金额';
ALTER TABLE BS_CASE_PRAISE ADD CONSTRAINT BSFK_PRAISE_CASEBASE FOREIGN KEY (ID)
      REFERENCES BS_CASE_BASE (ID);
ALTER TABLE BS_CASE_PRAISE ADD CONSTRAINT BSFK_PRAISE_RECEIVER FOREIGN KEY (RECEIVER_ID)
      REFERENCES BC_IDENTITY_ACTOR (ID);

-- 工伤
CREATE TABLE BS_INDUSTRIAL_INJURY 
(
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36)         NOT NULL,
   CONTRACT_ID          INTEGER           NOT NULL,
   STATUS_		INTEGER	     NOT NULL,
   CODE                 VARCHAR(255)        NOT NULL,
   HAPPEN_DATE          TIMESTAMP,
   CONFIRM_DATE         TIMESTAMP,
   START_DATE           TIMESTAMP,
   END_DATE             TIMESTAMP,
   COMPENSATION         VARCHAR(255),
   MONEY                NUMERIC(10,2),
   IS_OAS               INTEGER            DEFAULT 0,
   IS_IN_HOSPITAL       INTEGER            DEFAULT 0,
   IS_LI                INTEGER            DEFAULT 0,
   DESCRIPTION          VARCHAR(4000),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT PK_BS_INDUSTRIAL_INJURY PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_INDUSTRIAL_INJURY IS '工伤';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.CONTRACT_ID IS '合同ID';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.STATUS_ IS '状态：0-正常,1-已禁用';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.CODE IS '工伤号';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.HAPPEN_DATE IS '工伤时间';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.CONFIRM_DATE IS '认定日期';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.START_DATE IS '医疗开始日期';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.END_DATE IS '医疗结束日期';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.COMPENSATION IS '赔偿项目';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.MONEY IS '金额';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.IS_OAS IS '是否门诊';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.IS_IN_HOSPITAL IS '是否住院';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.IS_LI IS '是否劳动鉴别';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.DESCRIPTION IS '概况描述';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_INDUSTRIAL_INJURY.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_INDUSTRIAL_INJURY ADD CONSTRAINT BSFK_INDUS_REFERENCE_BS_CONTR FOREIGN KEY (CONTRACT_ID)
      REFERENCES BS_CONTRACT_LABOUR (ID);
ALTER TABLE BS_INDUSTRIAL_INJURY ADD CONSTRAINT BSFK_INDUS_REFERENCE_BC_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_INDUSTRIAL_INJURY ADD CONSTRAINT BSFK_INDUS_INJURY_BC_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
	  
-- 车辆保单
CREATE TABLE BS_CAR_POLICY (
   ID                   INTEGER           NOT NULL,
   UID_                 VARCHAR(36)         NOT NULL,
   VER_MAJOR            NUMERIC(2),
   VER_MINOR            NUMERIC(3),
   PATCH_NO             VARCHAR(255)        NOT NULL,
   MAIN                 INTEGER            NOT NULL,
   STATUS_              INTEGER            NOT NULL,
   CAR_ID               INTEGER           NOT NULL,
   REGISTER_DATE        TIMESTAMP,
   ASSURED              VARCHAR(255),
   COMMERIAL_NO         VARCHAR(255),
   COMMERIAL_COMPANY    VARCHAR(255),
   COMMERIAL_START_DATE TIMESTAMP,
   COMMERIAL_END_DATE   TIMESTAMP,
   OWNRISK              boolean default false,
   GREENSLIP            boolean default false,
   GREENSLIP_SAME_DATE  boolean default false,
   GREENSLIP_NO         VARCHAR(255),
   GREENSLIP_COMPANY    VARCHAR(255),
   GREENSLIP_START_DATE               TIMESTAMP,
   GREENSLIP_END_DATE                 TIMESTAMP,
   GREENSLIP_SOURCE     VARCHAR(255),
   LIABILITY_NO         VARCHAR(255),
   AMOUNT               NUMERIC(10,2),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIED_DATE        TIMESTAMP,
   MODIFIER_ID          INTEGER,
   CONSTRAINT BSPK_CAR_POLICY PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_CAR_POLICY IS '车辆保单';
COMMENT ON COLUMN BS_CAR_POLICY.STATUS_ IS '状态：0-正常,1-注销';
COMMENT ON COLUMN BS_CAR_POLICY.VER_MAJOR IS '主版本号';
COMMENT ON COLUMN BS_CAR_POLICY.VER_MINOR IS '次版本号';
COMMENT ON COLUMN BS_CAR_POLICY.PATCH_NO IS '批号';
COMMENT ON COLUMN BS_CAR_POLICY.MAIN IS '主体: 0-当前版本,1-历史版本';
COMMENT ON COLUMN BS_CAR_POLICY.CAR_ID IS '投保车号';
COMMENT ON COLUMN BS_CAR_POLICY.REGISTER_DATE IS '初登日期';
COMMENT ON COLUMN BS_CAR_POLICY.ASSURED IS '投保人';
COMMENT ON COLUMN BS_CAR_POLICY.COMMERIAL_NO IS '商业险号';
COMMENT ON COLUMN BS_CAR_POLICY.COMMERIAL_COMPANY IS '商业险保险公司';
COMMENT ON COLUMN BS_CAR_POLICY.COMMERIAL_START_DATE IS '商业险开始日期';
COMMENT ON COLUMN BS_CAR_POLICY.COMMERIAL_END_DATE IS '商业险结束日期';
COMMENT ON COLUMN BS_CAR_POLICY.OWNRISK IS '是否自保';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP IS '是否购买了强制险';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_SAME_DATE IS '强制险是否与商业险同期';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_NO IS '强险单号';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_COMPANY IS '强险保险公司';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_START_DATE IS '强制险开始日期';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_END_DATE IS '强制险结束日期';
COMMENT ON COLUMN BS_CAR_POLICY.GREENSLIP_SOURCE IS '强保人来源';
COMMENT ON COLUMN BS_CAR_POLICY.LIABILITY_NO IS '责任险单号';
COMMENT ON COLUMN BS_CAR_POLICY.AMOUNT IS '合计';
COMMENT ON COLUMN BS_CAR_POLICY.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_CAR_POLICY.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_CAR_POLICY.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_CAR_POLICY.MODIFIER_ID IS '最后修改人ID';
ALTER TABLE BS_CAR_POLICY ADD CONSTRAINT BSFK_CARPOLICY_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_POLICY ADD CONSTRAINT BSFK_CARPOLICY_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_CAR_POLICY ADD CONSTRAINT BSFK_CARPOLICY_CAR FOREIGN KEY (CAR_ID )
      REFERENCES BS_CAR (ID);
CREATE INDEX BSIDX_CAR_POLICY ON BS_CAR_POLICY (CAR_ID);


-- 车辆保单险种
CREATE TABLE BS_INSURANCE_TYPE 
(
   ID                   INTEGER          NOT NULL,
   PID                  INTEGER          NOT NULL,
   NAME                 VARCHAR(255)       NOT NULL,
   COVERAGE		        NUMERIC(10,2),
   PREMIUM              NUMERIC(10,2),
   FILE_DATE            TIMESTAMP                 NOT NULL,
   AUTHOR_ID            INTEGER           NOT NULL,
   MODIFIER_ID          INTEGER,
   MODIFIED_DATE        TIMESTAMP,
   CONSTRAINT BSPK_INSURANCE_TYPE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_INSURANCE_TYPE IS '车辆保单险种';
COMMENT ON COLUMN BS_INSURANCE_TYPE.PID IS '所属车辆保单ID';
COMMENT ON COLUMN BS_INSURANCE_TYPE.NAME IS '险种名称';
COMMENT ON COLUMN BS_INSURANCE_TYPE.COVERAGE IS '保额';
COMMENT ON COLUMN BS_INSURANCE_TYPE.PREMIUM IS '保费';
COMMENT ON COLUMN BS_INSURANCE_TYPE.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_INSURANCE_TYPE.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_INSURANCE_TYPE.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_INSURANCE_TYPE.MODIFIED_DATE IS '最后修改时间';
ALTER TABLE BS_INSURANCE_TYPE ADD CONSTRAINT BSFK_CARPOLICY FOREIGN KEY (PID)
      REFERENCES BS_CAR_POLICY (ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE BS_INSURANCE_TYPE ADD CONSTRAINT BSFK_INSURANCETYPE_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BS_INSURANCE_TYPE (ID);
ALTER TABLE BS_INSURANCE_TYPE ADD CONSTRAINT BSFK_INSURANCETYPE_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BS_INSURANCE_TYPE (ID);

-- 从交委WebService接口同步的交通违章信息
CREATE TABLE BS_SYNC_JIAOWEI_JTWF (
    ID INTEGER NOT NULL,
    HAPPEN_DATE TIMESTAMP NOT NULL,
    CAR_PLATE_TYPE VARCHAR(100) NOT NULL,
    CAR_PLATE_NO VARCHAR(100) NOT NULL,
    DRIVER_CERT VARCHAR(255),
    DRIVER_NAME VARCHAR(255),
    JEOM NUMERIC(10,1) NOT NULL,
    COMPANY_NAME VARCHAR(255),
    CONTENT VARCHAR(4000) NOT NULL,
    CONSTRAINT BSPK_SYNC_JIAOWEI_JTWF PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_SYNC_JIAOWEI_JTWF IS '交委WebService接口的交通违章信息';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.HAPPEN_DATE IS '违章时间';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.CONTENT IS '违章内容';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.CAR_PLATE_TYPE IS '车牌类型';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.CAR_PLATE_NO IS '车牌号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.DRIVER_NAME IS '当事司机姓名';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.DRIVER_CERT IS '服务资格证';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.JEOM IS '本次扣分';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_JTWF.COMPANY_NAME IS '单位名称';
ALTER TABLE BS_SYNC_JIAOWEI_JTWF ADD CONSTRAINT BSFK_JIAOWEIJTWF2BASE FOREIGN KEY (ID)
      REFERENCES BC_SYNC_BASE (ID);
CREATE INDEX BCIDX_JIAOWEIJTWF_DRIVER_CERT ON BS_SYNC_JIAOWEI_JTWF (DRIVER_CERT);
CREATE INDEX BCIDX_JIAOWEIJTWF_CAR_PLATE ON BS_SYNC_JIAOWEI_JTWF (CAR_PLATE_TYPE,CAR_PLATE_NO);

-- 从交委WebService接口同步的营运违章信息
CREATE TABLE BS_SYNC_JIAOWEI_YYWZ (
    ID			INTEGER NOT NULL,
    C_ID		VARCHAR(255) NOT NULL,
    STATUS		VARCHAR(100),
    CERT_KJ		VARCHAR(255),
    OPERATOR		VARCHAR(255),
    OPERATE_UNIT        VARCHAR(255),
    VIDEO_OPERATER      VARCHAR(255),
    DRIVER_NAME		VARCHAR(255),
    IDCARD_TYPE         VARCHAR(255),
    IDCARD_CODE         VARCHAR(255),
    CAR_PLATE		VARCHAR(255),
    COMPANY		VARCHAR(255),
    ADDRESS             VARCHAR(1000),
    OWNER               VARCHAR(255),
    OWNER_ID            VARCHAR(100),
    BS_CERT_NO          VARCHAR(255),
    CONTENT		VARCHAR(4000) NOT NULL,
    HAPPEN_DATE         TIMESTAMP NOT NULL,
    EVIDENCE_UNIT       VARCHAR(255),
    WZ_TYPE		VARCHAR(255),
    BUSLINES		VARCHAR(255),
    CARPLATE_COLOR	VARCHAR(100),
    DRIVER_CERT		VARCHAR(255),
    COMMIT_STATUS	VARCHAR(255),
    RECEIPT             VARCHAR(255),
    NOTICE		VARCHAR(255),
    CERT_YY             VARCHAR(255),
    SEATING		NUMERIC(10,1),
    OWE_RECORD          VARCHAR(255),
    OWE_SIGNATURE	VARCHAR(255),
    LEAVE_TROOPS	VARCHAR(255),
    AREA                VARCHAR(255),
    CLOSE_DATE          TIMESTAMP,
    DESC_               VARCHAR(4000),
    CLONE               VARCHAR(4000),
    SUBJECT             VARCHAR(1000),
    DETAIN              VARCHAR(255),
    PULL_UNIT           VARCHAR(255),
    PENALTY             NUMERIC(10,2),
    CONSTRAINT BSPK_SYNC_JIAOWEI_YYWZ PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_SYNC_JIAOWEI_YYWZ IS '交委WebService接口的营运违章信息';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.STATUS IS '状态';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CERT_KJ IS '扣件证号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OPERATOR IS '执法人';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OPERATE_UNIT IS '执法分队';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.VIDEO_OPERATER IS '摄录员';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.DRIVER_NAME IS '当事人';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.IDCARD_TYPE IS '身份证明类型';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.IDCARD_CODE IS '身份证明编号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CAR_PLATE IS '违章主体';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.COMPANY IS '违章企业';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.ADDRESS IS '违章地段';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OWNER IS '业户名称';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OWNER_ID IS '业户ID';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.BS_CERT_NO IS '经营许可证号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CONTENT IS '违章内容';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.EVIDENCE_UNIT IS '证物保存单位';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.WZ_TYPE IS '违章类型';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.BUSLINES IS '公交线路';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CARPLATE_COLOR IS '车牌颜色';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.DRIVER_CERT IS '资格证号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.COMMIT_STATUS IS '提交状态';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.RECEIPT IS '罚没收据编号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.NOTICE IS '放行通知书编号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CERT_YY IS '营运证号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.SEATING IS '座位数';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OWE_RECORD IS '欠笔录';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.OWE_SIGNATURE IS '欠签名';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.LEAVE_TROOPS IS '留队部';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.AREA IS '所属区县';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CLOSE_DATE IS '结案日期';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.DESC_ IS '备注';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.CLONE IS '是否克隆车';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.SUBJECT IS '违章项目';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.DETAIN IS '扣留物品';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.PULL_UNIT IS '拖车单位';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_YYWZ.PENALTY IS '罚款';
ALTER TABLE BS_SYNC_JIAOWEI_YYWZ ADD CONSTRAINT BSFK_JIAOWEIYYWZBASE FOREIGN KEY (ID)
      REFERENCES BC_SYNC_BASE (ID);
CREATE INDEX BCIDX_JIAOWEIYYWZ_DRIVER_CERT ON BS_SYNC_JIAOWEI_YYWZ (DRIVER_CERT);


-- 从交委WebService接口同步的投诉与建议信息
CREATE TABLE BS_SYNC_JIAOWEI_ADVICE (
    ID			INTEGER NOT NULL,
    TIS_RECEIVE_CODE	VARCHAR(100),
    RECEIVE_CODE        VARCHAR(255),
    ADVISOR_NAME        VARCHAR(255) NOT NULL,
    PATH_FROM           VARCHAR(255),
    PATH_TO             VARCHAR(255),
    RIDING_TIME_START   TIMESTAMP,
    RIDING_TIME_END     TIMESTAMP,
    ADVISOR_SEX         VARCHAR(100),
    ADVISOR_AGE         NUMERIC(3,0),
    ADVISOR_PHONE       VARCHAR(255),
    ADVISOR_CERT        VARCHAR(255),
    OLD_UNIT_NAME       VARCHAR(255),
    CAR_PLATE		VARCHAR(255),
    DRIVER_CERT		VARCHAR(255),
    DRIVER_CHAR         VARCHAR(255),
    CONTENT		VARCHAR(4000) NOT NULL,
    RECEIVE_DATE        TIMESTAMP,
    RESULT_             VARCHAR(4000),
    ADVICE_TYPE		VARCHAR(255),
    ADVICE_BS		VARCHAR(255),
    SUBJECT             VARCHAR(255),
    SUBJECT2            VARCHAR(255),
    MACHINE_PRICE       INTEGER,
    TICKET              VARCHAR(255),
    CHARGE              VARCHAR(255),
    DRIVER_SEX          VARCHAR(10),
    SUGGEST_BS		VARCHAR(255),
    BUSLINES            VARCHAR(255),
    CONSTRAINT BSPK_SYNC_JIAOWEI_ADVICE PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_SYNC_JIAOWEI_ADVICE IS '交委WebService接口的投诉与建议信息';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.TIS_RECEIVE_CODE IS '运政受理号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.RECEIVE_CODE IS '电话受理号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVISOR_NAME IS '投诉人姓名';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.PATH_FROM IS '乘车路线(从)';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.PATH_TO IS '乘车路线(到)';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.RIDING_TIME_START IS '乘车起始时间';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.RIDING_TIME_END IS '乘车结束时间';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVISOR_SEX IS '投诉人性别';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVISOR_AGE IS '投诉人年龄';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVISOR_PHONE IS '投诉人电话';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVISOR_CERT IS '投诉人证件号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.OLD_UNIT_NAME IS '车属单位';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.CAR_PLATE IS '车牌号码';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.DRIVER_CERT IS '资格证号';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.DRIVER_CHAR IS '司机特征';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.CONTENT IS '投诉内容';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.RECEIVE_DATE IS '受理时间';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.RESULT_ IS '处理结果';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVICE_TYPE IS '投诉或建议';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.ADVICE_BS IS '投诉行业';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.SUBJECT IS '投诉项目大类';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.SUBJECT2 IS '投诉项目小类';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.MACHINE_PRICE IS '计费器显示价格';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.TICKET IS '车票号码';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.CHARGE IS '实际收费';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.DRIVER_SEX IS '司机性别';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.SUGGEST_BS IS '建议行业';
COMMENT ON COLUMN BS_SYNC_JIAOWEI_ADVICE.BUSLINES IS '公交线路或站场';
ALTER TABLE BS_SYNC_JIAOWEI_ADVICE ADD CONSTRAINT BSFK_JIAOWEIADVICEBASE FOREIGN KEY (ID)
      REFERENCES BC_SYNC_BASE (ID);
CREATE INDEX BCIDX_JIAOWEIADVICE_DRIVER_CERT ON BS_SYNC_JIAOWEI_ADVICE (DRIVER_CERT);

-- 从金盾网抓取的交通违法信息
CREATE TABLE BS_SYNC_JINDUN_JTWF (
    ID INTEGER NOT NULL,
    CAR_TYPE VARCHAR(10) NOT NULL,
    CAR_TYPE_DESC VARCHAR(100) NOT NULL,
    CAR_PLATE_TYPE VARCHAR(100) NOT NULL,
    CAR_PLATE_NO VARCHAR(100) NOT NULL,
    ENGINE_NO VARCHAR(255),
    HAPPEN_DATE TIMESTAMP NOT NULL,
    ADDRESS VARCHAR(1000),
    DRIVER_NAME VARCHAR(255),
    JEOM NUMERIC(10,1) NOT NULL,
    PENALTY NUMERIC(10,1) NOT NULL,
    OVERDUE_PAYMENT NUMERIC(10,1) NOT NULL,
    DECISION_NO VARCHAR(255),
    DECISION_TYPE VARCHAR(255),
    SOURCE VARCHAR(255),
    TRAFFIC VARCHAR(255),
    BREAK_TYPE VARCHAR(255),
    CONSTRAINT BSPK_SYNC_JINDUN_JTWF PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_SYNC_JINDUN_JTWF IS '从金盾网抓取的交通违法信息';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.HAPPEN_DATE IS '违法时间';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.CAR_TYPE IS '号牌种类';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.CAR_TYPE_DESC IS '号牌种类的中文描述';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.CAR_PLATE_TYPE IS '车牌类型';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.CAR_PLATE_NO IS '车牌号';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.ENGINE_NO IS '发动机号';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.DRIVER_NAME IS '当事人';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.JEOM IS '违法记分数';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.ADDRESS IS '违法地点';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.DECISION_NO IS '决定书编号';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.DECISION_TYPE IS '决定书类别';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.SOURCE IS '违法来源';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.PENALTY IS '罚款金额';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.OVERDUE_PAYMENT IS '滞纳金';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.TRAFFIC IS '交通方式';
COMMENT ON COLUMN BS_SYNC_JINDUN_JTWF.BREAK_TYPE IS '违法行为';
ALTER TABLE BS_SYNC_JINDUN_JTWF ADD CONSTRAINT BSFK_JINDUNJTWF2BASE FOREIGN KEY (ID)
      REFERENCES BC_SYNC_BASE (ID);
CREATE INDEX BCIDX_JINDUNJTWF_CAR ON BS_SYNC_JINDUN_JTWF (CAR_PLATE_TYPE,CAR_PLATE_NO);

