-- ###########################################################################
-- 宝城综合应用系统的升级脚本
-- 数据库类型: postgresql
-- 升级版本: 从 1.4.8.1升级到 1.4.8.2
-- ###########################################################################
-- 插入车辆经营权号的查看角色数据
insert into  BC_IDENTITY_ROLE (ID, STATUS_,INNER_,TYPE_,ORDER_,CODE,NAME) 
	values(NEXTVAL('CORE_SEQUENCE'), 0, false,  0,'0102-5', 'BS_CAR_OWNERSHIPNUMBER_CHECK','车辆经营权号查看');
	
-- 创建司机招聘信息表
CREATE TABLE BS_TEMP_DRIVER(
	ID  INTEGER  NOT NULL,
	UID_ VARCHAR(36) NOT NULL,
	STATUS_ INTEGER DEFAULT 0, 
	NAME VARCHAR(255) NOT NULL,
	SEX NUMERIC(1) DEFAULT 0,
	BIRTHDATE TIMESTAMP,
	REGION_ NUMERIC(1) DEFAULT 0,
	ORIGIN VARCHAR(255),
	ADDRESS VARCHAR(500),
	NEW_ADDR VARCHAR(500),
	PHONE VARCHAR(255),
	CERT_IDENTITY VARCHAR(255) NOT NULL,
	CERT_FWZG VARCHAR(255),
	CERT_CYZG VARCHAR(255),
	EDUCATION VARCHAR(255),
	NATION VARCHAR(255),
	LIST_WORK_EXPERIENCE VARCHAR(4000),
	LIST_FAMILY VARCHAR(4000),
	MARRY  VARCHAR(255),
	DESC_ VARCHAR(4000),
	CREDIT_ TEXT,
	CREDIT_DATE TIMESTAMP,
	CERT_DRIVING_FIRST_DATE TIMESTAMP,
	CY_START_YEAR INTEGER,
	VALID_START_DATE TIMESTAMP,
	VALID_END_DATE TIMESTAMP,
	INTERVIEW_DATE TIMESTAMP,
	REGISTER_DATE TIMESTAMP,
	CREDIT_DESC VARCHAR(255),
	CRIME_RECODE VARCHAR(255),
	BACK_GROUND VARCHAR(255),
	ENTRY_CAR VARCHAR(255),
	APPLY_ATTRIBUTE VARCHAR(255),
	ISSUE VARCHAR(255),
	FORMER_UNIT VARCHAR(255),
	FILE_DATE TIMESTAMP NOT NULL,
	AUTHOR_ID INTEGER NOT NULL,
	MODIFIED_DATE TIMESTAMP,
	MODIFIER_ID INTEGER,
	CONSTRAINT BSPK_TEMP_DRIVER PRIMARY KEY (ID),
	CONSTRAINT BSUNIQUE_CERT_IDENTITY_TEMP_DRIVER UNIQUE (CERT_IDENTITY)
);
COMMENT ON TABLE BS_TEMP_DRIVER IS '司机招聘记录表';
COMMENT ON COLUMN BS_TEMP_DRIVER.STATUS_ IS '状态：0-启用中,1-已禁用,2-已删除';
COMMENT ON COLUMN BS_TEMP_DRIVER.SEX IS '姓别 0=未知 1=男，2=女，3=？';
COMMENT ON COLUMN BS_TEMP_DRIVER.REGION_ IS '区域 0=空，1=本市，2=本省 3=外省';
COMMENT ON COLUMN BS_TEMP_DRIVER.ORIGIN IS '籍贯';
COMMENT ON COLUMN BS_TEMP_DRIVER.ADDRESS  IS '地址';
COMMENT ON COLUMN BS_TEMP_DRIVER.NEW_ADDR IS '最新地址';
COMMENT ON COLUMN BS_TEMP_DRIVER.PHONE IS '手机号码';
COMMENT ON COLUMN BS_TEMP_DRIVER.CERT_IDENTITY IS '身份证';
COMMENT ON COLUMN BS_TEMP_DRIVER.CERT_FWZG IS '服务资格证';
COMMENT ON COLUMN BS_TEMP_DRIVER.CERT_CYZG IS '从业资格证';
COMMENT ON COLUMN BS_TEMP_DRIVER.EDUCATION IS '学历';
COMMENT ON COLUMN BS_TEMP_DRIVER.NATION IS '民族';
COMMENT ON COLUMN BS_TEMP_DRIVER.LIST_WORK_EXPERIENCE IS '工作经历信息集合';
COMMENT ON COLUMN BS_TEMP_DRIVER.LIST_FAMILY IS '家庭成员信息集合';
COMMENT ON COLUMN BS_TEMP_DRIVER.MARRY IS '婚姻状况';
COMMENT ON COLUMN BS_TEMP_DRIVER.DESC_ IS '备注';
COMMENT ON COLUMN BS_TEMP_DRIVER.CREDIT_ IS '信誉档案';
COMMENT ON COLUMN BS_TEMP_DRIVER.CERT_DRIVING_FIRST_DATE IS '本市驾驶证初领日期';
COMMENT ON COLUMN BS_TEMP_DRIVER.CY_START_YEAR IS '本市出租车从业初始年份';
COMMENT ON COLUMN BS_TEMP_DRIVER.VALID_START_DATE IS '身份证有效期开始日';
COMMENT ON COLUMN BS_TEMP_DRIVER.VALID_END_DATE IS '身份证有效期结束日';
COMMENT ON COLUMN BS_TEMP_DRIVER.INTERVIEW_DATE IS '面试日期';
COMMENT ON COLUMN BS_TEMP_DRIVER.REGISTER_DATE IS '报名时间';
COMMENT ON COLUMN BS_TEMP_DRIVER.CREDIT_DESC IS '信誉档案简述';
COMMENT ON COLUMN BS_TEMP_DRIVER.CRIME_RECODE IS '犯罪记录';
COMMENT ON COLUMN BS_TEMP_DRIVER.BACK_GROUND IS '背景调查';
COMMENT ON COLUMN BS_TEMP_DRIVER.ENTRY_CAR IS '将入车号';
COMMENT ON COLUMN BS_TEMP_DRIVER.APPLY_ATTRIBUTE IS '申请属性';
COMMENT ON COLUMN BS_TEMP_DRIVER.FORMER_UNIT IS '原单位';
COMMENT ON COLUMN BS_TEMP_DRIVER.ISSUE IS '签发机关';
COMMENT ON COLUMN BS_TEMP_DRIVER.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BS_TEMP_DRIVER.AUTHOR_ID IS '创建人ID';
COMMENT ON COLUMN BS_TEMP_DRIVER.MODIFIED_DATE IS '最后修改时间';
COMMENT ON COLUMN BS_TEMP_DRIVER.MODIFIER_ID IS '最后修改人ID';
COMMENT ON COLUMN BS_TEMP_DRIVER.CREDIT_DATE IS '信誉档案最后更新时间';
ALTER TABLE BS_TEMP_DRIVER ADD CONSTRAINT BSFK_TEMP_DRIVER_AUTHOR FOREIGN KEY (AUTHOR_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);
ALTER TABLE BS_TEMP_DRIVER ADD CONSTRAINT BSFK_TEMP_DRIVER_MODIFIER FOREIGN KEY (MODIFIER_ID)
      REFERENCES BC_IDENTITY_ACTOR_HISTORY (ID);


-- 司机招聘流程记录表
CREATE TABLE BS_TEMP_DRIVER_WORKFLOW(
	ID  INTEGER  NOT NULL, 
	PID INTEGER  NOT NULL,
	PROC_INST_ID VARCHAR(255) NOT NULL,
	OFFER_STATUS NUMERIC(1) DEFAULT 1,
	START_TIME TIMESTAMP,
	CONSTRAINT BSPK_TEMP_DRIVER_WORKFLOW PRIMARY KEY (ID)
);
COMMENT ON TABLE BS_TEMP_DRIVER_WORKFLOW IS '司机招聘流程记录表';
COMMENT ON COLUMN BS_TEMP_DRIVER_WORKFLOW.PID IS '司机招聘记录表ID';
COMMENT ON COLUMN BS_TEMP_DRIVER_WORKFLOW.PROC_INST_ID IS '流程实例ID';
COMMENT ON COLUMN BS_TEMP_DRIVER_WORKFLOW.OFFER_STATUS IS '审批结果 1=审批中，2=聘用，3=弃用';
COMMENT ON COLUMN BS_TEMP_DRIVER_WORKFLOW.START_TIME IS '流程发起时间';
ALTER TABLE BS_TEMP_DRIVER_WORKFLOW ADD CONSTRAINT BSFK_TEMP_DRIVER_WORKFLOW_PID FOREIGN KEY (PID)
      REFERENCES BS_TEMP_DRIVER (ID);


-- 插入资源
insert into BC_IDENTITY_RESOURCE (ID,STATUS_,INNER_,TYPE_,BELONG,ORDER_,NAME,URL,ICONCLASS) 
	select NEXTVAL('CORE_SEQUENCE'), 0, false, 2, m.id, '030303','司机招聘', '/bc-business/tempDrivers/paging', 'i0502' from BC_IDENTITY_RESOURCE m where m.order_='030300'
	and not exists(select 1 from BC_IDENTITY_RESOURCE where name='司机招聘');

-- 插入司机招聘管理角色数据
insert into  BC_IDENTITY_ROLE (ID, STATUS_,INNER_,TYPE_,ORDER_,CODE,NAME) 
	select NEXTVAL('CORE_SEQUENCE'), 0, false,  0,'0148', 'BS_TEMP_DRIVER','司机招聘管理' from BC_IDENTITY_ROLE
	where code='BC_ADMIN' and not EXISTS (select 1 from BC_IDENTITY_ROLE where code='BS_TEMP_DRIVER');

-- 插入司机招聘查询角色数据
insert into  BC_IDENTITY_ROLE (ID, STATUS_,INNER_,TYPE_,ORDER_,CODE,NAME) 
	select NEXTVAL('CORE_SEQUENCE'), 0, false,  0,'0149', 'BS_TEMP_DRIVER_READ','司机招聘查询' from BC_IDENTITY_ROLE
	where code='BC_ADMIN' and not EXISTS (select 1 from BC_IDENTITY_ROLE where code='BS_TEMP_DRIVER_READ');

-- 插入司机招聘查询高级角色数据
insert into  BC_IDENTITY_ROLE (ID, STATUS_,INNER_,TYPE_,ORDER_,CODE,NAME) 
	select NEXTVAL('CORE_SEQUENCE'), 0, false,  0,'0150', 'BS_TEMP_DRIVER_READ_ADVANCED','司机招聘查询高级角色' from BC_IDENTITY_ROLE
	where code='BC_ADMIN' and not EXISTS (select 1 from BC_IDENTITY_ROLE where code='BS_TEMP_DRIVER_READ_ADVANCED');

insert into BC_IDENTITY_ROLE_RESOURCE (RID,SID) 
	select r.id,m.id from BC_IDENTITY_ROLE r,BC_IDENTITY_RESOURCE m where r.code in('BS_TEMP_DRIVER','BC_ADMIN','BS_TEMP_DRIVER_READ','BS_TEMP_DRIVER_READ_ADVANCED') 
	and m.type_ > 1 and m.order_ in ('030303')
	and not EXISTS(select 1 from bc_identity_role_resource 
													where rid in (select id from bc_identity_role where code in('BS_TEMP_DRIVER','BC_ADMIN','BS_TEMP_DRIVER_READ','BS_TEMP_DRIVER_READ_ADVANCED')) 
													and sid in(select id from bc_identity_resource where type_>1 and order_='030303'))
	order by m.order_;

-- 创建刷卡记录用的序列，开始于1000
CREATE sequence IDCARD_SEQUENCE
    minvalue 1
    start with 1000
    increment by 1
    cache 20;

CREATE TABLE BC_IDCARD(
	ID INT NOT NULL,
	TYPE_ int NOT NULL default 0,
	CODE VARCHAR(20) NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	SEX VARCHAR(10) NOT NULL,
	FOLK VARCHAR(10) NOT NULL,
	BIRTHDATE date NOT NULL,
	ISSUE VARCHAR(255) NOT NULL,
	START_DATE date NOT NULL,
	END_DATE date NOT NULL,
	ADDRESS VARCHAR(500) NOT NULL,
	NEW_ADDRESS VARCHAR(500),
	FILE_DATE TIMESTAMP NOT NULL,
	AUTHOR_ID int NOT NULL,
	MODIFIED_DATE TIMESTAMP,
	MODIFIER_ID int,
	ISNEW int NOT NULL default 0,
	PIC BYTEA,
	CONSTRAINT BCPK_IDCARD PRIMARY KEY (ID),
	CONSTRAINT BCUK_IDCARD_NUM UNIQUE (TYPE_,CODE)
);
COMMENT ON TABLE BC_IDCARD IS '身份证';
COMMENT ON COLUMN BC_IDCARD.ID IS 'ID';
COMMENT ON COLUMN BC_IDCARD.TYPE_ IS '用途:0-司机招聘,1-系统用户';
COMMENT ON COLUMN BC_IDCARD.CODE IS '身份证号';
COMMENT ON COLUMN BC_IDCARD.NAME IS '姓名';
COMMENT ON COLUMN BC_IDCARD.SEX IS '性别';
COMMENT ON COLUMN BC_IDCARD.FOLK IS '民族 : (不带路径的部分)';
COMMENT ON COLUMN BC_IDCARD.BIRTHDATE IS '出生日期';
COMMENT ON COLUMN BC_IDCARD.ISSUE IS '签发机关';
COMMENT ON COLUMN BC_IDCARD.START_DATE IS '有效期-开始';
COMMENT ON COLUMN BC_IDCARD.END_DATE IS '有效期-结束';
COMMENT ON COLUMN BC_IDCARD.ADDRESS IS '住址';
COMMENT ON COLUMN BC_IDCARD.NEW_ADDRESS IS '最新住址';
COMMENT ON COLUMN BC_IDCARD.ISNEW IS '是否为最新记录:0-最新,1-历史';
COMMENT ON COLUMN BC_IDCARD.FILE_DATE IS '创建时间';
COMMENT ON COLUMN BC_IDCARD.AUTHOR_ID IS '创建人:对应Actor的ID';
COMMENT ON COLUMN BC_IDCARD.MODIFIED_DATE IS '最后更新时间';
COMMENT ON COLUMN BC_IDCARD.MODIFIER_ID IS '最后更新人:对应Actor的ID';
COMMENT ON COLUMN BC_IDCARD.PIC IS '图像';
ALTER TABLE BC_IDCARD ADD CONSTRAINT BCFK_IDCARD_AUTHOR FOREIGN KEY (AUTHOR_ID)
	REFERENCES BC_IDENTITY_ACTOR (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE BC_IDCARD ADD CONSTRAINT BCFK_IDCARD_MODIFIER FOREIGN KEY (MODIFIER_ID)
	REFERENCES BC_IDENTITY_ACTOR (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
CREATE INDEX BCIDX_IDCARD_CODE ON BC_IDCARD (TYPE_, CODE, ISNEW);

CREATE TABLE BC_IDCARD_CHECK(
	ID INT NOT NULL,
	PID INT NOT NULL,
	FILE_DATE TIMESTAMP NOT NULL,
	AUTHOR_ID int NOT NULL,
	CONSTRAINT BCPK_IDCARD_CHECK PRIMARY KEY (ID)
);
COMMENT ON TABLE BC_IDCARD_CHECK IS '刷卡记录';
COMMENT ON COLUMN BC_IDCARD_CHECK.ID IS 'ID';
COMMENT ON COLUMN BC_IDCARD_CHECK.PID IS '身份证';
COMMENT ON COLUMN BC_IDCARD_CHECK.FILE_DATE IS '刷卡时间';
COMMENT ON COLUMN BC_IDCARD.AUTHOR_ID IS '创建人:对应Actor的ID';
ALTER TABLE BC_IDCARD_CHECK ADD CONSTRAINT BC_IDCARD_CHECK_PID FOREIGN KEY (PID)
	REFERENCES BC_IDCARD (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE BC_IDCARD_CHECK ADD CONSTRAINT BCFK_IDCARD_CHECK_AUTHOR FOREIGN KEY (AUTHOR_ID)
	REFERENCES BC_IDENTITY_ACTOR (ID) ON UPDATE RESTRICT ON DELETE RESTRICT;

-- 身份证读卡器使用岗
insert into BC_IDENTITY_ACTOR (ID,UID_,STATUS_,INNER_,TYPE_,CODE, NAME, ORDER_,PCODE,PNAME) 
	select NEXTVAL('CORE_SEQUENCE'),'IDCARD_USERS', 0, true, 3, 'IDCARD_USERS','身份证读卡器使用岗', '0000',null,null
	from bc_dual
	where not exists (select 0 from BC_IDENTITY_ACTOR where CODE='IDCARD_USERS'); 
insert into BC_IDENTITY_ACTOR_RELATION (TYPE_,MASTER_ID,FOLLOWER_ID) 
    select 0,am.id,af.id from BC_IDENTITY_ACTOR am,BC_IDENTITY_ACTOR af 
	where am.code='baochengzongbu' and af.code='IDCARD_USERS'
	and not exists (select 0 from BC_IDENTITY_ACTOR_RELATION ar where ar.TYPE_=0 and ar.MASTER_ID=am.id and ar.FOLLOWER_ID=af.id); 
insert into BC_IDENTITY_ACTOR_RELATION (TYPE_,MASTER_ID,FOLLOWER_ID) 
    select 0,am.id,af.id from BC_IDENTITY_ACTOR am,BC_IDENTITY_ACTOR af 
	where am.code='IDCARD_USERS' and af.code in ('admin','ghy','xu','hrj','lubaojin','zxr')
	and not exists (select 0 from BC_IDENTITY_ACTOR_RELATION ar where ar.TYPE_=0 and ar.MASTER_ID=am.id and ar.FOLLOWER_ID=af.id); 

-- 创建触发器
CREATE or Replace FUNCTION antoInsertTempDriver() RETURNS trigger AS $$  
DECLARE
	did int := 0;
BEGIN
	select id into did from bs_temp_driver where cert_identity=NEW.code;
	If (did > 0) THEN  
		If (TG_OP = 'UPDATE') THEN  
			-- 更新司机招聘信息
			update bs_temp_driver set name=NEW.name
				,sex=CASE WHEN NEW.sex='男' THEN 1 ELSE 2 END
				,nation=NEW.FOLK
				,birthdate=NEW.BIRTHDATE
				,address=NEW.ADDRESS
				,cert_identity=NEW.code
				,issue=NEW.ISSUE
				,valid_start_date=NEW.START_DATE
				,valid_end_date=NEW.END_DATE
				,file_date=NEW.FILE_DATE
				,author_id=1146
				where id=did;
			return null; 
		END IF;
	Else 
		If (TG_OP = 'INSERT') THEN  
			-- 插入新的司机招聘信息
			INSERT INTO bs_temp_driver(id,uid_,status_,name
				,sex,nation,birthdate,address
				,cert_identity,issue,valid_start_date,valid_end_date,file_date,author_id,region_)
				VALUES (NEXTVAL('hibernate_sequence'),'tempDriver.auid.'||NEXTVAL('hibernate_sequence'),0,NEW.name
				,CASE WHEN NEW.sex='男' THEN 1 ELSE 2 END,NEW.FOLK,NEW.BIRTHDATE,NEW.ADDRESS
				,NEW.code,NEW.ISSUE,NEW.START_DATE,NEW.END_DATE,NEW.FILE_DATE,1146
				,CASE WHEN NEW.address like '%广州%' THEN 1 
					WHEN NEW.address like '%广东%' THEN 2 
					WHEN NEW.CODE like '44%' THEN 2 
					ELSE 3 END);
			return null;  
		END IF;
	END IF;
	return null;
END;
$$ LANGUAGE plpgsql;  
DROP TRIGGER IF EXISTS trigger_antoInsertTempDriver on BC_IDCARD;
CREATE TRIGGER trigger_antoInsertTempDriver AFTER INSERT or UPDATE ON BC_IDCARD  
    FOR EACH ROW EXECUTE PROCEDURE antoInsertTempDriver();