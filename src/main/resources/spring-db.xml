<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 配置数据库连接 -->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="JdbcUtils" class="cn.bc.db.JdbcUtils" p:dbtype="${db_type}" />
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- 声明使用Hibernate的JPA适配器：注意如果不配置这个，应用异常时activiti的数据并不会回滚 -->
	    <property name="jpaVendorAdapter">
	        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
	    </property>
	    
	    <!-- 声明使用Hibernate的JPA方言：如果配置了jpaVendorAdapter就无需配置这个，
	    	因为 HibernateJpaVendorAdapter 默认已使用了 HibernateJpaDialect
		<property name="jpaDialect">
	        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
	    </property> -->

		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<value>
				hibernate.dialect=${hibernate_dialect}
				hibernate.show_sql=${hibernate_showSql}
				hibernate.hbm2ddl.auto=${hibernate_hbm2ddl_auto}
			</value>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 基于驱动的数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${db_driverClassName}" p:url="${db_url}"
		p:username="${db_username}" p:password="${db_password}" />

	<!-- 基于jndi的数据源:jndiName不要使用 java:comp/env/jdbc/${jndi_name} 而是使用 jdbc/${jndi_name} 的形式进行配置
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jdbc/${jndi_name}</value>
		</property>
	</bean> -->

	<!-- 在Spring中创建c3p0数据源
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db_driverClassName}" />
		<property name="jdbcUrl" value="${db_url}" />
		<property name="properties">
			<props>
				<prop key="c3p0.minPoolSize">1</prop>
				<prop key="hc3p0.maxPoolSize">10</prop>
				<prop key="hc3p0.timeout">60</prop>
				<prop key="c3p0.max_statement">50</prop>
				<prop key="c3p0.testConnectionOnCheckout">true</prop>
				<prop key="user">${db_username}</prop>
				<prop key="password">${db_password}</prop>
			</props>
		</property>
	</bean> -->
		
	<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
		<constructor-arg ref="entityManagerFactory" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
</beans>